{"version":3,"sources":["logo.svg","Pictures/avatar.jpg","Others/Header.js","Actions/GeneralActions/index.js","Content/HomePage/WelcomePage.js","Content/Calculator/index.js","Actions/UserActions/index.js","Content/UserPage/index.js","Content/Time/Components/StopWatch.js","Components/SnackBars/SnackSuccess.js","Content/Time/Components/Countdown.js","Content/Time/index.js","Content/Arrays/index.js","Content/Uno/Card.js","Content/Uno/index.js","Content/ToDo/Components/Lists.js","Actions/ToDoActions/index.js","Content/ToDo/Components/TaskView.js","Content/ToDo/Components/CurrentList.js","Content/ToDo/Components/ListEdit.js","Data/User.js","Content/ToDo/index.js","Components/TextEditor.js","Data/Settings/darkPickerColors.js","Actions/NotesActions/index.js","Content/Notes/NotesView.js","Actions/CountersActions/index.js","Content/Notes/index.js","Content/Counters/CounterView.js","Content/Counters/index.js","Content/String/Components/Convert.js","Content/String/Components/Decorate.js","Content/String/index.js","lib/Common/index.js","Content/Randomiser/Components/Rnd_number.js","Content/Randomiser/Components/Rnd_color.js","Content/Randomiser/Components/Coin.js","Content/Randomiser/Components/Dice.js","Content/Randomiser/index.js","Content/Quizes/QuizTile.js","Components/SnackBars/SnackError.js","Content/Quizes/Summary.js","Actions/QuizActions/index.js","Content/Quizes/EditQuiz.js","Content/Quizes/index.js","Content/Facts/index.js","Content/index.js","Shell/Shell.js","App.js","registerServiceWorker.js","Data/General.js","Reducers/GeneralReducer/index.js","Reducers/UserReducer/index.js","Data/Uno.js","Reducers/UnoReducer/index.js","Data/ToDo.js","Reducers/ToDoReducer/index.js","Data/Counters.js","Reducers/CountersReducer/index.js","Data/Notes.js","Reducers/NotesReducer/index.js","Data/Quizes.js","Reducers/QuizesReducer/index.js","Reducers/index.js","index.js"],"names":["module","exports","ExtendedHeader","style","width","marginTop","marginBottom","textAlign","display","zDepth","rounded","transitionEnabled","className","src","logo","alt","Component","page_change","page","type","toggle_header","toggle_drawer","MainActions","GeneralActions","useStyles","makeStyles","card","minWidth","maxWidth","marginLeft","marginRight","bullet","margin","transform","title","fontSize","pos","button","actions","connect","state","User","dispatch","bindActionCreators","props","classes","useState","fact","setFact","useEffect","url","moment","format","fetch","then","response","text","data","name","CardContent","Typography","color","gutterBottom","CardActions","Button","size","onClick","variant","Calculator","fN","operation","sN","first","this","fNum","parseInt","sNum","setState","num","paperStyle","operationsDiv","backgroundColor","cyan500","operationsButtons","numbersDiv","grey800","grey400","flatButton","height","borderRadius","actionButton","inputStyle","iconButtons","hintText","value","floatingLabelShrinkStyle","floatingLabelText","onInput","event","target","label","substring","length","clearAll","rippleColor","labelStyle","Table","selectable","displayRowCheckbox","displayBorder","addNum","disabled","secondary","result","name_change","UserActions","UserPage","userName","elevation","UserPaper","id","onChange","compose","withStyles","theme","spacing","palette","background","paper","padding","Stopwatch","updateDisplay","bind","flags","action","time","timer","initial","add","clearInterval","ID","Math","floor","random","Fade","in","Tooltip","IconButton","aria-label","setFlag","Fab","fab","setInterval","map","flag","index","chip","key","Badge","badgeContent","Chip","avatar","Avatar","renderDisplay","renderControls","renderFlags","Success","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","handleClose","SnackbarContent","classNames","success","aria-describedby","message","icon","iconVariant","close","green","error","dark","info","primary","warning","amber","opacity","alignItems","Countdown","handleSBClose","h","m","s","snackBarSuccess","arr","i","obj","push","InputFields","select","e","handleInputChange","InputProps","startAdornment","InputAdornment","position","makeOptionsArr","option","MenuItem","subtract","handleStartPause","Time","updateNowInState","now","handleDateChange","date","console","log","unix","compare","date1","date2","Menu","Title","Icon","Current","inter","MuiPickersUtilsProvider","utils","MomentUtils","disableToolbar","KeyboardButtonProps","from","compareTime","Content","renderContentInner","List","component","dense","item","Zoom","transitionDelay","ListItem","ListItemText","Divider","Grid","container","direction","justify","renderMenu","renderContent","minHeight","justifyContent","root","flexGrow","bottom","right","main","Arrays","handleChange","panel","expanded","divisedBy","n","w","isPrime","newRow","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","renderNumbers","returnEven","returnOdd","returnFibonacci","returnPrime","returnDivisible","ExpansionPanelActions","FormControl","Select","Card","Color","Number","Uno","Lists","Todos","filter","task","Completed","Tabs","current","changeCurrent","indicatorColor","textColor","scrollButtons","Todo","Tab","renderBadgeNumber","ListName","contentAlign","new_task","new_list","delete_list","delete_task","edit_task","edit_list","ToDoActions","TaskView","handleTaskEdit","onSubmit","Task","Text","Notes","Importance","preventDefault","isEditing","listID","handleModalClose","Dialog","showTaskModal","aria-labelledby","DialogTitle","DialogContent","FormControlLabel","control","Checkbox","checked","InputLabel","htmlFor","Input","autoFocus","fullWidth","multiline","rows","DialogActions","CurrentList","handleSnackbarClose","handleUndoDelete","showCompleted","showUncompleted","showSnackbar","lastDeleted","list","currentList","tasks","findById","lowImportance","normalImportance","highImportance","role","undefined","listItem","ListItemAvatar","renderItemImportance","listItemCompleted","ListItemSecondaryAction","ListSubheader","filterTasks","renderItems","ContentProps","textDecoration","arrow","paddingTop","verticalAlign","buttonDelete","ListEdit","Archived","ToDo","newList","tdl","showNewListPopup","exitPopups","UserName","showNewTaskPopup","lastDeletedList","showEditListPopup","nextCurrent","lists","cancel","toggleItem","deleteItem","listName","newTask","TransitionComponent","renderMoreListOptions","extendedIcon","TextEditor","modules","toolbar","formats","darkColors","new_note","edit_note","delete_note","NotesActions","NotesView","handleDelete","Note","Date","prevProps","isNew","newValue","changeCurrentOnAdd","note","required","placeholder","handleValueChange","colors","circleSpacing","hex","handleCancel","editorSpace","increase","decrease","new_counter","edit_counter","delete_counter","CountersActions","EmptyNote","currentNote","getFirst","prevState","notesList","_","find","currentID","renderFabButton","renderNotesList","CounterView","Counter","Value","Goal","Counters","counterModal","exitModals","showEditModal","showNewCounterPopup","CounterToEdit","LinearProgress","progress","bar","Slide","mountOnEnter","unmountOnExit","raised","badge","leftDiv","minusButton","rightDiv","renderProgress","renderCounters","renderNewCounterModal","renderEditCounterModal","white","fontWeight","cursor","top","left","paddingRight","borderRight","paddingLeft","borderLeft","completedProgress","uncompletedProgress","Convert","input","convertorID","output","convertors","Label","toUpperCase","toLowerCase","split","reverse","join","Morse","ROT13","str","x","indexOf","letters","morseLetters","newText","j","rowsMax","convertDiv","SelectProps","MenuProps","menu","helperText","readOnly","arrowDiv","renderInputCard","renderArrowDown","renderConvertTypeCard","renderOutputCard","mixins","gutters","paddingBottom","Decorate","Decorations","DataTransfer","items","navigator","clipboard","writeText","decorationsWrapper","textToDisplay","copyButton","copyToClipboard","textField","inputProps","autoComplete","renderDecorations","maxHeight","overflowY","String","square","renderTabs","renderTabContent","rnd_num","min","max","rnd_color","RndNumber","NumberOfIntegers","Min","Max","NumberOfColumns","Highlight","NumbersToShow","generateNumbers","mainArr","content","defaultValue","handleNumberChange","textField1","textField2","showNumbers","RndColor","changeColor","showColor","propsDiv","transitionDuration","Coin","handleFlip","showCoin","CircularProgress","lineHeight","Dice","NumberOfDices","Dices","generateDices","dice","diceInner","showDices","diceSpan","Randomiser","handleMenuClick","menuCard","renderChips","flexWrap","details","flexDirection","flex","cover","controls","playIcon","editIcon","deleteIcon","withTheme","quiz","Name","slice","ShortDescription","onPlay","onDelete","Error","Summary","showSummary","handleSummaryClose","QuizName","results","r","QuestionText","isCorrect","UserAnswer","CorrectAnswer","delete_quiz","new_quiz","EditQuiz","Quiz","Tags","Questions","Answers","Correct","CurrentID","uniqueId","Q","A","CurrentQuestion","handleQuestionChange","handleAnswerChange","renderFields","QuizActions","Quizes","currentPage","toEdit","toPlay","shuffledQuestions","nextQuestion","isFinished","answerResults","showDeleteSnackbar","snackMessage","snackType","lastDeletedQuiz","handlePlay","handleDeleteQuiz","QuestionsArray","shuffle","Question","returnShuffledQuiz","QuizTile","Ans","newQuiz","renderDefaultQuizes","getNextQuestion","handleAnswer","renderPage","renderSnackBar","renderSummary","renderUndoDeleteSnackbar","RenderPage","General","Shell","ListItemIcon","AppBar","appBar","isDrawerOpen","appBarShift","Toolbar","disableGutters","menuButton","hide","grow","noWrap","isHeaderOpen","window","Profilna","Drawer","drawerPaper","drawerPaperClose","renderIcon","MenuList","renderMenuItem","React","zIndex","overflow","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","dislay","whiteSpace","overflowX","breakpoints","up","default","bigAvatar","createMuiTheme","purple","typography","useNextVariants","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","initialState","Src","ToDoLists","ToDoReducer","deepFreeze","hasOwnProperty","CountersReducer","isNaN","DefaultQuizes","combineReducers","store","createStore","reducer","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,22CC2B5BC,E,iLAbP,OACI,kBAAC,IAAD,CAAOC,MARG,CACVC,MAAO,MACPC,WAAY,GACZC,aAAc,GACdC,UAAW,SACXC,QAAS,gBAGYC,OAAQ,EAAGC,SAAS,EAAOC,mBAAmB,GAC/D,4BAAQC,UAAU,cACd,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,wBAAIH,UAAU,aAAd,qBACA,2EACA,iF,GAfSI,a,2FCLtB,SAASC,GAAYC,GACxB,MAAO,CACHC,KAAM,cACND,QAID,SAASE,KACZ,MAAO,CACHD,KAAM,iBAIP,SAASE,KACZ,MAAO,CACHF,KAAM,iBCDd,IAAMG,GAAW,eACVC,GAGDC,GAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,IACVC,SAAU,IACVC,WAAY,OACZC,YAAa,OACbxB,aAAc,IAElByB,OAAQ,CACJvB,QAAS,eACTwB,OAAQ,QACRC,UAAW,cAEfC,MAAO,CACHC,SAAU,GACV5B,UAAW,QAEf6B,IAAK,CACD9B,aAAc,IAElB+B,OAAQ,CACJL,OAAQ,IAEZM,QAAS,CACL/B,UAAW,YA4DJgC,eAAQ,SAAAC,GAGnB,MAAO,CACHC,KAHaD,EAATC,OAMR,SAAAC,GACI,OAAOC,YAAmBrB,GAAaoB,IARhCH,CAxDK,SAACK,GAAW,IACpB3B,EAA8C2B,EAA9C3B,YAAaG,EAAiCwB,EAAjCxB,cAAeC,EAAkBuB,EAAlBvB,cAE9BwB,EAAUrB,KAHW,EAIHsB,mBAAS,IAJN,mBAIpBC,EAJoB,KAIdC,EAJc,KAe3B,OATAC,oBAAU,WACN,IAAIC,EAAG,gCAA4BC,MAASC,OAAO,OAA5C,SACPC,MAAMH,GACDI,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAAAG,GACFT,EAAQS,MAEjB,IAGC,6BACI,wCAAcb,EAAMH,KAAKiB,KAAzB,MACA,kBAAC,IAAD,CAAM9C,UAAWiC,EAAQnB,MACrB,kBAACiC,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYhD,UAAWiC,EAAQX,MAAO2B,MAAM,gBAAgBC,cAAY,GAAxE,eAGCf,GAEL,kBAACgB,EAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WAAQjD,EAAY,WAAlD,wBAGR,kBAAC,IAAD,CAAML,UAAWiC,EAAQnB,MACrB,kBAACiC,GAAA,EAAD,KACI,0DAEJ,kBAACI,EAAA,EAAD,CAAanD,UAAWiC,EAAQP,SAC5B,kBAAC0B,GAAA,EAAD,CAAQG,QAAQ,YAAYF,KAAK,QAAQrD,UAAWiC,EAAQR,OACxD6B,QAAS,WAAQ7C,MAEjB,uBAAGT,UAAU,kBAAb,aAHJ,aAQA,kBAACoD,GAAA,EAAD,CAAQG,QAAQ,YAAYF,KAAK,QAAQrD,UAAWiC,EAAQR,OACxD6B,QAAS,WAAQ9C,MAEjB,uBAAGR,UAAU,kBAAb,QAHJ,oB,qGCyNLwD,G,YAzRX,WAAYxB,GAAQ,IAAD,8BACf,4CAAMA,KACDJ,MAAQ,CACT6B,GAAI,GACJC,UAAW,GACXC,GAAI,GACJC,OAAO,GANI,E,sEAWf,IAAKC,KAAKjC,MAAMgC,OAASC,KAAKjC,MAAM+B,GAAI,CACpC,IAAIG,EAAOC,SAASF,KAAKjC,MAAM6B,GAAI,IAC/BO,EAAOD,SAASF,KAAKjC,MAAM+B,GAAI,IACnC,OAAQE,KAAKjC,MAAM8B,WACf,IAAK,IACDG,KAAKI,SAAS,CACVR,GAAIK,EAAOE,EACXN,UAAW,GACXC,GAAI,GACJC,OAAO,IAEX,MACJ,IAAK,IACDC,KAAKI,SAAS,CACVR,GAAIK,EAAOE,EACXN,UAAW,GACXC,GAAI,GACJC,OAAO,IAEX,MACJ,IAAK,OACDC,KAAKI,SAAS,CACVR,GAAIK,EAAOE,EACXN,UAAW,GACXC,GAAI,GACJC,OAAO,IAEX,MACJ,IAAK,OACDC,KAAKI,SAAS,CACVR,GAAIK,EAAOE,EACXN,UAAW,GACXC,GAAI,GACJC,OAAO,IAEX,MACJ,QACI,W,6BAKTM,GACCL,KAAKjC,MAAMgC,MACXC,KAAKI,SAAS,CACVR,GAAII,KAAKjC,MAAM6B,GAAKS,IAGxBL,KAAKI,SAAS,CACVN,GAAIE,KAAKjC,MAAM+B,GAAKO,M,iCAM5BL,KAAKI,SAAS,CACVR,GAAI,GACJC,UAAW,GACXC,GAAI,GACJC,OAAO,M,+BAIL,IAAD,OACCrE,EAAQ,CACV4E,WAAY,CACR3E,MAAO,QACPyB,WAAY,OACZC,YAAa,OACbzB,UAAW,OAEf2E,cAAe,CACX5E,MAAO,OACP6E,gBAAiBC,WACjBrB,MAAO,SAEXsB,kBAAmB,CACfhD,SAAU,OACV0B,MAAO,SAEXuB,WAAY,CACRH,gBAAiBI,WACjBxB,MAAOyB,YAEXC,WAAY,CACRC,OAAQ,OACRpF,MAAO,OACPqF,aAAc,QAElBC,aAAc,CACV7D,WAAY,GACZgC,MAAO,QACP1B,SAAU,QAEdwD,WAAY,CACRxD,SAAU,OACV5B,UAAW,QACXH,MAAO,MACPI,QAAS,gBAEboF,YAAa,CACTpF,QAAS,iBAGjB,OACI,6BACI,kBAAC,IAAD,CAAOL,MAAOA,EAAM4E,WAAYtE,OAAQ,EAAGC,SAAS,EAAOC,mBAAmB,GAC1E,kBAAC,KAAD,CACIkF,SAAS,mBACTC,MAAOrB,KAAKjC,MAAMgC,MAAQC,KAAKjC,MAAM6B,GAAKI,KAAKjC,MAAM+B,GACrDpD,KAAK,SACLhB,MAAOA,EAAMwF,WACbI,yBAA0B,CAAE5D,SAAU,OAAQ5B,UAAW,SACzDyF,kBAAmBvB,KAAKjC,MAAM6B,GAAK,IAAMI,KAAKjC,MAAM8B,UAAY,IAAMG,KAAKjC,MAAM+B,GACjF0B,QACI,SAACC,GACG,EAAK1D,MAAMgC,MACP,EAAKK,SAAS,CACVR,GAAI6B,EAAMC,OAAOL,QAGrB,EAAKjB,SAAS,CACVN,GAAI2B,EAAMC,OAAOL,WAKrC,kBAAC,KAAD,CAAY3F,MAAOA,EAAMyF,YAAalC,KAAM,MAAO0C,MAAM,MAAMlC,QAC3D,SAACgC,GACG,IAAIxB,EAAO,GAAK,EAAKlC,MAAM6B,GACvBO,EAAO,GAAK,EAAKpC,MAAM+B,GACvB,EAAK/B,MAAMgC,MACE,KAATE,GACA,EAAKG,SAAS,CACVR,GAAIK,EAAK2B,UAAU,EAAG3B,EAAK4B,OAAS,KAI/B,KAAT1B,GACA,EAAKC,SAAS,CACVN,GAAIK,EAAKyB,UAAU,EAAGzB,EAAK0B,OAAS,OAMpD,uBAAG1F,UAAU,kBAAb,cAIJ,kBAAC,KAAD,CAAYT,MAAOA,EAAMyF,YAAa1B,QAAS,WAAM,EAAKqC,aACtD,uBAAG3F,UAAU,kBAAb,UAIJ,6BACA,kBAAC,IAAD,CAAOH,OAAQ,EAAGN,MAAOA,EAAM6E,eAC3B,kBAAC,KAAD,CAAY7E,MAAO,CAAEqF,OAAQ,OAAQpF,MAAO,OAAQqF,aAAc,QAAW/B,KAAM,IAAK8C,YAAY,QAAQC,WAAYtG,EAAMgF,kBAAmBiB,MAAM,IAAIlC,QACvJ,SAACgC,GACG,EAAKrB,SAAS,CACVP,UAAW,IACXE,OAAO,OAInB,kBAAC,KAAD,CAAYrE,MAAO,CAAEqF,OAAQ,OAAQpF,MAAO,OAAQqF,aAAc,QAAW/B,KAAM,IAAK8C,YAAY,QAAQJ,MAAM,IAAIK,WAAYtG,EAAMgF,kBAAmBjB,QACvJ,SAACgC,GACG,EAAKrB,SAAS,CACVP,UAAW,IACXE,OAAO,OAInB,kBAAC,KAAD,CAAYrE,MAAO,CAAEqF,OAAQ,OAAQpF,MAAO,OAAQqF,aAAc,QAAW/B,KAAM,OAAK8C,YAAY,QAAQJ,MAAM,OAAIK,WAAYtG,EAAMgF,kBAAmBjB,QACvJ,SAACgC,GACG,EAAKrB,SAAS,CACVP,UAAW,OACXE,OAAO,OAInB,kBAAC,KAAD,CAAYrE,MAAO,CAAEqF,OAAQ,OAAQpF,MAAO,OAAQqF,aAAc,QAAW/B,KAAM,OAAK8C,YAAY,QAAQJ,MAAM,OAAIK,WAAYtG,EAAMgF,kBAAmBjB,QACvJ,SAACgC,GACG,EAAKrB,SAAS,CACVP,UAAW,OACXE,OAAO,QAKvB,kBAACkC,GAAA,MAAD,CAAOvG,MAAOA,EAAMiF,WAAYuB,YAAY,GACxC,kBAACD,GAAA,UAAD,CAAWE,oBAAoB,GAC3B,kBAACF,GAAA,SAAD,CAAUG,eAAe,GACrB,kBAACH,GAAA,eAAD,KACI,kBAAC,KAAD,CAAYvG,MAAOA,EAAMoF,WAAYiB,YAAY,QAAQJ,MAAM,IAAIK,WAAYtG,EAAMgF,kBAAmBjB,QAAS,WAC7G,EAAK4C,OAAO,OAGpB,kBAACJ,GAAA,eAAD,KACI,kBAAC,KAAD,CAAYvG,MAAOA,EAAMoF,WAAYiB,YAAY,QAAQJ,MAAM,IAAIK,WAAYtG,EAAMgF,kBAAmBjB,QAAS,WAC7G,EAAK4C,OAAO,OAGpB,kBAACJ,GAAA,eAAD,KACI,kBAAC,KAAD,CAAYvG,MAAOA,EAAMoF,WAAYiB,YAAY,QAAQJ,MAAM,IAAIK,WAAYtG,EAAMgF,kBAAmBjB,QAAS,WAC7G,EAAK4C,OAAO,QAIxB,kBAACJ,GAAA,SAAD,CAAUG,eAAe,GACrB,kBAACH,GAAA,eAAD,KACI,kBAAC,KAAD,CAAYvG,MAAOA,EAAMoF,WAAYiB,YAAY,QAAQJ,MAAM,IAAIK,WAAYtG,EAAMgF,kBAAmBjB,QAAS,WAC7G,EAAK4C,OAAO,OAGpB,kBAACJ,GAAA,eAAD,KACI,kBAAC,KAAD,CAAYvG,MAAOA,EAAMoF,WAAYiB,YAAY,QAAQJ,MAAM,IAAIK,WAAYtG,EAAMgF,kBAAmBjB,QAAS,WAC7G,EAAK4C,OAAO,OAGpB,kBAACJ,GAAA,eAAD,KACI,kBAAC,KAAD,CAAYvG,MAAOA,EAAMoF,WAAYiB,YAAY,QAAQJ,MAAM,IAAIK,WAAYtG,EAAMgF,kBAAmBjB,QAAS,WAC7G,EAAK4C,OAAO,QAIxB,kBAACJ,GAAA,SAAD,CAAUG,eAAe,GACrB,kBAACH,GAAA,eAAD,KACI,kBAAC,KAAD,CAAYvG,MAAOA,EAAMoF,WAAYiB,YAAY,QAAQJ,MAAM,IAAIK,WAAYtG,EAAMgF,kBAAmBjB,QAAS,WAC7G,EAAK4C,OAAO,OAGpB,kBAACJ,GAAA,eAAD,KACI,kBAAC,KAAD,CAAYvG,MAAOA,EAAMoF,WAAYiB,YAAY,QAAQJ,MAAM,IAAIK,WAAYtG,EAAMgF,kBAAmBjB,QAAS,WAC7G,EAAK4C,OAAO,OAGpB,kBAACJ,GAAA,eAAD,KACI,kBAAC,KAAD,CAAYvG,MAAOA,EAAMoF,WAAYiB,YAAY,QAAQJ,MAAM,IAAIK,WAAYtG,EAAMgF,kBAAmBjB,QAAS,WAC7G,EAAK4C,OAAO,QAIxB,kBAACJ,GAAA,SAAD,CAAUG,eAAe,GACrB,kBAACH,GAAA,eAAD,KACI,kBAAC,KAAD,CAAYvG,MAAOA,EAAMoF,WAAYiB,YAAY,QAAQJ,MAAM,IAAIK,WAAYtG,EAAMgF,kBAAmBjB,QAAS,WAC7G,EAAK4C,OAAO,MACbC,UAAU,KAEjB,kBAACL,GAAA,eAAD,KACI,kBAAC,KAAD,CAAYvG,MAAOA,EAAMoF,WAAYiB,YAAY,QAAQJ,MAAM,IAAIK,WAAYtG,EAAMgF,kBAAmBjB,QAAS,WAC7G,EAAK4C,OAAO,OAGpB,kBAACJ,GAAA,eAAD,KACI,kBAAC,KAAD,CAAsBvG,MAAOA,EAAMuF,aAAcsB,WAAW,EAAMvG,OAAQ,EAAGyD,QAAS,WAClF,EAAK+C,WADT,e,GA3QXjG,a,oBCvBlB,SAASkG,GAAYxD,GACxB,MAAO,CACHvC,KAAM,cACNuC,QCUR,IAAMpC,GAAW,eACV6F,GAmBDC,G,YACF,WAAYxE,GAAQ,IAAD,0BAGPsE,GAFR,4CAAMtE,KAEuBA,MAArBsE,YAHO,OAIf,EAAKA,YAAcA,EAEnB,EAAK1E,MAAQ,CACT6E,SAAU,IAPC,E,sEAWT,IAAD,OACGxE,EAAY4B,KAAK7B,MAAjBC,QACR,OACI,kBAAC,KAAD,CAAOyE,UAAW,GAAI1G,UAAWiC,EAAQ0E,WACrC,kBAAC,KAAD,CACIC,GAAG,mBACHrD,QAAQ,WACRiC,MAAM,YACNN,MAAOrB,KAAK7B,MAAMH,KAAKiB,KACvB+D,SAAU,SAACvB,GACP,EAAKgB,YAAYhB,EAAMC,OAAOL,UAGtC,6BACA,kBAAC9B,GAAA,EAAD,CAAQG,QAAQ,YAAYN,MAAM,YAAYjD,UAAWiC,EAAQR,QAAjE,oBAEI,uBAAGzB,UAAU,iBAAiBT,MAAO,CAAC0B,WAAY,QAAlD,wB,GA5BGb,aAqCR0G,OACXC,YAtDW,SAAAC,GAAK,MAAK,CACrBL,UAAW,CACPvF,OAAQ4F,EAAMC,QAAQ,GACtBzH,MAAO,OACPwB,SAAU,IACVqD,gBAAiB2C,EAAME,QAAQC,WAAWC,MAC1CnG,WAAY,OACZC,YAAa,OACbmG,QAAS,IAGb5F,OAAQ,CACJL,OAAQ4F,EAAMC,QAAQ,OA2C1BtF,YAAQ,SAAAC,GAGJ,MAAO,CACHC,KAHaD,EAATC,OAMR,SAAAC,GACI,OAAOC,YAAmBrB,GAAaoB,KAVpCgF,CAYbN,I,qHCzDIc,G,YACF,WAAYtF,GAAQ,IAAD,8BACf,4CAAMA,KAEDuF,cAAgB,EAAKA,cAAcC,KAAnB,iBAErB,EAAK5F,MAAQ,CACThC,QAAS,WACT6H,MAAO,GACPC,OAAQ,QACRC,KAAM,MAGV,EAAKC,MAAQ,KAZE,E,oFAgBf/D,KAAKgE,Y,sCAIL,OACI,4BACKhE,KAAKjC,MAAMhC,W,sCAKP,IAAD,OACZiE,KAAKI,SAAS,CACV0D,KAAMpF,IAAOsB,KAAKjC,MAAM+F,KAAKG,IAAI,EAAG,YACrC,WACC,EAAK7D,SAAS,CACVrE,QAAS2C,IAAO,EAAKX,MAAM+F,MAAMnF,OAAO,kB,gCAOhDqB,KAAKI,SAAS,CACVrE,QAAS,WACT6H,MAAO,GACPC,OAAQ,QACRC,KAAM,OAGVI,cAAclE,KAAK+D,S,gCAInB/D,KAAKI,SAAS,CACVwD,MAAM,GAAD,oBACE5D,KAAKjC,MAAM6F,OADb,CAED,CACIO,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBR,KAAM9D,KAAKjC,MAAMhC,e,uCAMf,IAAD,OACLqC,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAACmG,GAAA,EAAD,CAAMC,IAAI,GACN,6BACI,kBAACC,GAAA,EAAD,CAAShH,MAA6B,UAAtBuC,KAAKjC,MAAM8F,OAAqB,aAAe,SAC3D,kBAACa,EAAA,EAAD,CACItF,MAAM,YACNjD,UAAWiC,EAAQR,OACnB+G,aAAW,cACXlF,QAAS,WACiB,UAAtB,EAAK1B,MAAM8F,OACL,EAAKe,UACL,EAAKZ,YAGf,uBAAG7H,UAAU,kBACc,UAAtB6D,KAAKjC,MAAM8F,OAAqB,gBAAkB,aAK/D,kBAACgB,GAAA,EAAD,CACInF,QAAQ,WACRN,MAAM,UACNjD,UAAWiC,EAAQ0G,IACnBrF,QAAS,WACL,EAAKW,SAAS,CACVyD,OAA8B,UAAtB,EAAK9F,MAAM8F,OAAqB,QAAU,QAClDC,KAA6B,aAAvB,EAAK/F,MAAMhC,QACX2C,IAAO,WAAY,YACnB,EAAKX,MAAM+F,MAClB,WAC2B,UAAtB,EAAK/F,MAAM8F,OACX,EAAKE,MAAQgB,YAAY,EAAKrB,cAAe,KAE7CQ,cAAc,EAAKH,WAI/B,uBAAG5H,UAAU,iBAAiBT,MAAO,CAAE2B,YAAa,SACzB,UAAtB2C,KAAKjC,MAAM8F,OAAqB,QAAU,cAExB,UAAtB7D,KAAKjC,MAAM8F,OAAqB,QAAU,SAG/C,kBAACY,GAAA,EAAD,CAAShH,MAAO,eACZ,kBAACiH,EAAA,EAAD,CACItF,MAAM,YACNjD,UAAWiC,EAAQR,OACnB+G,aAAW,eAEX,uBAAGxI,UAAU,kBAAb,sB,oCAUT,IACHyH,EAAU5D,KAAKjC,MAAf6F,MACR,IAAKA,IAAUA,EAAM/B,OAAQ,OAAO,KAF1B,IAIFzD,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,6BAEQwF,EAAMoB,IAAI,SAACC,EAAMC,GACb,OACI,yBACI/I,UAAWiC,EAAQ+G,KACnBC,IAAKH,EAAKd,IAEV,kBAACkB,GAAA,EAAD,CACIC,aAAcJ,EAAQ,EACtB9F,MAAM,aAEN,kBAACmG,GAAA,EAAD,CACIC,OACI,kBAACC,EAAA,EAAD,KACI,uBAAGtJ,UAAU,kBAAb,SAKRuD,QAAQ,WACRiC,MAAOsD,EAAKnB,c,+BAa5C,OACI,6BACK9D,KAAK0F,gBACL1F,KAAK2F,iBACL3F,KAAK4F,mB,GA1KErJ,aAgLT2G,eA5LA,SAAAC,GAAK,MAAK,CACrB2B,IAAK,CACDzH,YAAa8F,EAAMC,QAAQ,GAC3BhG,WAAY+F,EAAMC,QAAQ,GAC1BvH,aAAcsH,EAAMC,QAAQ,IAEhC+B,KAAM,CACFpJ,QAAS,QACTH,UAAWuH,EAAMC,QAAQ,MAoLlBF,CAAmBO,I,8DCtK5BoC,G,iLACQ,IACEzH,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAAC0H,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAMlG,KAAK7B,MAAM+H,KACjBC,iBAAkBnG,KAAK7B,MAAMgI,iBAAmBnG,KAAK7B,MAAMgI,iBAAmB,IAC9EC,QAASpG,KAAK7B,MAAMkI,aAEpB,kBAACC,GAAA,EAAD,CACInK,UAAWoK,IAAWnI,EAAQoI,SAC9BC,mBAAiB,kBACjBC,QACI,0BAAM3D,GAAG,kBAAkB5G,UAAWiC,EAAQsI,SAC1C,uBAAGvK,UAAWoK,IAAWnI,EAAQuI,KAAMvI,EAAQwI,YAAa,mBAA5D,wBAGC5G,KAAK7B,MAAMY,KAAK8C,OAAS7B,KAAK7B,MAAMY,KAAO,wBAGpD8E,OAAQ,CACJ,kBAACa,EAAA,EAAD,CACIU,IAAI,QACJT,aAAW,QACXvF,MAAM,UACNjD,UAAWiC,EAAQyI,MACnBpH,QAASO,KAAK7B,MAAMkI,aAEpB,uBAAGlK,UAAU,kBAAb,kB,GAjCNI,aA4CP2G,eAtEA,SAAAC,GAAK,MAAK,CACrBqD,QAAS,CACLhG,gBAAiBsG,KAAM,MAE3BC,MAAO,CACHvG,gBAAiB2C,EAAME,QAAQ0D,MAAMC,MAEzCC,KAAM,CACFzG,gBAAiB2C,EAAME,QAAQ6D,QAAQF,MAE3CG,QAAS,CACL3G,gBAAiB4G,KAAM,MAE3BT,KAAM,CACFjJ,SAAU,IAEdkJ,YAAa,CACTS,QAAS,GACThK,YAAa8F,EAAMC,QAAQ,IAE/BsD,QAAS,CACL3K,QAAS,OACTuL,WAAY,YAgDLpE,CAAmB2C,I,oBC5C5B0B,G,YACF,WAAYpJ,GAAQ,IAAD,8BACf,4CAAMA,KAEDuF,cAAgB,EAAKA,cAAcC,KAAnB,iBACrB,EAAK6D,cAAgB,EAAKA,cAAc7D,KAAnB,iBAErB,EAAK5F,MAAQ,CACThC,QAAS,WACT8H,OAAQ,QACRC,KAAM,CACF2D,EAAG,EACHC,EAAG,EACHC,EAAG,IAEPC,iBAAiB,GAGrB,EAAK7D,MAAQ,KAjBE,E,oFAqBf/D,KAAKgE,Y,wCAGSrC,EAAON,GACrBrB,KAAKI,SAAS,CACV0D,KAAK,eACE9D,KAAKjC,MAAM+F,KADd,eAECnC,EAAQN,Q,qCAKNM,GACX,GAAc,MAAVA,EAAe,CAEf,IADA,IAAIkG,EAAM,GACDC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIC,EAAM,CACN1G,MAAOyG,EACPnG,MAAOmG,GAEXD,EAAIG,KAAKD,GAGb,OAAOF,EAIX,IADA,IAAIA,EAAM,GACDC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIC,EAAM,CACN1G,MAAOyG,EACPnG,MAAOmG,GAEXD,EAAIG,KAAKD,GAGb,OAAOF,I,sCAGM,IAAD,OACJzJ,EAAY4B,KAAK7B,MAAjBC,QACR,MAA2B,aAAvB4B,KAAKjC,MAAMhC,QAEP,yBAAKI,UAAWiC,EAAQ6J,aACpB,kBAAC,KAAD,CACIC,QAAM,EACNxI,QAAQ,WACRiC,MAAM,QACNN,MAAOrB,KAAKjC,MAAM+F,KAAK2D,EACvBzE,SAAU,SAACmF,GAAD,OAAO,EAAKC,kBAAkB,IAAKD,EAAEzG,OAAOL,QACtDgH,WAAY,CACRC,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,OAGnBxI,KAAKyI,eAAe,KAAKzD,IAAI,SAAA0D,GAAM,OAChC,kBAACC,GAAA,EAAD,CAAUvD,IAAKsD,EAAOrH,MAAOA,MAAOqH,EAAOrH,OACtCqH,EAAO/G,UAIpB,kBAAC,KAAD,CACIuG,QAAM,EACNxI,QAAQ,WACRiC,MAAM,UACNN,MAAOrB,KAAKjC,MAAM+F,KAAK4D,EACvB1E,SAAU,SAACmF,GAAD,OAAO,EAAKC,kBAAkB,IAAKD,EAAEzG,OAAOL,QACtDgH,WAAY,CACRC,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,OAGnBxI,KAAKyI,eAAe,KAAKzD,IAAI,SAAA0D,GAAM,OAChC,kBAACC,GAAA,EAAD,CAAUvD,IAAKsD,EAAOrH,MAAOA,MAAOqH,EAAOrH,OACtCqH,EAAO/G,UAIpB,kBAAC,KAAD,CACIuG,QAAM,EACNxI,QAAQ,WACRiC,MAAM,UACNN,MAAOrB,KAAKjC,MAAM+F,KAAK6D,EACvB3E,SAAU,SAACmF,GAAD,OAAO,EAAKC,kBAAkB,IAAKD,EAAEzG,OAAOL,QACtDgH,WAAY,CACRC,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,OAGnBxI,KAAKyI,eAAe,KAAKzD,IAAI,SAAA0D,GAAM,OAChC,kBAACC,GAAA,EAAD,CAAUvD,IAAKsD,EAAOrH,MAAOA,MAAOqH,EAAOrH,OACtCqH,EAAO/G,WAQ5B,4BACKjD,IAAOsB,KAAKjC,MAAMhC,SAAS4C,OAAO,e,sCAMG,aAA1CqB,KAAKjC,MAAMhC,QAAQ4C,OAAO,aAC1BuF,cAAclE,KAAK+D,OACnB/D,KAAKgE,UACLhE,KAAKI,SAAS,CACVwH,iBAAiB,KAGrB5H,KAAKI,SAAS,CACVrE,QAASiE,KAAKjC,MAAMhC,QAAQ6M,SAAS,EAAG,c,gCAMhD5I,KAAKI,SAAS,CACVrE,QAAS,WACT8H,OAAQ,QACRC,KAAM,CACF2D,EAAG,EACHC,EAAG,EACHC,EAAG,MAIXzD,cAAclE,KAAK+D,S,yCAInB,GAA2B,aAAvB/D,KAAKjC,MAAMhC,QAAwB,CAAC,IAC5B+H,EAAS9D,KAAKjC,MAAd+F,KAKR,OAJA9D,KAAKI,SAAS,CACVrE,QAAS2C,IAAO,GAAD,OAAIoF,EAAK2D,EAAT,YAAc3D,EAAK4D,EAAnB,YAAwB5D,EAAK6D,GAAK,mBAErD3H,KAAK+D,MAAQgB,YAAY/E,KAAK0D,cAAe,MAIjD,MAA0B,UAAtB1D,KAAKjC,MAAM8F,YACXK,cAAclE,KAAK+D,YAGnB/D,KAAK+D,MAAQgB,YAAY/E,KAAK0D,cAAe,Q,uCAkBnC,IAAD,OACLtF,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAACmG,GAAA,EAAD,CAAMC,IAAI,GACN,6BACI,kBAACC,GAAA,EAAD,CAAShH,MAAO,SACZ,kBAACiH,EAAA,EAAD,CACItF,MAAM,YACNjD,UAAWiC,EAAQR,OACnB+G,aAAW,cACXlF,QAAS,WACL,EAAKuE,YAGT,uBAAG7H,UAAU,kBACR,aAKb,kBAAC0I,GAAA,EAAD,CACInF,QAAQ,WACRN,MAAM,UACNjD,UAAWiC,EAAQ0G,IACnBrF,QAAS,WACL,EAAKW,SAAS,CACVyD,OAA8B,UAAtB,EAAK9F,MAAM8F,OAAqB,QAAU,SACnD,WACC,EAAKgF,uBAGb,uBAAG1M,UAAU,iBAAiBT,MAAO,CAAE2B,YAAa,SACzB,UAAtB2C,KAAKjC,MAAM8F,OAAqB,QAAU,cAExB,UAAtB7D,KAAKjC,MAAM8F,OAAqB,QAAU,SAG/C,kBAACY,GAAA,EAAD,CAAShH,MAAO,eACZ,kBAACiH,EAAA,EAAD,CACItF,MAAM,YACNjD,UAAWiC,EAAQR,OACnB+G,aAAW,eAEX,uBAAGxI,UAAU,kBAAb,sB,oCAUT,IACHyH,EAAU5D,KAAKjC,MAAf6F,MACR,IAAKA,IAAUA,EAAM/B,OAAQ,OAAO,KAF1B,IAIFzD,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,6BAEQwF,EAAMoB,IAAI,SAACC,EAAMC,GACb,OACI,yBACI/I,UAAWiC,EAAQ+G,KACnBC,IAAKH,EAAKd,IAEV,kBAACkB,GAAA,EAAD,CACIC,aAAcJ,EAAQ,EACtB9F,MAAM,aAEN,kBAACmG,GAAA,EAAD,CACIC,OACI,kBAACC,EAAA,EAAD,KACI,uBAAGtJ,UAAU,kBAAb,SAKRuD,QAAQ,WACRiC,MAAOsD,EAAKnB,c,sCAY5C9D,KAAKI,SAAS,CACVwH,iBAAiB,M,+BAKrB,OACI,6BACK5H,KAAK0F,gBACL1F,KAAK2F,iBACL3F,KAAK4F,cACN,kBAAC,GAAD,CACIM,KAAMlG,KAAKjC,MAAM6J,gBACjBvB,YAAarG,KAAKwH,cAClBzI,KAAM,6B,GAnSFxC,aA0ST2G,eAzTA,SAAAC,GAAK,MAAK,CACrB2B,IAAK,CACDzH,YAAa8F,EAAMC,QAAQ,GAC3BhG,WAAY+F,EAAMC,QAAQ,GAC1BvH,aAAcsH,EAAMC,QAAQ,IAEhC+B,KAAM,CACFpJ,QAAS,QACTH,UAAWuH,EAAMC,QAAQ,IAE7B6E,YAAa,CACT1K,OAAQ,KA8SD2F,CAAmBqE,I,8BCtQ5BuB,G,YACF,WAAY3K,GAAQ,IAAD,8BACf,4CAAMA,KAoCV4K,iBAAmB,WACf,EAAK3I,SAAS,CACV4I,IAAKtK,OAvCM,EA4CnBuK,iBAAmB,SAACC,EAAM9D,GACtB+D,QAAQC,IAAkB,IAAdF,EAAKG,OAAejE,GAChC,EAAKhF,SAAS,CACVkJ,QAAQ,eACD,EAAKvL,MAAMuL,QADX,eAEFlE,EAAoB,IAAd8D,EAAKG,YA/CpB,EAAKtL,MAAQ,CACTuL,QAAS,CACLC,MAAyB,IAAlB7K,IAAS2K,OAChBG,MAAyB,IAAlB9K,IAAS2K,QAEpBI,KAAM,CACF,CACItF,GAAI,EACJuF,MAAO,eACPC,KAAM,kBAEV,CACIxF,GAAI,EACJuF,MAAO,YACPC,KAAM,SAEV,CACIxF,GAAI,EACJuF,MAAO,YACPC,KAAM,cAGdC,QAAS,GAxBE,E,iIAiCf1F,cAAclE,KAAK6J,S,oCAqBR,IAAD,SACe7J,KAAKjC,MAAMuL,QAA5BC,EADE,EACFA,MAAOC,EADL,EACKA,MAEf,OADAL,QAAQC,IAAIG,EAAOC,GAEf,kBAAC,WAAD,KACI,kBAACM,GAAA,EAAD,CAAyBC,MAAOC,MAC5B,kBAAC,KAAD,CACIC,gBAAc,EACdtL,OAAO,aACPpB,OAAO,SACPwF,GAAG,qBACHpB,MAAM,aACNN,MAAOkI,EACPvG,SAAU,SAACkG,GAAD,OAAU,EAAKD,iBAAiBC,EAAM,UAChDgB,oBAAqB,CACjB,aAAc,eAElBxO,MAAO,CAAEK,QAAS,WAEtB,6BACA,kBAAC,KAAD,CACIkO,gBAAc,EACdtL,OAAO,aACPpB,OAAO,SACPwF,GAAG,qBACHpB,MAAM,cACNN,MAAOmI,EACPxG,SAAU,SAACkG,GAAD,OAAU,EAAKD,iBAAiBC,EAAM,UAChDgB,oBAAqB,CACjB,aAAc,kBAI1B,6BACA,kBAAC,KAAD,CAAOrH,UAAW,GACd,2BAAInE,EAAO6K,GAAOY,KAAKzL,EAAO8K,S,2CAU1C,OAFAtF,cAAclE,KAAK6J,OAEX7J,KAAKjC,MAAM6L,SACf,KAAK,EAAG,OAAO5J,KAAKoK,cACpB,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,QAAS,OAAO,kBAAC,GAAD,S,sCAIP,IACLhM,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAAC,KAAD,CAAOjC,UAAWiC,EAAQiM,QAASxH,UAAW,IACzC7C,KAAKsK,wB,mCAKJ,IAAD,OACDlM,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAAC,KAAD,CAAOyE,UAAW,EAAG1G,UAAWiC,EAAQqL,MACpC,kBAACc,GAAA,EAAD,CAAMC,UAAU,MAAMC,OAAK,GAEnBzK,KAAKjC,MAAM0L,KAAKzE,IAAI,SAAC0F,EAAMxF,GACvB,OACI,kBAACyF,EAAA,EAAD,CAAMnG,IAAI,EACNY,IAAKsF,EAAKvG,GACVzI,MAAO,CAAEkP,gBAAyB,IAAR1F,IAE1B,6BACI,kBAAC2F,EAAA,EAAD,CACIJ,OAAK,EACL7M,QAAM,EACN6B,QAAS,WACL,EAAKW,SAAS,CACVwJ,QAASc,EAAKvG,OAItB,kBAACsB,EAAA,EAAD,CAAQtJ,UAAWiC,EAAQqH,QACvB,uBAAGtJ,UAAU,kBACRuO,EAAKf,OAGd,kBAACmB,EAAA,EAAD,CAAc5D,QAASwD,EAAKhB,SAG1B,EAAK3L,MAAM0L,KAAK5H,OAAS,IAAMqD,EAC3B,kBAAC6F,EAAA,EAAD,CAASrL,QAAQ,UACjB,a,+BAa1C,OACI,6BACI,kBAACsL,GAAA,EAAD,CACIC,WAAS,EACT7H,QAAS,GACTjH,UAAW,GACXmL,WAAY,SACZ4D,UAAW,MACXC,QAAS,SACTzP,MAAO,CAAEE,UAAW,KAEnBoE,KAAKoL,aACN,kBAAC7G,GAAA,EAAD,CAAMC,IAAI,EAAM9I,MAAO,CAAEkP,gBAAiB,MACrC5K,KAAKqL,uB,GAjLX9O,aAyLJ2G,eA9NA,SAAAC,GAAK,MAAK,CACrBsG,KAAM,CACF9N,MAAO,OACPwB,SAAU,IACVqD,gBAAiB2C,EAAME,QAAQC,WAAWC,MAC1ClG,YAAa,OACbxB,aAAc,QAElBwO,QAAS,CACL1O,MAAO,OACPwB,SAAU,IACVqD,gBAAiB2C,EAAME,QAAQC,WAAWC,MAC1C+H,UAAW,IACXvK,OAAQ,OACRyC,QAAS,GACTzH,QAAS,OACTwP,eAAgB,SAChBjE,WAAY,UAGhBkE,KAAM,CACFC,SAAU,GAGd3G,IAAK,CACD0D,SAAU,WACVkD,OAAQvI,EAAMC,QAAQ,GACtBuI,MAAOxI,EAAMC,QAAQ,GACrB/F,YAAa,QAGjBoI,OAAQ,CACJjF,gBAAiB2C,EAAME,QAAQ6D,QAAQ0E,KACvCvO,YAAa,MA6LN6F,CAAmB4F,I,4DCnCnB+C,G,YA7MX,WAAY1N,GAAQ,IAAD,8BACf,4CAAMA,KAOV2N,aAAe,SAAAC,GAAK,OAAI,SAACtK,EAAOuK,GAC5B,EAAK5L,SAAS,CACV4L,WAAUA,GAAWD,MARzB,EAAKhO,MAAQ,CACTiO,SAAU,KACVC,UAAW,GAJA,E,0EAgBf,IADA,IAAIpE,EAAM,GACDC,EAAI,EAAGA,EAAI,IAAKA,IACjBA,EAAI,IAAM,GACVD,EAAIG,KAAKF,GAGjB,OAAOD,I,kCAKP,IADA,IAAIA,EAAM,GACDC,EAAI,EAAGA,EAAI,IAAKA,IACjBA,EAAI,IAAM,GACVD,EAAIG,KAAKF,GAGjB,OAAOD,I,wCAKP,IADA,IAAIA,EAAM,CAAC,EAAG,GACLC,EAAI,EAAGA,GAAK,GAAIA,IACrBD,EAAIG,KAAKH,EAAIC,GAAKD,EAAIC,EAAI,IAE9B,OAAOD,I,8BAGHqE,GACJ,GAAU,IAANA,EACA,OAAO,EACX,GAAU,IAANA,EACA,OAAO,EACX,GAAIA,EAAI,IAAM,EACV,OAAO,EACX,GAAIA,EAAI,IAAM,EACV,OAAO,EAKX,IAHA,IAAIpE,EAAI,EACJqE,EAAI,EAEDrE,EAAIA,GAAKoE,GAAG,CACf,GAAIA,EAAIpE,IAAM,EACV,OAAO,EAEXA,GAAKqE,EACLA,EAAI,EAAIA,EAEZ,OAAO,I,oCAKP,IADA,IAAItE,EAAM,GACDC,EAAI,EAAGA,EAAI,IAAKA,IACjB9H,KAAKoM,QAAQtE,IACbD,EAAIG,KAAKF,GAGjB,OAAOD,I,wCAKP,IADA,IAAIA,EAAM,GACDC,EAAI,EAAGA,GAAK,IAAKA,IAClBA,EAAI9H,KAAKjC,MAAMkO,YAAc,GAC7BpE,EAAIG,KAAKF,GAGjB,OAAOD,I,oCAGGA,GAAmB,IAAdwE,EAAa,uDAAJ,GAExB,OAAKxE,GAAQA,EAAIhG,OAGb,6BAEQgG,EAAI7C,IAAI,SAAC3E,EAAK6E,GACV,OAAIA,EAAQmH,IAAW,GAAe,IAAVnH,EAEpB,kBAAC,WAAD,CAAUE,IAAKF,GACX,8BAAO7E,EAAM,MACb,8BAIDA,EAAM,OAdD,O,+BAwB1B,IAAD,OACG2L,EAAahM,KAAKjC,MAAlBiO,SAEFtQ,EAAQ,CACVqQ,MAAO,CACHpQ,MAAO,MACPyB,WAAY,OACZC,YAAa,SAIrB,OACI,6BACI,kBAACiP,GAAA,EAAD,CAAgBN,SAAuB,WAAbA,EAAuBtQ,MAAOA,EAAMqQ,MAAO/I,SAAUhD,KAAK8L,aAAa,WAC7F,kBAACS,GAAA,EAAD,CAAuBC,WACnB,uBAAGrQ,UAAU,kBAAb,wBADJ,kCAMA,kBAACsQ,GAAA,EAAD,KACKzM,KAAK0M,cAAc1M,KAAK2M,gBAGjC,kBAACL,GAAA,EAAD,CAAgBN,SAAuB,WAAbA,EAAuBtQ,MAAOA,EAAMqQ,MAAO/I,SAAUhD,KAAK8L,aAAa,WAC7F,kBAACS,GAAA,EAAD,CAAuBC,WACnB,uBAAGrQ,UAAU,kBAAb,wBADJ,iCAMA,kBAACsQ,GAAA,EAAD,KACKzM,KAAK0M,cAAc1M,KAAK4M,YAAa,KAG9C,kBAACN,GAAA,EAAD,CAAgBN,SAAuB,WAAbA,EAAuBtQ,MAAOA,EAAMqQ,MAAO/I,SAAUhD,KAAK8L,aAAa,WAC7F,kBAACS,GAAA,EAAD,CAAuBC,WACnB,uBAAGrQ,UAAU,kBAAb,wBADJ,8BAMA,kBAACsQ,GAAA,EAAD,KACKzM,KAAK0M,cAAc1M,KAAK6M,qBAGjC,kBAACP,GAAA,EAAD,CAAgBN,SAAuB,WAAbA,EAAuBtQ,MAAOA,EAAMqQ,MAAO/I,SAAUhD,KAAK8L,aAAa,WAC7F,kBAACS,GAAA,EAAD,CAAuBC,WACnB,uBAAGrQ,UAAU,kBAAb,wBADJ,+BAMA,kBAACsQ,GAAA,EAAD,KACKzM,KAAK0M,cAAc1M,KAAK8M,iBAGjC,kBAACR,GAAA,EAAD,CAAgBN,SAAuB,WAAbA,EAAuBtQ,MAAOA,EAAMqQ,MAAO/I,SAAUhD,KAAK8L,aAAa,WAC7F,kBAACS,GAAA,EAAD,CAAuBC,WACnB,uBAAGrQ,UAAU,kBAAb,wBADJ,wBAImD,IAAzB6D,KAAKjC,MAAMkO,UAAkB,MAAQjM,KAAKjC,MAAMkO,WAE1E,kBAACQ,GAAA,EAAD,KACKzM,KAAK0M,cAAc1M,KAAK+M,oBAE7B,kBAAChC,EAAA,EAAD,MACA,kBAACiC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACK,iCACD,kBAACC,GAAA,EAAD,CACI7L,MAAOrB,KAAKjC,MAAMkO,UAClBjJ,SAAU,SAACvB,GAAD,OAAW,EAAKrB,SAAS,CAAE6L,UAAWxK,EAAMC,OAAOL,UAE7D,kBAACsH,GAAA,EAAD,CAAUtH,MAAO,GAAjB,KACA,kBAACsH,GAAA,EAAD,CAAUtH,MAAO,GAAjB,KACA,kBAACsH,GAAA,EAAD,CAAUtH,MAAO,GAAjB,KACA,kBAACsH,GAAA,EAAD,CAAUtH,MAAO,GAAjB,KACA,kBAACsH,GAAA,EAAD,CAAUtH,MAAO,GAAjB,KACA,kBAACsH,GAAA,EAAD,CAAUtH,MAAO,GAAjB,KACA,kBAACsH,GAAA,EAAD,CAAUtH,MAAO,GAAjB,KACA,kBAACsH,GAAA,EAAD,CAAUtH,MAAO,IAAjB,MACA,kBAACsH,GAAA,EAAD,CAAUtH,MAAO,IAAjB,MACA,kBAACsH,GAAA,EAAD,CAAUtH,MAAO,IAAjB,e,GApMX9E,aCCN4Q,G,iLAZP,OACI,yBAAKzR,MAAO,CACR8E,gBAAiBR,KAAK7B,MAAMiP,MAC5BrM,OAAQ,QACRpF,MAAO,UAEP,4BAAKqE,KAAK7B,MAAMkP,a,GARb9Q,aCMb+Q,G,iLAIE,OADAnE,QAAQC,IAAIpJ,KAAK7B,MAAMmP,KAEnB,6BACI,0CAEItN,KAAK7B,MAAMmP,IAAItI,IAAI,SAAC0F,GAChB,OACI,kBAAC,GAAD,iBACQA,EADR,CAEIjL,QAAS,uB,GAZvBlD,aAwBHuB,eAAQ,SAAAC,GAGnB,MAAO,CACHuP,IAHYvP,EAARuP,MAMR,SAAArP,GACI,OAAOC,YAAmB,GAAID,IARvBH,CASRwP,I,oBCdDC,G,0LAEgB7C,GAQd,OAPkBA,EAAK8C,MAAMC,OAAO,SAACC,GACjC,OAAIA,EAAKC,YAMM9L,S,+BAGb,IAAD,OACGzD,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAAC,KAAD,CAAOjC,UAAWiC,EAAQoN,MACtB,kBAACoC,GAAA,EAAD,CACIvM,MAAOrB,KAAK7B,MAAM0P,QAClB7K,SAAU,SAACvB,EAAOJ,GACd,EAAKlD,MAAM2P,cAAczM,IAE7B0M,eAAe,UACfC,UAAU,UACVtO,QAAQ,aACRuO,cAAc,QAGVjO,KAAK7B,MAAM+P,KAAKlJ,IAAI,SAAC0F,GACjB,OACI,kBAACyD,GAAA,EAAD,CACIxM,MACI,kBAAC0D,GAAA,EAAD,CACAlJ,UAAWiC,EAAQoF,QACnBpE,MAAM,YACNkG,aAAc,EAAK8I,kBAAkB1D,IAChCA,EAAK2D,UAGdjJ,IAAKsF,EAAKvG,GACV9C,MAAOqJ,EAAKvG,a,GAzC5B5H,aAyDL0G,OACXC,YAzEW,SAAAC,GAAK,MAAK,CACrBqI,KAAM,CACFC,SAAU,EACV9P,MAAO,OACPwB,SAAU,IACVC,WAAY,OACZC,YAAa,OACbiR,aAAc,UAGlB9K,QAAS,CACLA,QAAQ,KAAD,OAAOL,EAAMC,QAAQ,GAArB,UA+DXtF,YAAQ,SAAAC,GAGJ,MAAO,CACHmQ,KAHanQ,EAATmQ,OAMR,SAAAjQ,GACI,OAAOC,YAAmB,GAAID,KAV3BgF,CAYbsK,I,8GChGK,SAASgB,GAASvP,GACrB,MAAO,CACHtC,KAAM,WACNsC,QAID,SAASwP,GAASxP,GACrB,MAAO,CACHtC,KAAM,WACNsC,QAID,SAASyP,GAAYzP,GACxB,MAAO,CACHtC,KAAM,cACNsC,QAID,SAAS0P,GAAY1P,GACxB,MAAO,CACHtC,KAAM,cACNsC,QAID,SAAS2P,GAAU3P,GACtB,MAAO,CACHtC,KAAM,YACNsC,QAID,SAAS4P,GAAU5P,GACtB,MAAO,CACHtC,KAAM,YACNsC,QCnBR,IAAMnC,GAAW,eACVgS,GAGDC,G,YACF,WAAY3Q,GAAQ,IAAD,0BAGPoQ,GAFR,4CAAMpQ,KAEoBA,MAAlBoQ,SAHO,OAIf,EAAKA,SAAWA,EAEhB,EAAKQ,eAAiB,EAAKA,eAAepL,KAApB,iBACtB,EAAKqL,SAAW,EAAKA,SAASrL,KAAd,iBAEhB,EAAK5F,MAAQ,CACTkR,KAAK,aACD9K,GAAI,GACJ+K,KAAM,GACNvB,WAAW,EACXwB,MAAO,GACPC,WAAY,GACT,EAAKjR,MAAM8Q,OAhBP,E,yEAsBf,QAAOjP,KAAKjC,MAAMkR,KAAK9K,K,qCAGZxC,EAAON,GAClBrB,KAAKI,SAAL,eACOJ,KAAKjC,MADZ,CAEIkR,KAAK,eACEjP,KAAKjC,MAAMkR,KADd,eAECtN,EAAQN,S,+BAKZ8G,GACLA,EAAEkH,iBAEF,IAAIlL,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrB2K,EAAO,GAEPjP,KAAKsP,aACLL,EAAI,eACGjP,KAAKjC,MAAMkR,MAElBjP,KAAK7B,MAAMwQ,UAAU,CACjBxK,GAAInE,KAAK7B,MAAMoR,OACfN,WAGJA,EAAI,eACGjP,KAAKjC,MAAMkR,KADd,CAEA9K,OAEJnE,KAAK7B,MAAMoQ,SAAS,CAChBpK,GAAInE,KAAK7B,MAAMoR,OACfN,UAIRjP,KAAK7B,MAAMqR,qB,+BAGL,IAAD,OACGP,EAASjP,KAAKjC,MAAdkR,KACR,OACI,kBAACQ,GAAA,EAAD,CACIvJ,KAAMlG,KAAK7B,MAAMuR,cACjBtJ,QAASpG,KAAK7B,MAAMqR,iBACpBG,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAa7M,GAAG,qBAAqB,cAAgBkM,EAAK9K,IAC1D,0BAAM6K,SAAUhP,KAAKgP,UACjB,kBAACa,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIC,QAAShB,EAAKtB,UACd3K,SAAU,kBAAM,EAAK+L,eAAe,aAAcE,EAAKtB,YACvDtM,MAAO,MAGfM,MACI,kBAACsL,GAAA,EAAD,KACI,kBAACiD,GAAA,EAAD,CAAYC,QAAQ,QAApB,QACA,kBAACC,GAAA,EAAD,CACIC,WAAS,EACTC,WAAS,EACTvN,GAAG,OACH1B,MAAO4N,EAAKC,KACZlM,SAAU,SAACmF,GACP,EAAK4G,eAAe,OAAQ5G,EAAEzG,OAAOL,aAKzD,6BACA,iDAEI,kBAACqD,EAAA,EAAD,CACItF,MAA2B,IAApB6P,EAAKG,WAAmB,UAAY,UAC3C3P,QACI,WACI,EAAKsP,eAAe,aAAc,IAG1CpK,aAAW,UACX,uBAAGxI,UAAU,kBAAb,iBAIJ,kBAACuI,EAAA,EAAD,CACItF,MAA2B,IAApB6P,EAAKG,WAAmB,UAAY,UAC3C3P,QACI,WACI,EAAKsP,eAAe,aAAc,IAG1CpK,aAAW,UACX,uBAAGxI,UAAU,kBAAb,SAIJ,kBAACuI,EAAA,EAAD,CACItF,MAA2B,IAApB6P,EAAKG,WAAmB,UAAY,UAC3C3P,QACI,WACI,EAAKsP,eAAe,aAAc,IAG1CpK,aAAW,UACX,uBAAGxI,UAAU,kBAAb,mBAaR,6BACA,kBAAC8Q,GAAA,EAAD,KACI,kBAAC,KAAD,CACIvN,QAAQ,SACRiC,MAAM,QACN2O,WAAS,EACTC,WAAS,EACTC,KAAK,IACLnP,MAAO4N,EAAKE,MACZnM,SAAU,SAACmF,GACP,EAAK4G,eAAe,QAAS5G,EAAEzG,OAAOL,YAItD,kBAACoP,GAAA,EAAD,KACI,kBAAClR,GAAA,EAAD,CAAQE,QAASO,KAAK7B,MAAMqR,iBAAkBpQ,MAAM,WAApD,UAGA,kBAACG,GAAA,EAAD,CAAQ7C,KAAK,SAAS0C,MAAM,WAA5B,e,GAnKD7C,aA6KRuB,eAAQ,WACnB,MAAO,IAEP,SAAAG,GACI,OAAOC,YAAmBrB,GAAaoB,IAJhCH,CAKRgR,IChLDjS,GAAW,eACVgS,GAsDD6B,G,YACF,WAAYvS,GAAQ,IAAD,6BACf,4CAAMA,KAE4CA,MAA1CuQ,EAHO,EAGPA,YAAaC,EAHN,EAGMA,UAAWJ,EAHjB,EAGiBA,SAHjB,OAIf,EAAKG,YAAcA,EACnB,EAAKC,UAAYA,EACjB,EAAKJ,SAAWA,EAEhB,EAAKS,SAAW,EAAKA,SAASrL,KAAd,iBAChB,EAAK6L,iBAAmB,EAAKA,iBAAiB7L,KAAtB,iBACxB,EAAKgN,oBAAsB,EAAKA,oBAAoBhN,KAAzB,iBAC3B,EAAKiN,iBAAmB,EAAKA,iBAAiBjN,KAAtB,iBAExB,EAAK5F,MAAQ,CACT8S,eAAe,EACfC,iBAAiB,EACjBpB,eAAe,EACfqB,cAAc,EACd9B,KAAM,CACFG,WAAY,GAEhB4B,YAAa,IArBF,E,sEAyBVC,EAAM9M,EAAIc,GACf,IAAK,IAAI6C,EAAI,EAAGA,EAAImJ,EAAKpP,OAAQiG,IAC7B,GAAImJ,EAAKnJ,GAAG3D,KAAOA,EACf,OAAKc,EAGMgM,EAAKnJ,GAFLmJ,EAAKnJ,GAAG0F,Q,yCAS3BxN,KAAK2Q,sBACL3Q,KAAKuO,SAAS,CACVpK,GAAInE,KAAK7B,MAAM+S,YACfjC,KAAMjP,KAAKjC,MAAMiT,gB,4CAKrBhR,KAAKI,SAAS,CACV2Q,cAAc,M,yCAKlB/Q,KAAKI,SAAS,CACVsP,eAAe,M,mCAIV/N,GACT,IAAIN,EAAQrB,KAAKjC,MAAM4D,GACvB3B,KAAKI,SAAL,eACKuB,GAASN,M,qCAIHM,EAAON,GAClBrB,KAAKI,SAAL,eACOJ,KAAKjC,MADZ,CAEIkR,KAAK,eACEjP,KAAKjC,MAAMkR,KADd,eAECtN,EAAQN,S,kCAKT4D,GAA8E,IAAxEkM,EAAuE,uDAA/DnR,KAAKoR,SAASpR,KAAK7B,MAAM+P,KAAMlO,KAAK7B,MAAM+S,aAAa,GAC7E,OAAOC,EAAM1D,OAAO,SAACC,GACjB,OAAIzI,GACQyI,EAAKC,UAEVD,EAAKC,c,+BAIXxF,GACLA,EAAEkH,iBACFrP,KAAKwP,mBACL,IAAMxQ,EAAO,CACTmF,GAAInE,KAAK7B,MAAM+S,YACfjC,KAAMjP,KAAKjC,MAAMkR,MAErBjP,KAAK2O,UAAU3P,K,2CAGE0L,GAAO,IAChBtM,EAAY4B,KAAK7B,MAAjBC,QAER,OADuBsM,EAAf0E,YAEJ,KAAK,EAAG,OAAO,kBAAC3J,EAAA,EAAD,CAAQtJ,UAAWiC,EAAQiT,eACtC,uBAAGlV,UAAU,kBAAb,iBAEJ,KAAK,EAAG,OAAO,kBAACsJ,EAAA,EAAD,CAAQtJ,UAAWiC,EAAQkT,kBACtC,uBAAGnV,UAAU,kBAAb,yBAEJ,KAAK,EAAG,OAAO,kBAACsJ,EAAA,EAAD,CAAQtJ,UAAWiC,EAAQmT,gBACtC,uBAAGpV,UAAU,kBAAb,kBAEJ,QAAS,OAAO,kBAACsJ,EAAA,EAAD,CAAQtJ,UAAWiC,EAAQkT,kBACvC,uBAAGnV,UAAU,kBAAb,4B,kCAKAuO,GAAO,IAAD,OACNtM,EAAY4B,KAAK7B,MAAjBC,QAER,OAAO,kBAACyM,EAAA,EAAD,CACHzF,IAAKsF,EAAKvG,GACVqN,UAAMC,EACNhH,OAAK,EACL7M,QAAM,EACN6B,QAAS,WACL,IAAMT,EAAO,CACTmF,GAAI,EAAKhG,MAAM+S,YACfjC,KAAK,eACEvE,EADH,CAEAiD,WAAYjD,EAAKiD,aAGzB,EAAKgB,UAAU3P,IAEnB7C,UAAWiC,EAAQsT,UAEnB,kBAACC,GAAA,EAAD,KACK3R,KAAK4R,qBAAqBlH,IAE/B,kBAACsF,GAAA,EAAD,CACIC,QAASvF,EAAKiD,YAElB,kBAAC7C,EAAA,EAAD,CACI3O,UAAWuO,EAAKiD,UAAYvP,EAAQyT,kBAAoB,GACxD3K,QAASwD,EAAKwE,KACd3M,UAAWmI,EAAKyE,MACV,uBAAGhT,UAAU,kBAAb,SACA,OAGV,kBAAC2V,GAAA,EAAD,KACI,kBAACpN,EAAA,EAAD,CACItF,MAAM,UACNK,QAAS,WACL,EAAKW,SAAS,CACVsP,eAAe,EACfT,KAAK,eACE,EAAKlR,MAAMkR,KADd,GAEGvE,OAIf,uBAAGvO,UAAU,kBAAb,SAIJ,kBAACuI,EAAA,EAAD,CACIC,aAAW,SACXlF,QAAS,WACL,EAAKW,SAAS,CACV2Q,cAAc,EACdC,YAAY,eACLtG,KAGX,IAAM1L,EAAO,CACTmF,GAAI,EAAKhG,MAAM+S,YACfjC,KAAMvE,GAEV,EAAKgE,YAAY1P,KAErB,uBAAG7C,UAAU,kBAAb,uB,+BAQN,IAAD,OACGiC,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAACmM,GAAA,EAAD,CAAMpO,UAAWiC,EAAQoN,MACrB,kBAACuG,GAAA,EAAD,CAAetS,QAAS,kBAAM,EAAKqM,aAAa,qBAC5C,kBAACpH,EAAA,EAAD,CAAYjF,QAAS,kBAAM,EAAKqM,aAAa,qBACzC,uBAAG3P,UAAW,kBACR6D,KAAKjC,MAAM+S,gBAA0C,oBAAxB,wBAH3C,eASI9Q,KAAKjC,MAAM+S,iBAAmB9Q,KAAKgS,aAAY,GAAMhN,IAAI,SAAC0F,GACtD,OACI,EAAKuH,YAAYvH,KAI7B,kBAACqH,GAAA,EAAD,CAAetS,QAAS,kBAAM,EAAKqM,aAAa,mBAC5C,kBAACpH,EAAA,EAAD,CAAYjF,QAAS,kBAAM,EAAKqM,aAAa,mBACzC,uBAAG3P,UAAW,kBACR6D,KAAKjC,MAAM8S,cAAwC,oBAAxB,wBAHzC,aASI7Q,KAAKjC,MAAM8S,eAAiB7Q,KAAKgS,aAAY,GAAOhN,IAAI,SAAC0F,GACrD,OACI,EAAKuH,YAAYvH,KAI7B,kBAACK,EAAA,EAAD,MAEI/K,KAAKjC,MAAM2R,cACL,kBAAC,GAAD,CACET,KAAMjP,KAAKjC,MAAMkR,KACjBS,cAAe1P,KAAKjC,MAAM2R,cAC1BH,OAAQvP,KAAK7B,MAAM+S,YACnB1B,iBAAkBxP,KAAKwP,mBAEzB,KAEV,kBAAC1J,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAMlG,KAAKjC,MAAMgT,aACjB5K,iBAAkB,IAClBC,QAASpG,KAAK2Q,oBACduB,aAAc,CACV,mBAAoB,cAExBxL,QAAS,0BAAM3D,GAAG,cAAT,gBACTc,OAAQ,CACJ,kBAACtE,GAAA,EAAD,CAAQ6F,IAAI,OAAOhG,MAAM,YAAYI,KAAK,QAAQC,QAASO,KAAK4Q,kBAAhE,QAGA,kBAAClM,EAAA,EAAD,CACIU,IAAI,QACJT,aAAW,QACXvF,MAAM,UACNjD,UAAWiC,EAAQyI,MACnBpH,QAASO,KAAK2Q,qBAEd,uBAAGxU,UAAU,kBAAb,kB,GA/PFI,aA4QX0G,OACXC,YAhUW,SAAAC,GAAK,MAAK,CACrBqI,KAAM,CACF7P,MAAO,OACPwB,SAAU,IACVC,WAAY,OACZC,YAAa,QAGjBE,OAAQ,CACJA,OAAQ4F,EAAMC,QAAQ,IAG1ByO,kBAAmB,CACfM,eAAgB,gBAGpBC,MAAO,CACHC,WAAY,OACZC,cAAe,UAGnB9M,OAAQ,CACJjI,OAAQ,IAGZgU,eAAgB,CACZnS,MAAO,OACPoB,gBAAiB,WAGrB8Q,iBAAkB,CACdlS,MAAO,OACPoB,gBAAiB2C,EAAME,QAAQ6D,QAAQ0E,MAG3CyF,cAAe,CACXjS,MAAO,OACPoB,gBAAiB,WAGrBqG,MAAO,CACHlL,MAAOwH,EAAMC,QAAQ,GACrBrC,OAAQoC,EAAMC,QAAQ,IAG1BmP,aAAc,CACVnT,MAAO,OACPoB,gBAAiB2C,EAAME,QAAQd,UAAUqJ,SAkR7C9N,YAAQ,SAAAC,GAGJ,MAAO,CACHmQ,KAHanQ,EAATmQ,OAMR,SAAAjQ,GACI,OAAOC,YAAmBrB,GAAaoB,KAVpCgF,CAYbyN,ICzVI7T,GAAW,eACVgS,GAGD2D,G,YACF,WAAYrU,GAAQ,IAAD,6BACf,4CAAMA,KAE+BA,MAA7BqQ,EAHO,EAGPA,SAAUI,EAHH,EAGGA,UAHH,OAIf,EAAKJ,SAAWA,EAChB,EAAKI,UAAYA,EAEjB,EAAK9C,aAAe,EAAKA,aAAanI,KAAlB,iBACpB,EAAKqL,SAAW,EAAKA,SAASrL,KAAd,iBAEhB,EAAK5F,MAAQ,CACTkT,KAAK,aACD9M,GAAI,GACJkK,SAAU,GACVoE,UAAU,EACVjF,MAAO,IACJ,EAAKrP,MAAM8S,OAhBP,E,yEAsBf,QAAOjR,KAAKjC,MAAMkT,KAAK9M,K,mCAGdxC,EAAON,GAChBrB,KAAKI,SAAS,CACV6Q,KAAK,eACEjR,KAAKjC,MAAMkT,KADd,eAECtP,EAAQN,Q,+BAKZ8G,GAEL,GADAA,EAAEkH,iBACErP,KAAKsP,YACLtP,KAAK4O,UAAU5O,KAAKjC,MAAMkT,UACvB,CACH,IAAI9M,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBtE,KAAKwO,SAAL,eACOxO,KAAKjC,MAAMkT,KADlB,CAEI9M,QAIRnE,KAAK7B,MAAMkI,gB,+BAIL,IAAD,OACL,OACI,kBAACoJ,GAAA,EAAD,CACIvJ,KAAMlG,KAAK7B,MAAM+H,KACjBE,QAASpG,KAAK7B,MAAMkI,YACpBsJ,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAa7M,GAAG,qBAER/C,KAAKsP,YACC,YACA,gBAGd,0BAAMN,SAAUhP,KAAKgP,UACjB,kBAACa,GAAA,EAAD,KACI,kBAAC5C,GAAA,EAAD,KACI,kBAACiD,GAAA,EAAD,CAAYC,QAAQ,OAApB,kBACA,kBAACC,GAAA,EAAD,CACIC,WAAS,EACTtN,GAAG,OACH1B,MAAOrB,KAAKjC,MAAMkT,KAAK5C,SACvBrL,SAAU,SAACmF,GACP,EAAK2D,aAAa,WAAY3D,EAAEzG,OAAOL,YAIvD,kBAACoP,GAAA,EAAD,KACI,kBAAClR,GAAA,EAAD,CAAQE,QAASO,KAAK7B,MAAMkI,YAAajH,MAAM,WAA/C,UAGA,kBAACG,GAAA,EAAD,CAAQ7C,KAAK,SAAS0C,MAAM,WAA5B,e,GAlFD7C,aA4FRuB,eAAQ,WACnB,MAAO,IAEP,SAAAG,GACI,OAAOC,YAAmBrB,GAAaoB,IAJhCH,CAKR0U,IChHQxU,GAJJ,CACPiB,KAAM,OCuBJpC,GAAW,eACZgS,GA0BC6D,G,YACJ,WAAYvU,GAAQ,IAAD,uBACjB,4CAAMA,KAuCRwU,QAAU,SAAC1B,GACT,EAAK7Q,SAAS,CACZwS,IAAI,GAAD,oBACE,EAAK7U,MAAM6U,KADb,CAED3B,IAEF4B,kBAAkB,KA3CpB,EAAKC,WAAa,EAAKA,WAAWnP,KAAhB,iBAClB,EAAKgN,oBAAsB,EAAKA,oBAAoBhN,KAAzB,iBAC3B,EAAKiN,iBAAmB,EAAKA,iBAAiBjN,KAAtB,iBALP,MAOiB,EAAKxF,MAA/BsQ,EAPS,EAOTA,YAAaD,EAPJ,EAOIA,SAPJ,OAQjB,EAAKC,YAAcA,EACnB,EAAKD,SAAWA,EAEhB,EAAKzQ,MAAQ,CACX6U,IAAI,aAAK,EAAKzU,MAAM+P,MACpB6E,SAAU/U,GAAKiB,KACfyR,YAAa,EACbmC,kBAAkB,EAClBG,kBAAkB,EAClBC,gBAAiB,IAjBF,E,iFAsBjBjT,KAAKI,SAAS,CACZwS,IAAI,aAAK5S,KAAK7B,MAAM+P,U,+BAKf+C,EAAM9M,EAAIc,GACjB,IAAK,IAAI6C,EAAI,EAAGA,EAAImJ,EAAKpP,OAAQiG,IAC/B,GAAImJ,EAAKnJ,GAAG3D,KAAOA,EACjB,OAAKc,EAGIgM,EAAKnJ,GAFLmJ,EAAKnJ,GAAG0F,Q,oCAmBrB,OAAOxN,KAAKoR,SAASpR,KAAK7B,MAAM+P,KAAMlO,KAAKjC,MAAM2S,aAAa,K,oCAGjD,IAAD,OACZ,OAAO1Q,KAAK7B,MAAM+P,KAAKT,OAAO,SAACwD,GAC7B,OAAIA,EAAK9M,KAAO,EAAKpG,MAAM2S,cAI1B,GAAGvM,K,yCAINnE,KAAK2Q,sBACL3Q,KAAKwO,SAASxO,KAAKjC,MAAMkV,mB,4CAIzBjT,KAAKI,SAAS,CACZ2Q,cAAc,M,mCAKhB/Q,KAAKI,SAAS,CACZyS,kBAAkB,EAClBG,kBAAkB,EAClBE,mBAAmB,M,8CAIE,IAAD,OACd9U,EAAY4B,KAAK7B,MAAjBC,QACR,OACE,6BACE,kBAACmB,GAAA,EAAD,CACEG,QAAQ,YACRN,MAAM,YACNI,KAAK,QACLrD,UAAWiC,EAAQR,OACnB6B,QAAS,WACP,EAAKW,SAAS,CACZyS,kBAAkB,MAPxB,YAYA,kBAACtT,GAAA,EAAD,CACEG,QAAQ,WACRF,KAAK,SACLrD,UAAWiC,EAAQR,OACnB6B,QAAS,WACP,EAAKW,SAAS,CACZ8S,mBAAmB,MANzB,aAWA,kBAAC3T,GAAA,EAAD,CACEG,QAAQ,OACRN,MAAM,UACNI,KAAK,QACLrD,UAAWiC,EAAQR,OACnB6B,QAAS,WACP,EAAKW,SAAS,CACZ2Q,cAAc,EACdL,YAAa,EAAKyC,cAClBF,gBAAgB,eACX,EAAK/B,iBAIZ,EAAKzC,YAAY,EAAKyC,iBAd1B,kB,+BAuBI,IAAD,OACC9S,EAAY4B,KAAK7B,MAAjBC,QAER,OACE,yBAAKjC,UAAU,OACb,kBAAC,GAAD,CACEiX,MAAK,aAAMpT,KAAKjC,MAAM6U,KACtB/E,QAAS7N,KAAKjC,MAAM2S,YACpB2C,OAAQrT,KAAK8S,WACbH,QACE,WACE,EAAKvS,SAAS,CACZyS,kBAAkB,KAIxB/E,cACE,SAAC3J,GACC,EAAK/D,SAAS,CACZsQ,YAAavM,OAKrB,kBAAC,GAAD,CACE+M,YAAalR,KAAKjC,MAAM2S,YACxB4C,WAAYtT,KAAKsT,WACjBC,WAAYvT,KAAKuT,aAGjBvT,KAAKjC,MAAMiV,iBACP,kBAAC,GAAD,CACAtD,cAAe1P,KAAKjC,MAAMiV,iBAC1BQ,SAAUxT,KAAKkR,cAAc7C,SAC7BkB,OAAQvP,KAAKjC,MAAM2S,YACnBlB,iBAAkBxP,KAAK8S,WACvBW,QAASzT,KAAKyT,UAEd,KAGJzT,KAAKjC,MAAM8U,iBACP,kBAAC,GAAD,CACA3M,KAAMlG,KAAKjC,MAAM8U,iBACjBW,SAAUxT,KAAKkR,cAAc7C,SAC7BhI,YAAarG,KAAK8S,aAElB,KAGJ9S,KAAKjC,MAAMmV,kBACP,kBAAC,GAAD,CACAhN,KAAMlG,KAAKjC,MAAMmV,kBACjBjC,KAAMjR,KAAKkR,cACX7K,YAAarG,KAAK8S,aAElB,KAEN,kBAACrO,GAAA,EAAD,CAASiP,oBAAqB/I,IAAMlN,MAAM,gBACxC,kBAACoH,GAAA,EAAD,CACEnF,QAAQ,WACRN,MAAM,UACNjD,UAAWiC,EAAQ0G,IACnBrF,QAAS,WACP,EAAKW,SAAS,CACZ4S,kBAAkB,MAGtB,uBAAG7W,UAAU,iBAAiBT,MAAO,CAAE2B,YAAa,SAApD,sBATF,aAaD2C,KAAK2T,wBACN,kBAAC7N,GAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,KAAMlG,KAAKjC,MAAMgT,aACjB5K,iBAAkB,IAClBC,QAASpG,KAAK2Q,oBACduB,aAAc,CACZ,mBAAoB,cAEtBxL,QAAS,0BAAM3D,GAAG,cAAT,gBACTc,OAAQ,CACN,kBAACtE,GAAA,EAAD,CAAQ6F,IAAI,OAAOhG,MAAM,YAAYI,KAAK,QAAQC,QAASO,KAAK4Q,kBAAhE,QAGA,kBAAClM,EAAA,EAAD,CACEU,IAAI,QACJT,aAAW,QACXvF,MAAM,UACNjD,UAAWiC,EAAQyI,MACnBpH,QAASO,KAAK2Q,qBAEd,uBAAGxU,UAAU,kBAAb,kB,GArOKI,aAkPJ0G,OACbC,YA1Qa,SAAAC,GAAK,MAAK,CACvBqI,KAAM,CACJ7P,MAAO,OACPwB,SAAU,IACVC,WAAY,OACZC,YAAa,QAGfO,OAAQ,CACNL,OAAQ4F,EAAMC,QAAQ,IAGxBwQ,aAAc,CACZvW,YAAa8F,EAAMC,QAAQ,IAG7B0B,IAAK,CACH0D,SAAU,QACVkD,OAAQvI,EAAMC,QAAQ,GACtBuI,MAAOxI,EAAMC,QAAQ,OAwPvBtF,YAAQ,SAAAC,GAGN,MAAO,CACLmQ,KAHenQ,EAATmQ,OAMR,SAAAjQ,GACE,OAAOC,YAAmBrB,GAAaoB,KAV9BgF,CAYbyP,I,qBCjQamB,G,YA3CX,WAAY1V,GAAQ,IAAD,8BACf,4CAAMA,KACD2V,QAAU,CACXC,QAAS,CACL,CAAC,CAAE,OAAU,CAAC,EAAG,GAAG,KACpB,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CAAC,CAAE,KAAQ,WAAa,CAAE,KAAQ,UAAY,CAAE,OAAU,MAAQ,CAAE,OAAU,OAC9E,CAAC,OAAQ,SACT,CAAC,WAIT,EAAKC,QAAU,CACX,SACA,OAAQ,SAAU,YAAa,SAAU,aACzC,OAAQ,SAAU,SAClB,OAAQ,SAEZ,EAAKjW,MAAQ,CAAEgB,KAAM,IACrB,EAAK+M,aAAe,EAAKA,aAAanI,KAAlB,iBAnBL,E,0EAsBNtC,GACTrB,KAAKI,SAAS,CAAErB,KAAMsC,M,+BAItB,OACI,kBAAC,KAAD,CACIA,MAAOrB,KAAK7B,MAAMkD,MAClB2B,SAAUhD,KAAK7B,MAAM2N,aACrB3I,MAAM,OACN2Q,QAAS9T,KAAK8T,QACdE,QAAShU,KAAKgU,QACdtY,MAAO,CACHqF,OAAQ,QACRlF,aAAc,c,GAtCTU,a,UCQV0X,GAXE,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WCRG,SAASC,GAASlV,GACrB,MAAO,CACHtC,KAAM,WACNsC,QAID,SAASmV,GAAUnV,GACtB,MAAO,CACHtC,KAAM,YACNsC,QAID,SAASoV,GAAYpV,GACxB,MAAO,CACHtC,KAAM,cACNsC,QCER,IAAMnC,GAAW,eACVwX,GA4BDC,G,YACF,WAAYnW,GAAQ,IAAD,6BACf,4CAAMA,KAE4CA,MAA1C+V,EAHO,EAGPA,SAAUE,EAHH,EAGGA,YAAaD,EAHhB,EAGgBA,UAHhB,OAIf,EAAKD,SAAWA,EAChB,EAAKE,YAAcA,EACnB,EAAKD,UAAYA,EAEjB,EAAKrI,aAAe,EAAKA,aAAanI,KAAlB,iBACpB,EAAKqL,SAAW,EAAKA,SAASrL,KAAd,iBAChB,EAAK4Q,aAAe,EAAKA,aAAa5Q,KAAlB,iBAEpB,EAAK5F,MAAQ,CACTyW,KAAK,aACDrQ,GAAI,KACJuF,MAAO,GACPW,QAAS,GACT+C,MAAO,UACPqH,KAAM,IAAIA,MACP,EAAKtW,MAAMqW,OAnBP,E,yEAyBf,QAAOxU,KAAKjC,MAAMyW,KAAKrQ,K,yCAGRuQ,GACf,OAAK1U,KAAK7B,MAAMqW,MAAQE,EAAUF,KAAKrQ,KAAOnE,KAAK7B,MAAMqW,KAAKrQ,GACzDnE,KAAK7B,MAAMwW,MAaL3U,KAAKI,SAAS,CACjBoU,KAAK,eACExU,KAAK7B,MAAMqW,QAdfxU,KAAKI,SAAS,CACjBoU,KAAK,aACDrQ,GAAI,KACJuF,MAAO,GACPW,QAAS,GACT+C,MAAO,UACPqH,KAAM,IAAIA,MACPzU,KAAK7B,MAAMqW,QAT+C,O,mCAsBhEI,GACT5U,KAAKI,SAAS,CACVoU,KAAK,eACExU,KAAKjC,MAAMyW,KADd,CAEAnK,QAASuK,Q,wCAKHjT,EAAON,GACrBrB,KAAKI,SAAS,CACVoU,KAAK,eACExU,KAAKjC,MAAMyW,KADd,eAEC7S,EAAQN,Q,qCAMjBrB,KAAKoU,YAAYpU,KAAKjC,MAAMyW,Q,+BAIvBrM,GAEL,GADAA,EAAEkH,iBACErP,KAAKsP,YACLtP,KAAKmU,UAAUnU,KAAKjC,MAAMyW,UACvB,CACH,IAAIrQ,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBtE,KAAKkU,SAAL,eACOlU,KAAKjC,MAAMyW,KADlB,CAEIrQ,QAEJnE,KAAK7B,MAAM0W,mBAAmB1Q,M,+BAI5B,IAAD,OACG/F,EAAY4B,KAAK7B,MAAjBC,QACR,OACI,0BAAM4Q,SAAUhP,KAAKgP,UACjB,kBAAC,KAAD,CAAOnM,UAAW,GAAI1G,UAAWiC,EAAQ0W,MACrC,kBAAC,KAAD,CACI/R,GAAG,aACHsF,WAAY,CACRC,eACI,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACrB,kBAAC/C,EAAA,EAAD,CACI/J,MAAO,CAAE8E,gBAAiBR,KAAKjC,MAAMyW,KAAKpH,OAC1CjR,UAAWiC,EAAQoH,QAElBxF,KAAKjC,MAAMyW,KAAK9K,MAAM,MAKvCqL,UAAQ,EACRC,YAAY,sBACZ1E,WAAS,EACTjP,MAAOrB,KAAKjC,MAAMyW,KAAK9K,MACvB1G,SAAU,SAACmF,GACP,EAAK8M,kBAAkB,QAAS9M,EAAEzG,OAAOL,UAGjD,kBAAC,GAAD,CACIA,MAAOrB,KAAKjC,MAAMyW,KAAKnK,QACvByB,aAAc9L,KAAK8L,eAEvB,yBAAKpQ,MAAO,CAAEK,QAAS,iBACnB,kBAAC,gBAAD,CACIqD,MAAOY,KAAKjC,MAAMyW,KAAKpH,MACvBzR,MAAM,QACNuZ,OAAQjB,GACRkB,cAAe,EACfnS,SAAU,SAAC3B,GACP,EAAK4T,kBAAkB,QAAS5T,EAAM+T,SAK9CpV,KAAKsP,YACC,kBAAC/P,GAAA,EAAD,CACEH,MAAM,YACNjD,UAAWiC,EAAQmB,OACnBE,QAASO,KAAKuU,cAHhB,UAMA,kBAAChV,GAAA,EAAD,CACEH,MAAM,YACNjD,UAAWiC,EAAQmB,OACnBE,QAASO,KAAK7B,MAAMkX,cAHtB,UAOV,kBAAC9V,GAAA,EAAD,CAAQpD,UAAWiC,EAAQmB,OAAQ7C,KAAK,SAAS0C,MAAM,WAAvD,c,GAlJI7C,aA2JT0G,OACXC,YArLW,SAAAC,GAAK,MAAK,CACrB2R,KAAM,CACFnZ,MAAO,OACPwB,SAAU,IACVqD,gBAAiB2C,EAAME,QAAQC,WAAWC,OAG9C+R,YAAa,CACT3Z,MAAO,OACPwB,SAAU,IACVqD,gBAAiB2C,EAAME,QAAQC,WAAWC,MAC1CxC,OAAQ,KAGZyE,OAAQ,CACJ7J,MAAO,GACPoF,OAAQ,GACR3D,WAAY,IAGhBmC,OAAQ,CACJxD,QAAS,mBAiKb+B,YAAQ,WACJ,MAAO,IAEP,SAAAG,GACI,OAAOC,YAAmBrB,GAAaoB,KANpCgF,CAQbqR,ICnNK,SAASiB,GAASvW,GACrB,MAAO,CACHtC,KAAM,WACNsC,QAID,SAASwW,GAASxW,GACrB,MAAO,CACHtC,KAAM,WACNsC,QAID,SAASyW,GAAYzW,GACxB,MAAO,CACHtC,KAAM,cACNsC,QAID,SAAS0W,GAAa1W,GACzB,MAAO,CACHtC,KAAM,eACNsC,QAID,SAAS2W,GAAe3W,GAC3B,MAAO,CACHtC,KAAM,iBACNsC,QCNR,IAAMnC,GAAW,eACV+Y,GAgBDC,GAAY,CACd1R,GAAI,KACJuF,MAAO,GACPW,QAAS,GACT+C,MAAO,UACPqH,KAAM,IAAIA,MAGRtF,G,YACF,WAAYhR,GAAQ,IAAD,8BACf,4CAAMA,KAEDkX,aAAe,EAAKA,aAAa1R,KAAlB,iBACpB,EAAKkR,mBAAqB,EAAKA,mBAAmBlR,KAAxB,iBAE1B,EAAK5F,MAAQ,CACT+X,YAAa,EAAKC,WAClBpB,OAAO,GARI,E,gFAgBAD,EAAWsB,GAC1B,OAAItB,EAAUvF,QAAUnP,KAAK7B,MAAMgR,MAAc,KAE5CnP,KAAK7B,MAAMgR,MAAMtN,OAMf7B,KAAKI,SAAS,CACjB0V,YAAa9V,KAAK7B,MAAMgR,MAAM,KANvBnP,KAAKI,SAAS,CACjB0V,YAAaD,O,iCAUS,IAAzBhO,EAAwB,uDAAlB7H,KAAK7B,MAAMgR,MACtB,OAAKtH,EAAIhG,OAEFgG,EAAI,GAFagO,K,wCAKT,IAAD,SACa7V,KAAK7B,MAAxBC,EADM,EACNA,QAAS+Q,EADH,EACGA,MAEjB,OAAKA,GAAUA,EAAMtN,OAGjB,kBAAC,KAAD,CAAOgB,UAAW,EAAG1G,UAAWiC,EAAQ6X,WACpC,kBAAC1L,GAAA,EAAD,CAAMC,UAAU,MAAMC,OAAK,GAEnB0E,EAAMnK,IAAI,SAAC8P,EAAM5P,GACb,OACI,kBAACyF,EAAA,EAAD,CAAMnG,IAAI,EACNY,IAAK0P,EAAK3Q,GACVzI,MAAO,CAAEkP,gBAAyB,IAAR1F,IAE1B,6BACI,kBAAC2F,EAAA,EAAD,CACIJ,OAAK,EACL7M,QAAM,EACN6B,QAAS,WACL,EAAKW,SAAS,CACV0V,YAAaI,KAAEC,KAAK,EAAKhY,MAAMgR,MAAO,CAAEhL,GAAI2Q,EAAK3Q,SAIzD,kBAACsB,EAAA,EAAD,CACI/J,MAAO,CACH8E,gBAAiBsU,EAAK1H,MACtB/P,YAAa,KAGhByX,EAAKpL,MAAM,IAEhB,kBAACoB,EAAA,EAAD,CAAc5D,QAAS4N,EAAKpL,SAG1B,EAAKvL,MAAMgR,MAAMtN,OAAS,IAAMqD,EAC5B,kBAAC6F,EAAA,EAAD,CAASrL,QAAQ,UACjB,WAnCN,O,wCA+CrB,IAAD,OACMM,KAAK7B,MAAjBC,QAER,OACI,kBAACqG,GAAA,EAAD,CAASiP,oBAAqB/I,IAAMlN,MAAM,gBACtC,kBAACkN,EAAA,EAAD,CAAMnG,IAAI,GACN,kBAACK,GAAA,EAAD,CACIzF,MAAM,UACN1D,MAAO,CAAE2B,YAAa,QACtBoC,QAAS,WACL,EAAKW,SAAS,CACVuU,OAAO,EACPmB,YAAa,CACT3R,GAAI,KACJuF,MAAO,GACPW,QAAS,GACT+C,MAAO,UACPqH,KAAM,IAAIA,UAItB,uBAAGtY,UAAU,kBAAb,mB,qCAQhB6D,KAAKI,SAAS,CACVuU,OAAO,EACPmB,YAAa9V,KAAK+V,e,yCAIP5R,GACfnE,KAAKI,SAAS,CACVuU,OAAO,M,gCAKX,OAAO,aACHxQ,GAAI,KACJuF,MAAO,GACPW,QAAS,GACT+C,MAAO,UACPqH,KAAM,IAAIA,MACNzU,KAAKjC,MAAM4W,MAAQ,CAAExQ,GAAI,MAAS+R,KAAEC,KAAKnW,KAAK7B,MAAMgR,MAAO,CAAEhL,GAAInE,KAAKjC,MAAMqY,e,+BAKpF,OACI,6BACI,kBAACpL,GAAA,EAAD,CACIC,WAAS,EACT7H,QAAS,GACTjH,UAAW,GACX+O,UAAU,MACVC,QAAQ,SACR7D,WAAW,SACX5L,MAAO,CAAEE,UAAW,KAEnBoE,KAAKqW,kBACLrW,KAAKsW,kBACN,kBAAC3L,EAAA,EAAD,CAAMnG,IAAI,EAAM9I,MAAO,CAAEkP,gBAAiB,MACtC,kBAAC,GAAD,CACI4J,KAAMxU,KAAKjC,MAAM+X,YACjBT,aAAcrV,KAAKqV,aACnBV,MAAO3U,KAAKjC,MAAM4W,MAClBE,mBAAoB7U,KAAK6U,4B,GA/JjCtY,aAwKL0G,OACXC,YA9LW,SAAAC,GAAK,MAAK,CACrB8S,UAAW,CACPta,MAAO,OACPwB,SAAU,IACVqD,gBAAiB2C,EAAME,QAAQC,WAAWC,MAC1ClG,YAAa,OACbxB,aAAc,QAElB2P,KAAM,CACFC,SAAU,MAsLd3N,YAAQ,SAAAC,GAGJ,MAAO,CACHoR,MAHcpR,EAAVoR,QAMR,SAAAlR,GACI,OAAOC,YAAmBrB,GAAaoB,KAVpCgF,CAYbkM,I,oBChNItS,GAAW,eACV+Y,GAGDW,G,YACF,WAAYpY,GAAQ,IAAD,6BACf,4CAAMA,KAEqDA,MAAnDsX,EAHO,EAGPA,YAAaE,EAHN,EAGMA,eAAgBD,EAHtB,EAGsBA,aAHtB,OAIf,EAAKD,YAAcA,EACnB,EAAKE,eAAiBA,EACtB,EAAKD,aAAeA,EAEpB,EAAK5J,aAAe,EAAKA,aAAanI,KAAlB,iBACpB,EAAKqL,SAAW,EAAKA,SAASrL,KAAd,iBAChB,EAAK4Q,aAAe,EAAKA,aAAa5Q,KAAlB,iBAEpB,EAAK5F,MAAQ,CACTyY,QAAQ,aACJrS,GAAI,KACJuF,MAAO,GACP+M,MAAO,EACPhC,KAAM,IAAIA,KACVrH,MAAO,UACPsJ,KAAM,GACH,EAAKvY,MAAMqY,UApBP,E,yEA0Bf,QAAOxW,KAAKjC,MAAMyY,QAAQrS,K,mCAGjBxC,EAAON,GAChBrB,KAAKI,SAAS,CACVoW,QAAQ,eACDxW,KAAKjC,MAAMyY,QADX,eAEF7U,EAAQN,Q,qCAMjBrB,KAAK7B,MAAMkI,cACXrG,KAAK2V,eAAe3V,KAAKjC,MAAMyY,W,+BAG1BrO,GAEL,GADAA,EAAEkH,iBACErP,KAAKsP,YACLtP,KAAK0V,aAAa1V,KAAKjC,MAAMyY,aAC1B,CACH,IAAIrS,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBtE,KAAKyV,YAAL,eACOzV,KAAKjC,MAAMyY,QADlB,CAEIrS,QAIRnE,KAAK7B,MAAMkI,gB,+BAGL,IAAD,OACL,OACI,kBAACoJ,GAAA,EAAD,CACIvJ,KAAMlG,KAAK7B,MAAM+H,KACjBE,QAASpG,KAAK7B,MAAMkI,YACpBsJ,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAa7M,GAAG,qBAER/C,KAAKsP,YACC,eACA,kBAGNtP,KAAKsP,aACF,kBAAC7K,GAAA,EAAD,CAASiP,oBAAqB/I,IAAMlN,MAAM,kBACzC,kBAACiH,EAAA,EAAD,CACIU,IAAI,SACJT,aAAW,SACXvF,MAAM,UACNK,QAASO,KAAKuU,cAEd,uBAAGpY,UAAU,kBAAb,qBAKhB,0BAAM6S,SAAUhP,KAAKgP,UACjB,kBAACa,GAAA,EAAD,KACI,kBAAC5C,GAAA,EAAD,KACI,kBAAC,KAAD,CACI8H,UAAQ,EACR1E,WAAS,EACT1O,MAAM,oBACNoB,GAAG,OACH1B,MAAOrB,KAAKjC,MAAMyY,QAAQ9M,MAC1B1G,SAAU,SAACmF,GACP,EAAK2D,aAAa,QAAS3D,EAAEzG,OAAOL,WAGhD,6BACA,kBAAC4L,GAAA,EAAD,KACI,kBAACiD,GAAA,EAAD,CAAYC,QAAQ,OAEZnQ,KAAKsP,YACC,QACA,kBAGd,kBAACc,GAAA,EAAD,CACIC,WAAS,EACTtN,GAAG,OACH1B,MAAOrB,KAAKjC,MAAMyY,QAAQC,MAC1BzT,SAAU,SAACmF,GACP,EAAK2D,aAAa,QAAS5L,SAASiI,EAAEzG,OAAOL,MAAO,SAGhE,6BACA,kBAAC4L,GAAA,EAAD,KACI,kBAACiD,GAAA,EAAD,CAAYC,QAAQ,OAApB,gBACA,kBAACC,GAAA,EAAD,CACIC,WAAS,EACTtN,GAAG,OACH1B,MAAOrB,KAAKjC,MAAMyY,QAAQE,KAC1B1T,SAAU,SAACmF,GACP,EAAK2D,aAAa,OAAQ5L,SAASiI,EAAEzG,OAAOL,MAAO,SAG/D,6BACA,6BACA,kBAAC4L,GAAA,EAAD,KACI,kBAAC,gBAAD,CACI7N,MAAOY,KAAKjC,MAAMyY,QAAQpJ,MAC1BzR,MAAM,QACNuZ,OAAQjB,GACRkB,cAAe,GACfnS,SAAU,SAAC3B,GACP,EAAKyK,aAAa,QAASzK,EAAM+T,UAKjD,kBAAC3E,GAAA,EAAD,KACI,kBAAClR,GAAA,EAAD,CAAQE,QAASO,KAAK7B,MAAMkI,YAAajH,MAAM,aAA/C,UAGA,kBAACG,GAAA,EAAD,CAAQ7C,KAAK,SAAS0C,MAAM,WAA5B,e,GAjJE7C,aA2JXuB,eAAQ,WACnB,MAAO,IAEP,SAAAG,GACI,OAAOC,YAAmBrB,GAAaoB,IAJhCH,CAKRyY,ICnKD1Z,GAAW,eACV+Y,GA8FDe,G,YACF,WAAYxY,GAAQ,IAAD,uBACf,4CAAMA,KACDyY,aAAe,EAAKA,aAAajT,KAAlB,iBACpB,EAAKkT,WAAa,EAAKA,WAAWlT,KAAhB,iBAHH,MAKgB,EAAKxF,MAA5BoX,EALO,EAKPA,SAAUC,EALH,EAKGA,SALH,OAMf,EAAKD,SAAWA,EAChB,EAAKC,SAAWA,EAEhB,EAAKzX,MAAQ,CACT+Y,eAAe,EACfC,qBAAqB,EACrBC,cAAe,IAZJ,E,0EAgBNR,GACTxW,KAAKI,SAAS,CACV0W,eAAe,EACfE,cAAc,eAAMR,O,mCAKxBxW,KAAKI,SAAS,CACV0W,eAAe,EACfC,qBAAqB,M,qCAIdP,GACX,IAAKA,EAAQE,KAAM,OAAO,KADN,IAGZtY,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAAC6Y,GAAA,EAAD,CACI7X,MAC+B,MAA3BY,KAAKkX,SAASV,GACR,UACA,YAEV9W,QAAQ,cACR2B,MAAOrB,KAAKkX,SAASV,GACrBra,UAAWiC,EAAQ+Y,Q,+BAKtBX,GACL,OAAIA,EAAQC,OAASD,EAAQE,KAAa,IAEjC,IAAMF,EAAQC,MAASD,EAAQE,O,uCAG1B,IAAD,OACb,IAAK1W,KAAK7B,MAAMwY,WAAa3W,KAAK7B,MAAMwY,SAAS9U,OAAQ,OAAO,KADnD,IAGLzD,EAAY4B,KAAK7B,MAAjBC,QAER,OAAO4B,KAAK7B,MAAMwY,SAAS3R,IAAI,SAACwR,EAAStR,GACrC,OACI,kBAACkS,GAAA,EAAD,CACIlM,UAAU,KACV1G,IAAI,EACJY,IAAKoR,EAAQrS,GACbzI,MAAO,CAACkP,gBAAiB,IAAI1F,GAC7BmS,cAAY,EACZC,eAAa,GAEb,kBAAC,IAAD,CACInb,UAAWiC,EAAQnB,KACnBsa,QAAM,EACN7b,MAAO,CAAE8E,gBAAiBgW,EAAQpJ,QAElC,kBAAClO,GAAA,EAAD,CACI/C,UAAWiC,EAAQc,YACnBO,QAAS,kBAAM,EAAKmX,aAAaJ,KAEjC,kBAACnR,GAAA,EAAD,CACIC,aAAckR,EAAQC,MACtBrX,MAAM,YACNhB,QAAS,CAAEoZ,MAAOpZ,EAAQoZ,QAE1B,kBAACrY,EAAA,EAAD,CAAYhD,UAAWiC,EAAQX,OAC1B+Y,EAAQ9M,SAIrB,yBAAKvN,UAAWiC,EAAQqZ,SACpB,kBAAC/S,EAAA,EAAD,CACIU,IAAI,QACJT,aAAW,QACXvF,MAAM,UACNjD,UAAWiC,EAAQsZ,YACnBjY,QAAS,WAAQ,EAAK+V,SAASgB,EAAQrS,MAEvC,uBAAGhI,UAAU,kBAAb,2BAGR,yBAAKA,UAAWiC,EAAQuZ,UACpB,kBAACjT,EAAA,EAAD,CACIU,IAAI,QACJT,aAAW,QACXvF,MAAM,UACNK,QAAS,WAAQ,EAAK8V,SAASiB,EAAQrS,MAEvC,uBAAGhI,UAAU,kBAAb,wBAGP,EAAKyb,eAAepB,S,wCAOtB,IAAD,OACNpY,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAACqG,GAAA,EAAD,CAASiP,oBAAqB/I,IAAMlN,MAAM,mBACtC,kBAACoH,GAAA,EAAD,CACInF,QAAQ,WACRN,MAAM,UACNjD,UAAWiC,EAAQ0G,IACnBrF,QAAS,WACL,EAAKW,SAAS,CACV2W,qBAAqB,MAG7B,uBAAG5a,UAAU,iBAAiBT,MAAO,CAAC2B,YAAa,SAAnD,cATJ,kB,8CAiBR,OAAO2C,KAAKjC,MAAMgZ,qBAAuB,kBAAC,GAAD,CACrC7Q,KAAMlG,KAAKjC,MAAMgZ,oBACjB1Q,YAAarG,KAAK6W,e,+CAKtB,OAAO7W,KAAKjC,MAAM+Y,eAAiB,kBAAC,GAAD,CAC/B5Q,KAAMlG,KAAKjC,MAAM+Y,cACjBN,QAASxW,KAAKjC,MAAMiZ,cACpB3Q,YAAarG,KAAK6W,e,+BAKtB,OACI,6BACK7W,KAAK6X,iBACL7X,KAAKqW,kBACLrW,KAAK8X,wBACL9X,KAAK+X,8B,GAhKCxb,aAsKR0G,OACXC,YAlQW,SAAAC,GAAK,MAAK,CACrBlG,KAAM,CACFtB,MAAO,OACPwB,SAAU,IACVC,WAAY,OACZC,YAAa,OACbxB,aAAc,OACdmF,aAAc,QACdwH,SAAU,WACVpJ,MAAO,WAGXxB,OAAQ,CACJL,OAAQ4F,EAAMC,QAAQ,IAG1BwQ,aAAc,CACVvW,YAAa8F,EAAMC,QAAQ,IAG/B0B,IAAK,CACD0D,SAAU,QACVkD,OAAQvI,EAAMC,QAAQ,GACtBuI,MAAOxI,EAAMC,QAAQ,IAGzB4U,MAAO,CACH5Y,MAAO,QAGXF,YAAa,CACTnD,QAAS,gBAGb0B,MAAO,CACH2B,MAAO,OACP6Y,WAAY,OACZlc,QAAS,eACTsB,YAAa,MACb6a,OAAQ,WAGZV,MAAO,CACHW,KAAM,EACNxM,OAAQ,GACRuM,OAAQ,WAGZT,QAAS,CACL1b,QAAS,eACTyM,SAAU,WACV4P,KAAM,IACND,IAAK,IACLzM,OAAQ,IACRnO,OAAQ,MACR8a,aAAc,MACdC,YAAa,qBACbhG,cAAe,UAGnBqF,SAAU,CACN5b,QAAS,eACTyM,SAAU,WACVmD,MAAO,IACPwM,IAAK,IACLzM,OAAQ,IACRnO,OAAQ,MACRgb,YAAa,MACbC,WAAY,kBAGhBd,YAAa,CACTna,OAAQ,OAGZ4Z,IAAK,CACD3O,SAAU,WACVkD,OAAQ,IACRC,MAAO,IACPyM,KAAM,KAGVK,kBAAmB,CACfjY,gBAAiB,WAGrBkY,oBAAqB,CACjBlY,gBAAiB,cA4KrB1C,YAAQ,SAAAC,GAGJ,MAAO,CACH4Y,SAHiB5Y,EAAb4Y,WAMR,SAAA1Y,GACI,OAAOC,YAAmBrB,GAAaoB,KAVpCgF,CAYb0T,IC5PIgC,G,YACF,WAAYxa,GAAQ,IAAD,8BACf,4CAAMA,KAED2N,aAAe,EAAKA,aAAanI,KAAlB,iBAEpB,EAAK5F,MAAQ,CACT6a,MAAO,GACPC,YAAa,EACbC,OAAQ,GACRC,WAAY,CACR,CACI5U,GAAI,EACJ6U,MAAO,aAEX,CACI7U,GAAI,EACJ6U,MAAO,aAEX,CACI7U,GAAI,EACJ6U,MAAO,WAEX,CACI7U,GAAI,EACJ6U,MAAO,cAEX,CACI7U,GAAI,EACJ6U,MAAO,WA5BJ,E,0EAkCNvX,EAAOxC,GAAO,IAAD,OACtBe,KAAKI,SAAL,eACKnB,EAAOwC,EAAMC,OAAOL,OACtB,WACC,EAAKjB,SAAS,CACV0Y,OAAQ,EAAKH,gB,gCAKd,IACCC,EAAU5Y,KAAKjC,MAAf6a,MAER,OAAQ5Y,KAAKjC,MAAM8a,aACf,KAAK,EAAG,OAAOD,EAAMK,cACrB,KAAK,EAAG,OAAOL,EAAMM,cACrB,KAAK,EAAG,OAAON,EAAMO,MAAM,IAAIC,UAAUC,KAAK,IAC9C,KAAK,EAAG,OAAOrZ,KAAKsZ,MAAMV,GAC1B,KAAK,EAAG,OAAO5Y,KAAKuZ,MAAMX,GAC1B,QAAS,MAAO,M,4BAIlBY,GACF,IAEItU,EAAQ,SAAAuU,GAAC,MAFD,uDAEWC,QAAQD,IAE/B,OAAOD,EAAIL,MAAM,IAAInU,IADL,SAAAyU,GAAC,OAAIvU,EAAMuU,IAAM,EAFpB,uDAE+BvU,EAAMuU,IAAMA,IACpBJ,KAAK,M,4BAGvCT,GAMF,IALA,IAAIe,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/LC,EAAe,CAAC,mBAAoB,QAAS,YAAa,cAAe,UAAW,IAAK,YAAa,YAAa,UAAW,MAAO,gBAAiB,YAAa,YAAa,UAAW,QAAS,cAAe,cAAe,gBAAiB,UAAW,QAAS,IAAK,UAAW,YAAa,YAAa,cAAe,gBAAiB,cAAe,oBAAqB,kBAAmB,gBAAiB,cAAe,YAAa,cAAe,gBAAiB,kBAAmB,oBAAqB,uBAE7fC,EAAU,GAEL/R,EAAI,EAAGA,EAAI8Q,EAAM/W,OAAQiG,IAC9B,IAAK,IAAIgS,EAAI,EAAGA,EAAI,GAAIA,IACpB,GAAIlB,EAAM9Q,GAAGoR,gBAAkBS,EAAQG,GAAI,CACvCD,GAAWD,EAAaE,GACxBD,GAAW,eACX,MAKZ,OAAOA,I,wCAGQ,IAAD,OACNzb,EAAY4B,KAAK7B,MAAjBC,QAER,OAAO,kBAAC,IAAD,CAAMjC,UAAWiC,EAAQoN,KAAM3I,UAAW,IAC7C,kBAAC,KAAD,CACIE,GAAG,qBACHpB,MAAM,QACN4O,WAAS,EACTD,WAAS,EACTE,KAAK,IACLuJ,QAAQ,IACR1Y,MAAOrB,KAAKjC,MAAM6a,MAClB5V,SAAU,SAACmF,GAAD,OAAO,EAAK2D,aAAa3D,EAAG,UACtC5K,OAAO,c,8CAKM,IAAD,OACZa,EAAY4B,KAAK7B,MAAjBC,QAER,OAAO,kBAAC,IAAD,CAAMjC,UAAWiC,EAAQ4b,WAAYnX,UAAW,GACnD,kBAAC,KAAD,CACIE,GAAG,mBACHmF,QAAM,EACN7G,MAAOrB,KAAKjC,MAAM8a,YAClB7V,SAAU,SAACmF,GAAD,OAAO,EAAK2D,aAAa3D,EAAG,gBACtC8R,YAAa,CACTC,UAAW,CACP/d,UAAWiC,EAAQ+b,OAG3BC,WAAW,wBACX7c,OAAO,UAENyC,KAAKjC,MAAMgb,WAAW/T,IAAI,SAAA0D,GAAM,OAC7B,kBAACC,GAAA,EAAD,CAAUvD,IAAKsD,EAAOvE,GAAI9C,MAAOqH,EAAOvE,IACnCuE,EAAOsQ,a,yCAOR,IACR5a,EAAY4B,KAAK7B,MAAjBC,QAER,OAAO,kBAAC,IAAD,CAAMjC,UAAWiC,EAAQoN,KAAM3I,UAAW,IAC7C,kBAAC,KAAD,CACIE,GAAG,qBACHpB,MAAM,SACN4O,WAAS,EACTD,WAAS,EACTE,KAAK,IACLuJ,QAAQ,IACR1Y,MAAOrB,KAAKjC,MAAM+a,OAClBvb,OAAO,SACP8K,WAAY,CACRgS,UAAU,Q,wCAMP,IACPjc,EAAY4B,KAAK7B,MAAjBC,QAER,OAAO,kBAAC,IAAD,CAAMjC,UAAWiC,EAAQkc,SAAUzX,UAAW,GACjD,uBAAG1G,UAAU,kBAAb,0B,+BAOJ,OACI,6BACK6D,KAAKua,kBACLva,KAAKwa,kBACLxa,KAAKya,wBACLza,KAAKwa,kBACLxa,KAAK0a,wB,GAtKAne,aA4KP2G,eAjNA,SAAAC,GAAK,MAAK,CACrBqI,KAAK,eACErI,EAAMwX,OAAOC,UADhB,CAEAvI,WAAYlP,EAAMC,QAAQ,GAC1ByX,cAAe1X,EAAMC,QAAQ,GAC7BzH,MAAO,IACPyB,WAAY,OACZC,YAAa,OACbmL,SAAU,aAGdwR,WAAY,CACR3H,WAAYlP,EAAMC,QAAQ,GAC1ByX,cAAe1X,EAAMC,QAAQ,GAC7BzH,MAAO,IACPyB,WAAY,OACZC,YAAa,OACbmL,SAAU,WACV3M,aAAc,GACdD,UAAW,IAGf0e,SAAU,CACN9Z,gBAAiB,cACjB7E,MAAO,OACPyB,WAAY,OACZC,YAAa,OACbmL,SAAU,WACV3M,aAAc,GACdD,UAAW,IAGfue,KAAM,CACFxe,MAAO,OAgLAuH,CAAmByV,IC/K5BmC,G,YACF,WAAY3c,GAAQ,IAAD,8BACf,4CAAMA,KAED2N,aAAe,EAAKA,aAAanI,KAAlB,iBACpB,EAAK6D,cAAgB,EAAKA,cAAc7D,KAAnB,iBAErB,EAAK5F,MAAQ,CACTgB,KAAM,GACN6I,iBAAiB,GAGrB,EAAKmT,YAAc,CACf,CACI3C,KAAM,qDACNzM,MAAO,sDAEX,CACIyM,KAAM,2BACNzM,MAAO,4BAEX,CACIyM,KAAM,UACNzM,MAAO,WAEX,CACIyM,KAAM,yCACNzM,MAAO,0CAEX,CACIyM,KAAM,qDACNzM,MAAO,sDAEX,CACIyM,KAAM,kEACNzM,MAAO,oEAEX,CACIyM,KAAM,mCACNzM,MAAO,oCAEX,CACIyM,KAAM,6BACNzM,MAAO,8BAEX,CACIyM,KAAM,mCACNzM,MAAO,oCAEX,CACIyM,KAAM,iBACNzM,MAAO,mBAlDA,E,0EAuDNlK,EAAOxC,GAChBe,KAAKI,SAAL,eACKnB,EAAOwC,EAAMC,OAAOL,U,sCAIbtC,IACD,IAAIic,cACVC,MAAMhX,IAAI,aAAclF,GAC7Bmc,UAAUC,UAAUC,UAAUrc,GAC9BiB,KAAKI,SAAS,CACVwH,iBAAiB,M,0CAIJ,IAAD,OACRxJ,EAAY4B,KAAK7B,MAAjBC,QAER,OAAO,yBAAKjC,UAAWiC,EAAQid,oBAEvBrb,KAAK+a,YAAY/V,IAAI,SAAC0F,EAAMxF,GACxB,IAAIoW,EAAa,UAAM5Q,EAAK0N,KAAX,YAAmB,EAAKra,MAAMgB,KAA9B,YAAsC2L,EAAKiB,OAC5D,OAAO,kBAAC,IAAD,CAAMxP,UAAWiC,EAAQoN,KAAM3I,UAAW,EAAGuC,IAAKF,GACrD,kBAAC/F,EAAA,EAAD,CAAYqL,UAAU,IAAIrO,UAAWiC,EAAQW,MAErCuc,GAGR,yBAAKnf,UAAWiC,EAAQmd,YACpB,kBAAC9W,GAAA,EAAD,CAASiP,oBAAqB/I,IAAMlN,MAAM,qBACtC,kBAACiH,EAAA,EAAD,CAAYtF,MAAM,YAAYuF,aAAW,OAAOlF,QAAS,WACrD,EAAK+b,gBAAgBF,KAGjB,uBAAGnf,UAAU,kBAAb,iB,sCAchC6D,KAAKI,SAAS,CACVwH,iBAAiB,M,+BAIf,IAAD,OACGxJ,EAAY4B,KAAK7B,MAAjBC,QACR,OACI,6BACI,kBAAC,IAAD,CAAMjC,UAAWiC,EAAQoN,KAAM3I,UAAW,IACtC,kBAAC1D,EAAA,EAAD,CAAYqL,UAAU,KAAtB,wEAGA,kBAAC,KAAD,CACIzH,GAAG,OACHpB,MAAM,OACNxF,UAAWiC,EAAQqd,UACnBpa,MAAOrB,KAAKjC,MAAMgB,KAClBiE,SAAU,SAACmF,GAAD,OAAO,EAAK2D,aAAa3D,EAAG,SACtC5K,OAAO,SACPme,WAAY,CACRC,aAAc,UAIzB3b,KAAK4b,oBACN,kBAAC,GAAD,CACI1V,KAAMlG,KAAKjC,MAAM6J,gBACjBvB,YAAarG,KAAKwH,cAClBzI,KAAK,8B,GArIFxC,aA4IR2G,eAzKA,SAAAC,GAAK,MAAK,CACrBqI,KAAK,eACErI,EAAMwX,OAAOC,UADhB,CAEAvI,WAAYlP,EAAMC,QAAQ,GAC1ByX,cAAe1X,EAAMC,QAAQ,GAC7BzH,MAAO,IACPyB,WAAY,OACZC,YAAa,OACbxB,aAAc,GACd2M,SAAU,aAEd+S,WAAY,CACRxf,QAAS,eACTwc,YAAa,MACb/P,SAAU,WACVmD,MAAO,IACPwM,IAAK,IACLzM,OAAQ,IACR4G,cAAe,QAEnBvT,KAAM,CACFhD,QAAS,gBAEbsf,mBAAoB,CAChBQ,UAAW,MACXC,UAAW,UAgJJ5Y,CAAmB4X,ICtGnBiB,G,YApEX,WAAY5d,GAAQ,IAAD,8BACf,4CAAMA,KAED2N,aAAe,EAAKA,aAAanI,KAAlB,iBAEpB,EAAK5F,MAAQ,CACT8P,QAAS,GANE,E,0EAUN1F,EAAG9G,GACZrB,KAAKI,SAAS,CACVyN,QAASxM,M,mCAKb,OACI,kBAAC,KAAD,CAAO2a,QAAM,EAACtgB,MAAO,CAAEC,MAAO,IAAKyB,WAAY,OAAQC,YAAa,OAAQxB,aAAa,SACrF,kBAAC+R,GAAA,EAAD,CACIvM,MAAOrB,KAAKjC,MAAM8P,QAClB7K,SAAUhD,KAAK8L,aACfpM,QAAQ,YACRqO,eAAe,YACfC,UAAU,aAEV,kBAACG,GAAA,EAAD,CACIxH,KACI,uBAAGxK,UAAU,kBAAb,aAEJwF,MAAM,YAEV,kBAACwM,GAAA,EAAD,CACIxH,KACI,uBAAGxK,UAAU,kBAAb,eAEJwF,MAAM,aAEV,kBAACwM,GAAA,EAAD,CACIxH,KACI,uBAAGxK,UAAU,kBAAb,eAEJwF,MAAM,QACNW,UAAQ,Q,yCAQxB,OAAOtC,KAAKjC,MAAM8P,SACd,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,QAAS,OAAO,kBAAC,GAAD,S,+BAKpB,OACI,6BACK7N,KAAKic,aACLjc,KAAKkc,wB,GA/DD3f,aCVd,SAAS4f,GAAQC,EAAKC,GAGzB,GAFAD,EAAMlc,SAASkc,EAAK,KACpBC,EAAMnc,SAASmc,EAAK,KACRD,EACZ,OAAOhY,KAAKC,MAAMD,KAAKE,UAAY+X,EAAMD,EAAM,IAAOA,EAGnD,SAASE,KACZ,MAAO,OAASH,GAAQ,EAAG,KAAO,KAAOA,GAAQ,EAAG,KAAO,KAAOA,GAAQ,EAAG,KAAO,IAGzE,IC0CTI,G,YACF,WAAYpe,GAAQ,IAAD,8BACf,4CAAMA,KAEDJ,MAAQ,CACTsP,OAAQ,CACJmP,iBAAkB,GAClBC,IAAK,EACLC,IAAK,GACLC,gBAAiB,EACjBC,UAAW,EACXC,cAAe,CACX,MAXG,E,iFAkBf7c,KAAK8c,oB,wCAGU,IACP1e,EAAY4B,KAAK7B,MAAjBC,QAER,OAAO,kBAAC,IAAD,CAAMjC,UAAWiC,EAAQkc,SAAUzX,UAAW,GACjD,uBAAG1G,UAAU,kBAAb,0B,yCAMWgM,EAAGxG,GAAQ,IAAD,OACrBN,EAAQ8G,EAAEzG,OAAOL,MACrBrB,KAAKI,SAAS,CACViN,OAAO,eACArN,KAAKjC,MAAMsP,OADZ,eAED1L,EAAQN,KAEd,WACe,cAAVM,GACU,KAAVN,GACJ,EAAKyb,sB,oCAKT,IAAM/e,EAAQiC,KAAKjC,MAAMsP,OAEzB,OAAOtP,EAAM8e,cAAc7X,IAAI,SAAC6C,EAAKC,GACjC,OACI,kBAAC,WAAD,CAAU1C,IAAK0C,GACX,2BAEQD,EAAI7C,IAAI,SAAC3E,EAAK6E,GACV,OAAO,0BACHE,IAAKF,EACLxJ,MACI2E,IAAQH,SAASnC,EAAM6e,UAAW,IAC5B,CAAExd,MAAO,OACT,IAIN8F,IAAU2C,EAAIhG,OAAS,EACjBxB,EACAA,EAAM,SAO5ByH,IAAM/J,EAAM8e,cAAchb,OAAS,EAC7B,KACA,kBAACkJ,EAAA,EAAD,W,wCAQtB,IAAMhN,EAAQiC,KAAKjC,MAAMsP,OAEzB,GAAKtP,EAAM4e,gBAAX,CAOA,IALA,IAAInM,EAAOtQ,SAASnC,EAAM4e,gBAAiB,KAAOzc,SAASnC,EAAMye,iBAAkB,IAC7Eze,EAAMye,iBACNze,EAAM4e,gBAERI,EAAU,GACLjV,EAAI,EAAGA,EAAI0I,EAAM1I,IACtBiV,EAAQ/U,KAAK,IAIjB,IADA,IAAI6F,EAAU,EACL3B,EAAI,EAAGA,EAAInO,EAAMye,iBAAkBtQ,IACxC6Q,EAAQlP,GAAS7F,KAAKmU,GAAQnc,KAAKjC,MAAMsP,OAAOoP,IAAKzc,KAAKjC,MAAMsP,OAAOqP,QACvE7O,IACgBkP,EAAQlb,SACpBgM,EAAU,GAIlB7N,KAAKI,SAAS,CACViN,OAAO,eACArN,KAAKjC,MAAMsP,OADZ,CAEFwP,cAAc,GAAD,OAAME,U,wCAKZ,IAAD,OACN3e,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAACqG,GAAA,EAAD,CAASiP,oBAAqB/I,IAAMlN,MAAM,aACtC,kBAACoH,GAAA,EAAD,CACInF,QAAQ,WACRN,MAAM,UACNjD,UAAWiC,EAAQ0G,IACnBrF,QAAS,WACL,EAAKqd,oBAET,uBAAG3gB,UAAU,iBAAiBT,MAAO,CAAE2B,YAAa,SAApD,aAPJ,gB,+BAgBF,IAAD,OACGe,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,6BACI,kBAAC,IAAD,CAAMyE,UAAW,EAAG1G,UAAWiC,EAAQ4e,SACnC,kBAAC,KAAD,CACIja,GAAG,mBACHka,aAAcjd,KAAKjC,MAAMsP,OAAOmP,iBAChCrgB,UAAWiC,EAAQqd,UACnBnL,WAAS,EACT3O,MAAM,iCACNjC,QAAQ,WACRnC,OAAO,SACPyF,SAAU,SAACmF,GAAQ,EAAK+U,mBAAmB/U,EAAG,uBAElD,kBAAC,KAAD,CACIpF,GAAG,MACHka,aAAcjd,KAAKjC,MAAMsP,OAAOoP,IAChCtgB,UAAWiC,EAAQ+e,WACnB/C,WAAW,UACX7c,OAAO,SACPyF,SAAU,SAACmF,GAAQ,EAAK+U,mBAAmB/U,EAAG,UAElD,kBAAC,KAAD,CACIpF,GAAG,MACHka,aAAcjd,KAAKjC,MAAMsP,OAAOqP,IAChCvgB,UAAWiC,EAAQgf,WACnBhD,WAAW,UACX7c,OAAO,SACPyF,SAAU,SAACmF,GAAQ,EAAK+U,mBAAmB/U,EAAG,UAElD,kBAAC,KAAD,CACIpF,GAAG,MACHka,aAAcjd,KAAKjC,MAAMsP,OAAOuP,UAChC5Z,SAAU,SAACmF,GAAQ,EAAK+U,mBAAmB/U,EAAG,cAC9ChM,UAAWiC,EAAQ+e,WACnB/C,WAAW,mBACX7c,OAAO,WAEX,kBAAC,KAAD,CACIwF,GAAG,MACHka,aAAcjd,KAAKjC,MAAMsP,OAAOsP,gBAChCxgB,UAAWiC,EAAQgf,WACnBhD,WAAW,OACX7c,OAAO,SACPyF,SAAU,SAACmF,GAAQ,EAAK+U,mBAAmB/U,EAAG,uBAGrDnI,KAAKwa,kBACN,kBAAC,IAAD,CAAM3X,UAAW,EAAG1G,UAAWiC,EAAQif,aAClCrd,KAAKqd,eAETrd,KAAKqW,uB,GA3LE9Z,aAiMT2G,eAzOA,SAAAC,GAAK,MAAK,CACrB6Z,QAAS,CACLrhB,MAAO,IACPyB,WAAY,OACZC,YAAa,OACbxB,aAAc,OACd2H,QAAS,YAEb6Z,YAAa,CACT1hB,MAAO,OACPwB,SAAU,IACVrB,UAAW,UACXsB,WAAY,OACZC,YAAa,OACbxB,aAAc,OACd2H,QAAS,aAEb8W,SAAU,CACN9Z,gBAAiB,cACjB7E,MAAO,OACPyB,WAAY,OACZC,YAAa,OACbmL,SAAU,WACV3M,aAAc,GACdD,UAAW,IAEfuhB,WAAY,CACRxhB,MAAO,QACP0B,YAAa,QAEjB+f,WAAY,CACRzhB,MAAO,SAEXmJ,IAAK,CACD0D,SAAU,QACVkD,OAAQvI,EAAMC,QAAQ,GACtBuI,MAAOxI,EAAMC,QAAQ,MAqMdF,CAAmBqZ,IC7M5Be,G,YACF,WAAYnf,GAAQ,IAAD,8BACf,4CAAMA,KAEDof,YAAc,EAAKA,YAAY5Z,KAAjB,iBAEnB,EAAK5F,MAAQ,CACTqP,MAAOkP,MANI,E,2EAWftc,KAAKI,SAAS,CACVgN,MAAOkP,S,+BAIL,IAAD,OACGle,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,6BACI,kBAACyG,GAAA,EAAD,CACInF,QAAQ,WACRiF,aAAW,OACXxI,UAAWiC,EAAQR,OACnB6B,QAAS,kBAAM,EAAK8d,eACpBne,MAAM,aAEN,uBAAGjD,UAAU,iBAAiBT,MAAO,CAAE2B,YAAa,SAApD,iBAPJ,aAYA,kBAAC,IAAD,CAAMwF,UAAW,GAAI1G,UAAWiC,EAAQof,WACpC,yBACIrhB,UAAWiC,EAAQof,UACnB9hB,MAAO,CAAE8E,gBAAiBR,KAAKjC,MAAMqP,OACrC3N,QAASO,KAAKud,oB,GAtCfhhB,aA8CR2G,eA9EA,SAAAC,GAAK,MAAK,CACrBsa,SAAU,CACN9hB,MAAO,IACPyB,WAAY,OACZC,YAAa,OACbxB,aAAc,OACd2H,QAAS,YAEbga,UAAW,CACP7hB,MAAO,OACPwB,SAAU,IACVmO,UAAW,IACXxP,UAAW,SACXsB,WAAY,OACZC,YAAa,OACbqgB,mBAAoB,OACpBxF,OAAQ,WAEZoC,SAAU,CACN9Z,gBAAiB,cACjB7E,MAAO,OACPyB,WAAY,OACZC,YAAa,OACbmL,SAAU,WACV3M,aAAc,GACdD,UAAW,IAEfgC,OAAQ,CACJ/B,aAAcsH,EAAMC,QAAQ,MAkDrBF,CAAmBoa,I,UC5C5BK,G,YACF,WAAYxf,GAAQ,IAAD,8BACf,4CAAMA,KAgBV+Y,SAAW,WAAO,IACNA,EAAa,EAAKnZ,MAAM4f,KAAxBzG,SACR,EAAK9W,SAAS,CACVud,KAAK,eACE,EAAK5f,MAAM4f,KADd,CAEAzG,SAAUA,EAAW,EACrBxN,MAAO,MAEZ,WACKwN,GAAY,MACZhT,cAAc,EAAKH,OACnB,EAAK3D,SAAS,CACVud,KAAK,eACE,EAAK5f,MAAM4f,KADd,CAEAjU,MAAyB,IAAlByS,GAAQ,EAAG,GAAW,QAAU,QACvCjF,SAAU,UA7B1B,EAAKnT,MAAQ,KAEb,EAAKhG,MAAQ,CACT4f,KAAM,CACFjU,MAAO,GACPwN,SAAU,IARH,E,iFAcflX,KAAK4d,e,mCA0B4B,IAA7B5d,KAAKjC,MAAM4f,KAAKzG,SAChBlX,KAAK+D,MAAQgB,YAAY/E,KAAKkX,SAAU,KAExChT,cAAclE,KAAK+D,OACnB/D,KAAKI,SAAS,CACVud,KAAK,eACE3d,KAAKjC,MAAM4f,KADd,CAEAzG,SAAU,MAGlBlX,KAAK+D,MAAQgB,YAAY/E,KAAKkX,SAAU,O,+BAItC,IAAD,OACG9Y,EAAY4B,KAAK7B,MAAjBC,QAER,OAAO,kBAAC,WAAD,KACH,kBAACyG,GAAA,EAAD,CACInF,QAAQ,WACRiF,aAAW,OACXxI,UAAWiC,EAAQR,OACnB6B,QAAS,kBAAM,EAAKme,cACpBxe,MAAM,aAEN,uBAAGjD,UAAU,iBAAiBT,MAAO,CAAE2B,YAAa,SAApD,aAPJ,QAYA,kBAAC,IAAD,CACIwF,UAAW,GACX1G,UAAWiC,EAAQyf,SACnBze,MAAM,UACN1D,MAC8B,UAA1BsE,KAAKjC,MAAM4f,KAAKjU,MACV,CAAElJ,gBAAiB,QAASpB,MAAO,SACnC,CAAEoB,gBAAiB,QAASpB,MAAO,UAIzCY,KAAKjC,MAAM4f,KAAKzG,SAAW,EACrB,kBAAC4G,GAAA,EAAD,CACE3hB,UAAWiC,EAAQ8Y,SACnB9X,MAAM,YACNM,QAAQ,cACRF,KAAM,GACN6B,MAAOrB,KAAKjC,MAAM4f,KAAKzG,WAGzB,4BAAKlX,KAAKjC,MAAM4f,KAAKjU,a,GA3F5BnN,aAkGJ2G,eAnIA,SAAAC,GAAK,MAAK,CACrBmX,SAAU,CACN9Z,gBAAiB,cACjB7E,MAAO,OACPyB,WAAY,OACZC,YAAa,OACbmL,SAAU,WACV3M,aAAc,GACdD,UAAW,IAEfiiB,SAAU,CACN7c,aAAc,OACdrF,MAAO,IACPoF,OAAQ,IACR3D,WAAY,OACZC,YAAa,OACbvB,UAAW,SACXwW,cAAe,SACfyL,WAAY,QACZL,mBAAoB,OACpB3hB,QAAS,OACTwP,eAAgB,SAChBjE,WAAY,UAEhB1J,OAAQ,CACJ/B,aAAcsH,EAAMC,QAAQ,IAEhC8T,SAAU,CACNtb,UAAW,OACXC,aAAc,UAsGPqH,CAAmBya,ICxF5BK,G,YACF,WAAY7f,GAAQ,IAAD,8BACf,4CAAMA,KAEDJ,MAAQ,CACTigB,KAAM,CACFC,cAAe,EACfC,MAAO,KANA,E,iFAYfle,KAAKme,kB,wCAIU,IACP/f,EAAY4B,KAAK7B,MAAjBC,QAER,OAAO,kBAAC,IAAD,CAAMjC,UAAWiC,EAAQkc,SAAUzX,UAAW,GACjD,uBAAG1G,UAAU,kBAAb,0B,wCAMW,IAAD,OACNiC,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAACyG,GAAA,EAAD,CACInF,QAAQ,WACRN,MAAM,UACNjD,UAAWiC,EAAQ0G,IACnBrF,QAAS,WACL,EAAK0e,kBAET,uBAAGhiB,UAAU,iBAAiBT,MAAO,CAAE2B,YAAa,SAApD,gBAPJ,U,gCAeE+gB,GACN,OAAQA,GACJ,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,QAAS,U,sCAMb,IADA,IAAIvW,EAAM,GACDC,EAAI,EAAGA,EAAI9H,KAAKjC,MAAMigB,KAAKC,cAAenW,IAC/CD,EAAIG,KAAKmU,GAAQ,EAAG,IAGxBnc,KAAKI,SAAS,CACV4d,KAAK,eACEhe,KAAKjC,MAAMigB,KADd,CAEAE,MAAM,GAAD,OAAMrW,S,kCAKV,IAAD,OACR,OAAO7H,KAAKjC,MAAMigB,KAAKE,MAAMlZ,IAAI,SAACoZ,EAAMlZ,GACpC,OAAO,yBACH5I,IAAI,OACJH,UAAU,WACVC,IAAK,EAAKiiB,UAAUD,GACpBhZ,IAAKF,Q,+BAKP,IAAD,OACG9G,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMyE,UAAW,EAAG1G,UAAWiC,EAAQ4e,SACnC,kBAAC,KAAD,CACIja,GAAG,gBACHka,aAAcjd,KAAKjC,MAAMigB,KAAKC,cAC9B9hB,UAAWiC,EAAQqd,UACnBnL,WAAS,EACT3O,MAAM,0BACNjC,QAAQ,WACRnC,OAAO,SACPyF,SAAU,SAACmF,GACP,EAAK/H,SAAS,CACV4d,KAAK,eACE,EAAKjgB,MAAMigB,KADd,CAEAC,cAAe9V,EAAEzG,OAAOL,SAE7B,WAAQ,EAAK8c,sBAI3Bne,KAAKwa,kBACN,kBAAC,IAAD,CAAM3X,UAAW,EAAG1G,UAAWiC,EAAQkgB,WAClCte,KAAKse,aAETte,KAAKqW,uB,GA/GH9Z,aAqHJ2G,eAhKA,SAAAC,GAAK,MAAK,CACrB6Z,QAAS,CACLrhB,MAAO,IACPyB,WAAY,OACZC,YAAa,OACbxB,aAAc,OACd2H,QAAS,YAEb8W,SAAU,CACN9Z,gBAAiB,cACjB7E,MAAO,OACPyB,WAAY,OACZC,YAAa,OACbmL,SAAU,WACV3M,aAAc,GACdD,UAAW,IAEfgC,OAAQ,CACJ/B,aAAcsH,EAAMC,QAAQ,IAGhCmb,SAAU,CACNhhB,OAAQ4F,EAAMC,QAAQ,GACtB1F,SAAU,OACV8C,gBAAiB,QACjBpB,MAAO,SAEX0F,IAAK,CACD0D,SAAU,QACVkD,OAAQvI,EAAMC,QAAQ,GACtBuI,MAAOxI,EAAMC,QAAQ,IAEzBkb,UAAW,CACP3iB,MAAO,OACPwB,SAAU,IACVrB,UAAW,SACXsB,WAAY,OACZC,YAAa,OACbxB,aAAc,OACd2H,QAAS,eAyHFN,CAAmB8a,ICrF5BQ,G,YACF,WAAYrgB,GAAQ,IAAD,8BACf,4CAAMA,KAEDsgB,gBAAkB,EAAKA,gBAAgB9a,KAArB,iBAEvB,EAAKI,MAAQ,KAEb,EAAKhG,MAAQ,CACT8P,QAAS,GARE,E,6EAYH1J,GACZnE,KAAKI,SAAS,CACVyN,QAAS1J,M,sCAKb,OAAQnE,KAAKjC,MAAM8P,SACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,QAAS,OAAO,kBAAC,GAAD,S,oCAIT,IAAD,OACFzP,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,6BACI,yBAAKjC,UAAWiC,EAAQsgB,UACpB,kBAACnZ,GAAA,EAAD,CACIC,OAAQ,kBAACC,EAAA,EAAD,WACR9D,MAAM,UACNvC,MAAM,UACNM,QAAgC,IAAvBM,KAAKjC,MAAM8P,QAAgB,UAAY,WAChDpO,QAAS,kBAAM,EAAKgf,gBAAgB,IACpCtiB,UAAWiC,EAAQ+G,OAEvB,kBAACI,GAAA,EAAD,CACIC,OAAQ,kBAACC,EAAA,EAAD,WACR9D,MAAM,QACNvC,MAAM,YACNM,QAAgC,IAAvBM,KAAKjC,MAAM8P,QAAgB,UAAY,WAChDpO,QAAS,kBAAM,EAAKgf,gBAAgB,IACpCtiB,UAAWiC,EAAQ+G,OAEvB,kBAACI,GAAA,EAAD,CACIC,OAAQ,kBAACC,EAAA,EAAD,WACR9D,MAAM,eACNjC,QAAgC,IAAvBM,KAAKjC,MAAM8P,QAAgB,UAAY,WAChDpO,QAAS,kBAAM,EAAKgf,gBAAgB,IACpCtiB,UAAWiC,EAAQ+G,OAEvB,kBAACI,GAAA,EAAD,CACIC,OAAQ,kBAACC,EAAA,EAAD,WACR9D,MAAM,cACNjC,QAAgC,IAAvBM,KAAKjC,MAAM8P,QAAgB,UAAY,WAChDpO,QAAS,kBAAM,EAAKgf,gBAAgB,IACpCtiB,UAAWiC,EAAQ+G,QAG1BnF,KAAKqL,mB,+BAMd,OACI,6BACKrL,KAAK2e,mB,GA1EGpiB,aAoFV2G,eA7JA,SAAAC,GAAK,MAAK,CACrBub,SAAU,CACN3iB,QAAS,OACTwP,eAAgB,SAChBqT,SAAU,OACVjjB,MAAO,IACPyB,WAAY,OACZC,YAAa,OACbxB,aAAc,QAElBsJ,KAAM,CACF5H,OAAQ4F,EAAMC,QAAQ,IAE1B4Z,QAAS,CACLrhB,MAAO,IACPyB,WAAY,OACZC,YAAa,OACbxB,aAAc,OACd2H,QAAS,YAEb8W,SAAU,CACN9Z,gBAAiB,cACjB7E,MAAO,OACPyB,WAAY,OACZC,YAAa,OACbmL,SAAU,WACV3M,aAAc,GACdD,UAAW,IAEfiiB,SAAU,CACN7c,aAAc,OACdrF,MAAO,IACPoF,OAAQ,IACR3D,WAAY,OACZC,YAAa,OACbvB,UAAW,SACXwW,cAAe,SACfyL,WAAY,QACZL,mBAAoB,OACpB3hB,QAAS,OACTwP,eAAgB,SAChBjE,WAAY,UAEhB1J,OAAQ,CACJ/B,aAAcsH,EAAMC,QAAQ,IAEhC8T,SAAU,CACNtb,UAAW,OACXC,aAAc,QAGlB0iB,SAAU,CACNhhB,OAAQ4F,EAAMC,QAAQ,GACtB1F,SAAU,OACV8C,gBAAiB,QACjBpB,MAAO,SAEX0F,IAAK,CACD0D,SAAU,QACVkD,OAAQvI,EAAMC,QAAQ,GACtBuI,MAAOxI,EAAMC,QAAQ,IAEzBkb,UAAW,CACP3iB,MAAO,OACPwB,SAAU,IACVrB,UAAW,UACXsB,WAAY,OACZC,YAAa,OACbxB,aAAc,OACd2H,QAAS,eAwFFN,CAAmBsb,I,+DCvEnBtb,mBAtFA,SAAAC,GAAK,MAAK,CACvBlG,KAAM,CACJlB,QAAS,OACTJ,MAAO,QACP4B,OAAQ,QAEViI,OAAQ,CACN7J,MAAO,GACPoF,OAAQ,GACR1D,YAAa,EACbvB,UAAW,SACXC,QAAS,eACTgiB,WAAY,QAEdc,QAAS,CACP9iB,QAAS,OACT+iB,cAAe,UAEjB9B,QAAS,CACP+B,KAAM,YAERC,MAAO,CACLrjB,MAAO,KAETsjB,SAAU,CACRljB,QAAS,OACTuL,WAAY,SACZiR,YAAapV,EAAMC,QAAQ,GAC3ByX,cAAe1X,EAAMC,QAAQ,IAE/B8b,SAAU,CACRne,OAAQ,GACRpF,MAAO,GACPyD,MAAO+D,EAAME,QAAQ6D,QAAQ0E,MAE/BuT,SAAU,CACR/f,MAAO+D,EAAME,QAAQd,UAAUqJ,MAEjCwT,WAAY,CACVhgB,MAAO,MA+CuB,CAAEigB,WAAW,GAAhCnc,CA3Cf,SAA0B/E,GAAQ,IACxBC,EAAmBD,EAAnBC,QAER,OAF2BD,EAAVgF,MAGf,kBAAC,IAAD,CAAMhH,UAAWiC,EAAQnB,KAAM4F,UAAW,IACxC,yBAAK1G,UAAWiC,EAAQygB,SACtB,kBAAC3f,GAAA,EAAD,CAAa/C,UAAWiC,EAAQ4e,SAC9B,kBAACvX,EAAA,EAAD,CACEtJ,UAAWiC,EAAQoH,OACnB9J,MAAO,CAAE8E,gBAAiBrC,EAAMmhB,KAAKlS,QAGnCjP,EAAMmhB,KAAKC,KAAK,IAGpB,wBAAI7jB,MAAO,CAAEK,QAAS,iBACnBoC,EAAMmhB,KAAKC,KAAKC,MAAM,IAEzB,uBAAG9f,QAAQ,YAAYN,MAAM,iBAC1BjB,EAAMmhB,KAAKG,mBAGhB,yBAAKtjB,UAAWiC,EAAQ6gB,UACtB,kBAACva,EAAA,EAAD,CAAYC,aAAW,OAAOlF,QAAS,WAAOtB,EAAMuhB,OAAOvhB,EAAMmhB,KAAKnb,MACpE,kBAAC,KAAD,CAAehI,UAAWiC,EAAQ8gB,YAEpC,kBAACxa,EAAA,EAAD,CAAYC,aAAW,QACrB,kBAAC,KAAD,CAAUxI,UAAWiC,EAAQ+gB,YAE/B,kBAACza,EAAA,EAAD,CAAYC,aAAW,SAASlF,QAAS,kBAAMtB,EAAMwhB,SAASxhB,EAAMmhB,KAAKnb,MACvE,kBAAC,KAAD,CAAYhI,UAAWiC,EAAQghB,mBClDrCQ,G,iLACQ,IACExhB,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAAC0H,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAMlG,KAAK7B,MAAM+H,KACjBC,iBAAkBnG,KAAK7B,MAAMgI,iBAAmBnG,KAAK7B,MAAMgI,iBAAmB,IAC9EC,QAASpG,KAAK7B,MAAMkI,aAEpB,kBAACC,GAAA,EAAD,CACInK,UAAWoK,IAAWnI,EAAQ2I,OAC9BN,mBAAiB,kBACjBC,QACI,0BAAM3D,GAAG,kBAAkB5G,UAAWiC,EAAQsI,SAC1C,uBAAGvK,UAAWoK,IAAWnI,EAAQuI,KAAMvI,EAAQwI,YAAa,mBAA5D,iBAGC5G,KAAK7B,MAAMY,KAAK8C,OAAS7B,KAAK7B,MAAMY,KAAO,SAGpD8E,OAAQ,CACJ,kBAACa,EAAA,EAAD,CACIU,IAAI,QACJT,aAAW,QACXvF,MAAM,UACNjD,UAAWiC,EAAQyI,MACnBpH,QAASO,KAAK7B,MAAMkI,aAEpB,uBAAGlK,UAAU,kBAAb,kB,GAjCRI,aA4CL2G,eAtEA,SAAAC,GAAK,MAAK,CACrBqD,QAAS,CACLhG,gBAAiBsG,KAAM,MAE3BC,MAAO,CACHvG,gBAAiB2C,EAAME,QAAQ0D,MAAMC,MAEzCC,KAAM,CACFzG,gBAAiB2C,EAAME,QAAQ6D,QAAQF,MAE3CG,QAAS,CACL3G,gBAAiB4G,KAAM,MAE3BT,KAAM,CACFjJ,SAAU,IAEdkJ,YAAa,CACTS,QAAS,GACThK,YAAa8F,EAAMC,WAEvBsD,QAAS,CACL3K,QAAS,OACTuL,WAAY,YAgDLpE,CAAmB0c,IC7D5BC,G,YACF,WAAY1hB,GAAQ,IAAD,8BACf,4CAAMA,KAEDJ,MAAQ,GAHE,E,sEASf,OACI,kBAAC0R,GAAA,EAAD,CACIvJ,KAAMlG,KAAK7B,MAAM2hB,YACjB1Z,QAASpG,KAAK7B,MAAM4hB,mBACpBpQ,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAa7M,GAAG,qBAAqB,eAAiB/C,KAAK7B,MAAM6hB,SAAW,KAC5E,kBAACjV,EAAA,EAAD,CAASrL,QAAQ,WAEbM,KAAK7B,MAAM8hB,QAAQjb,IAAI,SAACkb,EAAGhb,GACvB,OACI,kBAAC,WAAD,CAAUE,IAAKF,GACX,yBAAKxJ,MAAO,CAAE8H,QAAS,KACnB,uBAAG9H,MAAO,CAAEK,QAAS,WACjB,sCAEYmJ,EAAQ,EAFpB,aAE0Bgb,EAAEC,gBAIhC,uBACIhkB,UAAU,iBACVT,MACI,CACIK,QAAS,SACTqD,MAAO8gB,EAAEE,UAAY,QAAU,MAC/BhjB,WAAY,IAGnB8iB,EAAEE,UAAY,WAAa,SAEhC,2CAAiBF,EAAEG,YAEdH,EAAEE,UAEG,KADA,8CAAoBF,EAAEI,gBAKpC,kBAACvV,EAAA,EAAD,CAASrL,QAAQ,cAKjC,kBAACH,GAAA,EAAD,CACIH,MAAM,UACNK,QAASO,KAAK7B,MAAM4hB,oBAFxB,qB,GAtDMxjB,aAiEPuB,eAAQ,WACnB,MAAO,IAEP,SAAAG,GACI,OAAOC,YAAmB,GAAID,IAJvBH,CAKR+hB,ICxFA,SAASU,GAAYvhB,GACxB,MAAO,CACHtC,KAAM,cACNsC,QAID,SAASwhB,GAASxhB,GACrB,MAAO,CACHtC,KAAM,WACNsC,QCFR,IA+BMyhB,G,YACF,WAAYtiB,GAAQ,IAAD,8BACf,4CAAMA,KAEDJ,MAAQ,CACT2iB,KAAM,CACFvc,GAAI,EACJob,KAAM,GACNE,iBAAkB,GAClBrS,MAAO,OACPuT,KAAM,GACNC,UAAW,CACP,CACIzc,GAAI,EACJ+K,KAAM,GACN2R,QAAS,CACL,CACI3R,KAAM,GACN4R,SAAS,GAEb,CACI5R,KAAM,GACN4R,SAAS,GAEb,CACI5R,KAAM,GACN4R,SAAS,GAEb,CACI5R,KAAM,GACN4R,SAAS,OAM7BC,UAAW,GAnCA,E,iFAwCf,IAAM5c,EAAK+R,KAAE8K,WAEbhhB,KAAKI,SAAS,CACVsgB,KAAM,CACFvc,GAAI+R,KAAE8K,WACNzB,KAAM,GACNE,iBAAkB,GAClBrS,MAAO,OACPuT,KAAM,GACNC,UAAW,CACP,CACIzc,KACA+K,KAAM,GACN2R,QAAS,CACL,CACI3R,KAAM,GACN4R,SAAS,GAEb,CACI5R,KAAM,GACN4R,SAAS,GAEb,CACI5R,KAAM,GACN4R,SAAS,GAEb,CACI5R,KAAM,GACN4R,SAAS,OAM7BC,UAAW5c,M,6CAKyBA,GAAK,IAAhB9C,EAAe,EAAzBK,OAAUL,MAC7BrB,KAAKI,SAAS,CACVsgB,KAAK,eACE1gB,KAAKjC,MAAM2iB,KADd,CAEAE,UAAU,aACH5gB,KAAKjC,MAAM2iB,KAAKE,UAAU5b,IAAI,SAACic,GAC9B,OAAGA,EAAE9c,KAAOA,EAAW8c,EAChB,eACAA,EADP,CAEI/R,KAAM7N,a,2CAQY6D,GAAQ,IAAD,OAAlB7D,EAAkB,EAA5BK,OAAUL,MACrB8C,EAAKnE,KAAKjC,MAAMgjB,UAEtB/gB,KAAKI,SAAS,CACVsgB,KAAK,eACE1gB,KAAKjC,MAAM2iB,KADd,CAEAE,UAAU,aACH5gB,KAAKjC,MAAM2iB,KAAKE,UAAU5b,IAAI,SAACic,GAC9B,OAAGA,EAAE9c,KAAOA,EAAW8c,EAChB,eACAA,EADP,CAEIJ,QAAQ,aACD3K,KAAEC,KAAK,EAAKpY,MAAM2iB,KAAKE,UAAW,CAACzc,OAAK0c,QAAQ7b,IAAI,SAACkc,EAAGpZ,GACvD,OAAGA,IAAM5C,EAAcgc,EAChB,eACAA,EADP,CAEIhS,KAAM7N,kB,qCAW1B,IAAD,OACHjD,EAAY4B,KAAK7B,MAAjBC,QACAwiB,EAAc5gB,KAAKjC,MAAM2iB,KAAzBE,UACAG,EAAc/gB,KAAKjC,MAAnBgjB,UACFI,EAAkBjL,KAAEC,KAAKyK,EAAW,CAAEzc,GAAI4c,IACxCF,EAAYM,EAAZN,QAGR,OACI,kBAAC,IAAD,CAAMhe,UAAW,EAAG1G,UAAWiC,EAAQ4e,SACnC,kBAAC,KAAD,CACIC,aAAckE,EAAgBjS,KAC9B/S,UAAWiC,EAAQqd,UACnBnL,WAAS,EACT3O,MAAM,WACNjC,QAAQ,WACRnC,OAAO,SACPyF,SAAU,SAACmF,GAAQ,EAAKiZ,qBAAqBjZ,EAAG4Y,MAEpD,kBAAC,KAAD,CACI9D,aAAc4D,EAAQ,GAAG3R,KACzB/S,UAAWiC,EAAQ+e,WACnB/C,WAAW,eACX7c,OAAO,SACPyF,SAAU,SAACmF,GAAQ,EAAKkZ,mBAAmBlZ,EAAG,MAElD,kBAAC,KAAD,CACI8U,aAAc4D,EAAQ,GAAG3R,KACzB/S,UAAWiC,EAAQ+e,WACnB/C,WAAW,gBACX7c,OAAO,SACPyF,SAAU,SAACmF,GAAQ,EAAKkZ,mBAAmBlZ,EAAG,MAElD,kBAAC,KAAD,CACI8U,aAAc4D,EAAQ,GAAG3R,KACzB/S,UAAWiC,EAAQ+e,WACnB/C,WAAW,eACX7c,OAAO,SACPyF,SAAU,SAACmF,GAAQ,EAAKkZ,mBAAmBlZ,EAAG,MAElD,kBAAC,KAAD,CACIpF,GAAG,MACHka,aAAc4D,EAAQ,GAAG3R,KACzB/S,UAAWiC,EAAQ+e,WACnB/C,WAAW,gBACX7c,OAAO,SACPyF,SAAU,SAACmF,GAAQ,EAAKkZ,mBAAmBlZ,EAAG,S,+BAQ1D,OACI,6BACKnI,KAAKshB,oB,GApLC/kB,aA0LR2G,eAzNA,SAAAC,GAAK,MAAK,CACrB6Z,QAAS,CACLrhB,MAAO,IACPyB,WAAY,OACZC,YAAa,OACbxB,aAAc,OACd2H,QAAS,YAEb6Z,YAAa,CACT1hB,MAAO,OACPwB,SAAU,IACVrB,UAAW,UACXsB,WAAY,OACZC,YAAa,OACbxB,aAAc,OACd2H,QAAS,aAEb2Z,WAAY,CACRxhB,MAAO,QACP0B,YAAa,QAEjB+f,WAAY,CACRzhB,MAAO,SAEXmJ,IAAK,CACD0D,SAAU,QACVkD,OAAQvI,EAAMC,QAAQ,GACtBuI,MAAOxI,EAAMC,QAAQ,MA8LdF,CAAmBud,ICtM5B5jB,GAAW,eACV0kB,GAuBDC,G,YACF,WAAYrjB,GAAQ,IAAD,uBACf,4CAAMA,KACDJ,MAAQ,CACT0jB,YAAa,QACbC,OAAQ,GACRC,OAAQ,GACRC,kBAAmB,GACnBC,aAAc,EACdC,YAAY,EACZC,cAAe,GACfhR,cAAc,EACdiR,oBAAoB,EACpBC,aAAc,GACdC,UAAW,GACXpC,aAAa,EACbqC,gBAAiB,IAfN,MAkBmB,EAAKhkB,MAA/BoiB,EAlBO,EAkBPA,YAAaC,EAlBN,EAkBMA,SAlBN,OAmBf,EAAKD,YAAcA,EACnB,EAAKC,SAAWA,EAEhB,EAAK4B,WAAa,EAAKA,WAAWze,KAAhB,iBAClB,EAAKgN,oBAAsB,EAAKA,oBAAoBhN,KAAzB,iBAC3B,EAAKoc,mBAAqB,EAAKA,mBAAmBpc,KAAxB,iBAC1B,EAAK0e,iBAAmB,EAAKA,iBAAiB1e,KAAtB,iBACxB,EAAKiN,iBAAmB,EAAKA,iBAAiBjN,KAAtB,iBA1BT,E,kFA+Bf3D,KAAKI,SAAS,CACV0f,aAAa,EACb6B,OAAQ,GACRC,kBAAmB,GACnBC,aAAc,EACdC,YAAY,EACZC,cAAe,O,4CAKnB/hB,KAAKI,SAAS,CACV2Q,cAAc,EACdiR,oBAAoB,M,wCAKxB,OAAOhiB,KAAKjC,MAAM6jB,kBAAkB5hB,KAAKjC,MAAM8jB,gB,yCAGhCS,GACf,OAAOpM,KAAEqM,QAAQD,EAAetd,IAAI,SAACwd,GACjC,OAAO,eACAA,EADP,CAEI3B,QAAS3K,KAAEqM,QAAQC,EAAS3B,gB,uCAKvB1c,GACbnE,KAAKugB,YAAY,CAAEpc,OAEnBnE,KAAKI,SAAS,CACV+hB,gBAAiBjM,KAAEC,KAAKnW,KAAK7B,MAAMqjB,OAAQ,CAACrd,OAC5C6d,oBAAoB,M,yCAKxBhiB,KAAKwgB,SAASxgB,KAAKjC,MAAMokB,iBAEzBniB,KAAKI,SAAS,CACV4hB,oBAAoB,M,iCAIjB7d,GACP,IAAM4D,EAAMmO,KAAEC,KAAKnW,KAAK7B,MAAMqjB,OAAQ,CAAErd,GAAIA,IAE5CnE,KAAKI,SAAS,CACVqhB,YAAa,WACbE,OAAQ5Z,EACR6Z,kBAAmB5hB,KAAKyiB,mBAAmB1a,EAAI6Y,WAC/CiB,aAAc,EACdC,YAAY,EACZC,cAAe,O,4CAIA,IAAD,OAClB,OAAK/hB,KAAK7B,MAAMqjB,QAAWxhB,KAAK7B,MAAMqjB,OAAO3f,OAGzC,kBAACmJ,GAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAAS/H,QAAS,IAElCpD,KAAK7B,MAAMqjB,OAAOxc,IAAI,SAAC0F,GACnB,OACI,kBAACM,GAAA,EAAD,CAAM5F,IAAKsF,EAAKvG,GAAIuG,MAAI,GACpB,kBAACgY,GAAD,CACIpD,KAAI,eAAO5U,GACXgV,OAAQ,EAAK0C,WACbzC,SAAU,EAAK0C,uBAXiB,O,mCAqBnDM,GAAM,IAAD,OACd3iB,KAAKI,SAAS,CACV2Q,cAAc,EACdgR,cAAc,GAAD,oBACN/hB,KAAKjC,MAAMgkB,eADL,CAET,CACI5B,aAAcngB,KAAKjC,MAAM6jB,kBAAkB5hB,KAAKjC,MAAM8jB,cAAc3S,KACpEmR,WAAYsC,EAAIzT,KAChBoR,cAAepK,KAAEC,KAAKnW,KAAKjC,MAAM6jB,kBAAkB5hB,KAAKjC,MAAM8jB,cAAchB,QAAS,CAAEC,SAAS,IAAQ5R,KACxGkR,UAAWuC,EAAI7B,WAGvBmB,aAAcU,EAAI7B,QAAU,WAAa,eACzCoB,UAAWS,EAAI7B,QAAU,UAAY,SACtC,WACK,EAAK/iB,MAAM8jB,aAAe,EAAI,EAAK9jB,MAAM6jB,kBAAkB/f,OAC3D,EAAKzB,SAAS,CACV0hB,YAAY,EACZhC,aAAa,IAGjB,EAAK1f,SAAS,CACVyhB,aAAc,EAAK9jB,MAAM8jB,aAAe,Q,mCAO1C,IAAD,OACDzjB,EAAY4B,KAAK7B,MAAjBC,QAER,GAAG4B,KAAKjC,MAAM6kB,QAAS,OAAO,kBAAC,GAAD,MAE9B,IAAK5iB,KAAKjC,MAAM4jB,OAAOxd,GACnB,OACI,yBAAKzI,MAAO,CAAEC,MAAO,MAAOyB,WAAY,OAAQC,YAAa,SACxD2C,KAAK6iB,uBAKlB,IAAM5B,EAAIjhB,KAAK8iB,kBACf,OACI,kBAAC,WAAD,KACI,kBAAC,KAAD,CAAO3mB,UAAWiC,EAAQoN,KAAM3I,UAAW,GACvC,4BAAKoe,EAAE/R,OAEX,kBAAClE,GAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAAS/H,QAAS,IAElC6d,EAAEJ,QAAQ7b,IAAI,SAAC2d,EAAKzd,GAChB,OACI,kBAAC8F,GAAA,EAAD,CAAM5F,IAAKF,EAAOwF,MAAI,GAClB,kBAACnL,GAAA,EAAD,CACIG,QAAQ,YACRvD,UAAWiC,EAAQyiB,QACnBphB,QAAS,kBAAM,EAAKsjB,aAAaJ,KAG7BA,EAAIzT,a,uCAgBxC,MAAgC,YAAzBlP,KAAKjC,MAAMmkB,UACZ,kBAAC,GAAD,CACEhc,KAAMlG,KAAKjC,MAAMgT,aACjB1K,YAAarG,KAAK2Q,oBAClB5R,KAAMiB,KAAKjC,MAAMkkB,aACjB9b,iBAAkB,OAEpB,kBAAC,GAAD,CACED,KAAMlG,KAAKjC,MAAMgT,aACjB1K,YAAarG,KAAK2Q,oBAClB5R,KAAMiB,KAAKjC,MAAMkkB,aACjB9b,iBAAkB,S,iDAIF,IAChB/H,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAAC0H,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAMlG,KAAKjC,MAAMikB,mBACjB7b,iBAAkB,IAClBC,QAASpG,KAAK2Q,oBACduB,aAAc,CACV,mBAAoB,cAExBxL,QAAS,0BAAM3D,GAAG,cAAT,gBACTc,OAAQ,CACJ,kBAACtE,GAAA,EAAD,CAAQ6F,IAAI,OAAOhG,MAAM,YAAYI,KAAK,QAAQC,QAASO,KAAK4Q,kBAAhE,QAGA,kBAAClM,EAAA,EAAD,CACIU,IAAI,QACJT,aAAW,QACXvF,MAAM,UACNjD,UAAWiC,EAAQyI,MACnBpH,QAASO,KAAK2Q,qBAEd,uBAAGxU,UAAU,kBAAb,e,sCAQhB,OAAK6D,KAAKjC,MAAM+jB,WAET,kBAAC,GAAD,CACHhC,YAAa9f,KAAKjC,MAAM+hB,YACxBC,mBAAoB/f,KAAK+f,mBACzBC,SAAUhgB,KAAKjC,MAAM4jB,OAAOpC,KAC5BU,QAASjgB,KAAKjC,MAAMgkB,gBANW,O,wCAUpB,IAAD,OACN3jB,EAAY4B,KAAK7B,MAAjBC,QAER,OACI,kBAACqG,GAAA,EAAD,CAASiP,oBAAqB/I,IAAMlN,MAAM,gBACtC,kBAACoH,GAAA,EAAD,CACInF,QAAQ,WACRN,MAAM,UACNjD,UAAWiC,EAAQ0G,IACnBrF,QAAS,WACL,EAAKW,SAAS,CACVwiB,SAAS,MAGjB,uBAAGzmB,UAAU,iBAAiBT,MAAO,CAAC2B,YAAa,SAAnD,cATJ,e,+BAiBR,OACI,6BACK2C,KAAKgjB,aACLhjB,KAAKijB,iBACLjjB,KAAKkjB,gBACLljB,KAAKmjB,2BACLnjB,KAAKqW,uB,GArRD9Z,aA2RN0G,OACXC,YAhTW,SAAAC,GAAK,MAAK,CACrBqI,KAAK,eACErI,EAAMwX,OAAOC,UADhB,CAEAvI,WAAYlP,EAAMC,QAAQ,GAC1ByX,cAAe1X,EAAMC,QAAQ,GAC7BjG,SAAU,MACVE,YAAa,OACbD,WAAY,OACZvB,aAAc,KAElBglB,QAAS,CACL3I,OAAQ,WAEZpT,IAAK,CACD0D,SAAU,QACVkD,OAAQvI,EAAMC,QAAQ,GACtBuI,MAAOxI,EAAMC,QAAQ,OAiSzBtF,YAAQ,SAAAC,GAGJ,MAAO,CACHyjB,OAHezjB,EAAXyjB,SAMR,SAAAvjB,GACI,OAAOC,YAAmBrB,GAAaoB,KAVpCgF,CAYbue,IC/UIzkB,GAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,IACVC,SAAU,IACVrB,UAAW,SACXsB,WAAY,OACZC,YAAa,QAEjBC,OAAQ,CACJvB,QAAS,eACTwB,OAAQ,QACRC,UAAW,cAEfC,MAAO,CACHC,SAAU,IAEdC,IAAK,CACD9B,aAAc,MA2BPiC,eAAQ,SAAAC,GACnB,MAAO,IAEP,SAAAE,GACI,OAAOC,YAAmB,GAAID,IAJvBH,CAvBD,SAACK,GACX,IAAMC,EAAUrB,KADK,EAEGsB,mBAAS,IAFZ,mBAEdC,EAFc,KAERC,EAFQ,KAYrB,OARAC,oBAAU,WACNI,MAAM,qCACDC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAAAG,GACFT,EAAQS,MAEjB,IAGC,6BACI,kBAAC,IAAD,CAAM7C,UAAWiC,EAAQnB,MACrB,kBAACiC,GAAA,EAAD,KACKZ,OC1BfzB,GAAW,eACVC,GAGDsmB,G,YACF,WAAYjlB,GAAQ,IAAD,0BAGP3B,GAFR,4CAAM2B,KAEuBA,MAArB3B,YAHO,OAIf,EAAKA,YAAcA,EAJJ,E,sEAQf,OAAQwD,KAAK7B,MAAMklB,QAAQ5B,aACvB,IAAM,cACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,WACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,aACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,OACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,OACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,SACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,QACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,MACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,QACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,WACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,SACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,aACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,SACF,OAAQ,kBAAC,GAAD,MACZ,QACI,OAAQ,kBAAC,GAAD,W,GArCCllB,aA0CVuB,eAAQ,SAAAC,GAGnB,MAAO,CACHslB,QAHgBtlB,EAAZslB,UAMR,SAAAplB,GACI,OAAOC,YAAmBrB,GAAaoB,IARhCH,CASRslB,IC/CDvmB,GAAW,eACVC,GAsFDwmB,G,YACF,WAAYnlB,GAAQ,IAAD,6BACf,4CAAMA,KAEqDA,MAAnD3B,EAHO,EAGPA,YAAaI,EAHN,EAGMA,cAAeD,EAHrB,EAGqBA,cAHrB,OAIf,EAAKH,YAAcA,EACnB,EAAKI,cAAgBA,EACrB,EAAKD,cAAgBA,EANN,E,wEASRwG,GACP,OACI,uBAAGhH,UAAU,kBACY,QAApBgH,EAAM+H,UAAsB,uBAAyB,yB,qCAKnD1O,EAAamK,EAAM5H,GAAO,IAAD,OACpC,OACI,kBAAC8L,EAAA,EAAD,CACIpL,QAAS,WACL,EAAKjD,YAAYA,IAErBoB,QAAM,GAEN,kBAAC2lB,EAAA,EAAD,KACI,uBAAGpnB,UAAU,kBACRwK,IAGT,kBAACmE,EAAA,EAAD,CAAc5D,QAASnI,O,+BAKzB,IAAD,SACsBiB,KAAK7B,MAAxBC,EADH,EACGA,QAAS+E,EADZ,EACYA,MAEjB,OACI,yBAAKhH,UAAWiC,EAAQoN,MACpB,kBAACgY,EAAA,EAAD,CACIhb,SAAS,WACTrM,UAAWoK,IAAWnI,EAAQqlB,OAAQzjB,KAAK7B,MAAMklB,QAAQK,cAAgBtlB,EAAQulB,cAEjF,kBAACC,EAAA,EAAD,CAASC,gBAAiB7jB,KAAK7B,MAAMklB,QAAQK,cACzC,kBAAChf,EAAA,EAAD,CACItF,MAAM,UACNuF,aAAW,cACXlF,QAAS,kBAAM,EAAK7C,iBACpBT,UAAWoK,IAAWnI,EAAQ0lB,WAAY9jB,KAAK7B,MAAMklB,QAAQK,cAAgBtlB,EAAQ2lB,OAErF,uBAAG5nB,UAAU,kBAAb,SAKJ,kBAACgD,EAAA,EAAD,CAAYhD,UAAWoK,IAAWnI,EAAQsL,MAAOtL,EAAQ4lB,MAAOvkB,QAAS,kBAAM,EAAK9C,iBAAiB+C,QAAQ,KAAKN,MAAM,UAAU6kB,QAAM,GAAxI,qBAGA,kBAACvf,EAAA,EAAD,CAAYjF,QAAS,kBAAM,EAAK9C,kBAExB,uBAAGR,UAAU,iBAAiBT,MAAO,CAAE0D,MAAO,uBAEtCY,KAAK7B,MAAMklB,QAAQa,aACb,oBACA,wBAMtB,kBAACze,EAAA,EAAD,CACItJ,UAAWiC,EAAQoH,OACnB/F,QAAS,WACL0kB,OAAOje,KAAK,wCAAyC,YAGzD,yBACI5J,IAAI,0BACJF,IAAKgoB,SAKrB,kBAACC,EAAA,EAAD,CACI3kB,QAAQ,YACRtB,QAAS,CACLmF,MAAOgD,IAAWnI,EAAQkmB,aAActkB,KAAK7B,MAAMklB,QAAQK,cAAgBtlB,EAAQmmB,mBAEvFre,KAAMlG,KAAK7B,MAAMklB,QAAQK,cAEzB,yBAAKvnB,UAAWiC,EAAQ2V,SACpB,kBAACrP,EAAA,EAAD,CAAYjF,QAAS,kBAAM,EAAK7C,kBAC3BoD,KAAKwkB,WAAWrhB,KAGzB,kBAAC4H,EAAA,EAAD,MACA,kBAAC0Z,EAAA,EAAD,KAEQzkB,KAAK0kB,eAAe,cAAe,OAAQ,QAG3C1kB,KAAK0kB,eAAe,WAAY,WAAY,YAEhD,kBAAC3Z,EAAA,EAAD,MAEI/K,KAAK0kB,eAAe,OAAQ,WAAY,cAGxC1kB,KAAK0kB,eAAe,QAAS,QAAS,SAGtC1kB,KAAK0kB,eAAe,WAAY,qBAAsB,YAE1D,kBAAC3Z,EAAA,EAAD,MAEI/K,KAAK0kB,eAAe,OAAQ,cAAe,QAG3C1kB,KAAK0kB,eAAe,aAAc,UAAW,cAG7C1kB,KAAK0kB,eAAe,SAAU,UAAW,UAGzC1kB,KAAK0kB,eAAe,aAAc,UAAW,cAEjD,kBAAC3Z,EAAA,EAAD,MAEI/K,KAAK0kB,eAAe,SAAU,eAAgB,UAG9C1kB,KAAK0kB,eAAe,QAAS,cAAe,aAKhD,kBAAC3Z,EAAA,EAAD,MAEI/K,KAAK0kB,eAAe,QAAS,kBAAmB,SAGhD1kB,KAAK0kB,eAAe,SAAU,UAAW,YAIrD,0BAAMvoB,UAAWiC,EAAQ4e,SACrB,yBAAK7gB,UAAWiC,EAAQ2V,UACvB/T,KAAK7B,MAAMklB,QAAQa,aAAe,kBAAC,EAAD,MAAqB,KACxD,6BACA,kBAACvZ,EAAA,EAAD,CAAMnG,IAAI,EAAM9I,MAAO,CAAEkP,gBAAiB,MACtC,kBAAC,GAAD,a,GAxJJ+Z,IAAMpoB,WAqKX0G,OACXC,YAvPW,SAAAC,GAAK,MAAK,CACrBqI,KAAM,CACFC,SAAU,EACVmZ,OAAQ,EACRC,SAAU,SACVrc,SAAU,WACVzM,QAAS,QAEbioB,KAAM,CACFvY,SAAU,GAEdgY,OAAQ,CACJmB,OAAQzhB,EAAMyhB,OAAOE,OAAS,EAC9Btc,SAAU,OACVuc,WAAY5hB,EAAM6hB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ/hB,EAAM6hB,YAAYE,OAAOC,MACjCC,SAAUjiB,EAAM6hB,YAAYI,SAASC,iBAG7C1B,YAAa,CACTvmB,WAtBY,IAuBZzB,MAAM,eAAD,OAvBO,IAuBP,OACLopB,WAAY5hB,EAAM6hB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ/hB,EAAM6hB,YAAYE,OAAOC,MACjCC,SAAUjiB,EAAM6hB,YAAYI,SAASE,kBAG7CxB,WAAY,CACR1mB,WAAY,GACZC,YAAa,IAEjB0mB,KAAM,CACFhoB,QAAS,QAEbuoB,YAAa,CACT9b,SAAU,WACV+c,OAAQ,QACRC,WAAY,SACZ7pB,MAxCY,IAyCZopB,WAAY5hB,EAAM6hB,YAAYC,OAAO,QAAS,CAC1CC,OAAQ/hB,EAAM6hB,YAAYE,OAAOC,MACjCC,SAAUjiB,EAAM6hB,YAAYI,SAASE,kBAG7Cf,iBAAiB,aACbkB,UAAW,SACXV,WAAY5hB,EAAM6hB,YAAYC,OAAO,QAAS,CAC1CC,OAAQ/hB,EAAM6hB,YAAYE,OAAOC,MACjCC,SAAUjiB,EAAM6hB,YAAYI,SAASC,gBAEzC1pB,MAAOwH,EAAMC,QAAQ,IACpBD,EAAMuiB,YAAYC,GAAG,MAAQ,CAC1BhqB,MAAOwH,EAAMC,QAAQ,KAG7B2Q,QAAQ,aACJhY,QAAS,OACTuL,WAAY,SACZiE,eAAgB,WAChB/H,QAAS,SACNL,EAAMwX,OAAO5G,SAEpBiJ,QAAS,CACL1R,UAAW,QACXG,SAAU,EACVjL,gBAAiB2C,EAAME,QAAQC,WAAWsiB,QAC1CpiB,QAASL,EAAMC,QAAQ,IAE3BsG,MAAO,CACHwO,OAAQ,WAEZ1S,OAAQ,CACJjI,OAAQ,GACR2a,OAAQ,WAEZ2N,UAAW,CACPlqB,MAAO,GACPoF,OAAQ,MA0KO,CAAEse,WAAW,IAChCvhB,YAAQ,SAAAC,GAGJ,MAAO,CACHslB,QAHgBtlB,EAAZslB,UAMR,SAAAplB,GACI,OAAOC,YAAmBrB,GAAaoB,KAVpCgF,CAYbqgB,I,+BCnRIngB,GAAQ2iB,aAAe,CAC3BziB,QAAS,CACP3G,KAAM,OAONwK,QAAS6e,KACTxjB,UAAW,CACTqJ,KAAM,YAGVoa,WAAY,CACVC,iBAAiB,KAgBNC,G,iLAVX,OACE,kBAAC,IAAD,CAAkB/iB,MAAOA,IACvB,yBAAKhH,UAAU,OACb,kBAAC,GAAD,Y,GALQI,aC5BZ4pB,GAAcC,QACW,cAA7BjC,OAAOkC,SAASC,UAEe,UAA7BnC,OAAOkC,SAASC,UAEhBnC,OAAOkC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBvL,UAAUwL,cACPC,SAASF,GACT5nB,KAAK,SAAA+nB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/oB,QACfmd,UAAUwL,cAAcO,WAK1B9d,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB8d,MAAM,SAAAngB,GACLoC,QAAQpC,MAAM,4CAA6CA,KC/EjE,IAMesc,GAND,CACV5B,YAAa,cACbiC,cAAc,EACdQ,cAAc,GCwBHb,OAzBf,SAAiBtlB,EAAO8F,GACtB,GAAqB,qBAAV9F,EACT,OAAOopB,GAET,OAAQtjB,EAAOnH,MACb,IAAK,cACH,OAAO,eACFqB,EADL,CAEE0jB,YAAa5d,EAAOpH,OAExB,IAAK,gBACH,OAAO,eACFsB,EADL,CAEEmmB,cAAenmB,EAAMmmB,eAEzB,IAAK,gBACH,OAAO,eACFnmB,EADL,CAEE2lB,cAAe3lB,EAAM2lB,eAEzB,QACE,OAAO3lB,ICLEC,OAhBf,SAAcD,EAAO8F,GACjB,GAAqB,qBAAV9F,EACP,OAAOopB,GAEX,OAAQtjB,EAAOnH,MACX,IAAK,cACD,OAAO,eACAqB,EADP,CAEIkB,KAAM4E,EAAO5E,OAErB,QACI,OAAOlB,ICyEJuP,GArBL,CACN,CACInJ,GAAI,EACJijB,IAAK,GACLha,MAAO,OACPC,OAAQ,GAEZ,CACIlJ,GAAI,EACJijB,IAAK,GACLha,MAAO,QACPC,OAAQ,GAEZ,CACIlJ,GAAI,EACJijB,IAAK,GACLha,MAAO,SACPC,OAAQ,ICrEDC,OAXf,SAAavP,EAAO8F,GAChB,MAAqB,qBAAV9F,EACAopB,IAEHtjB,EAAOnH,KAEAqB,ICqCJspB,GA7CC,CACZ,CACIljB,GAAI,EACJkK,SAAU,WACVoE,UAAU,EACVjF,MAAO,CACH,CACIrJ,GAAI,EACJ+K,KAAM,OACNvB,WAAW,EACXwB,MAAO,GACPC,WAAY,GAEhB,CACIjL,GAAI,GACJ+K,KAAM,QACNvB,WAAW,EACXwB,MAAO,gBACPC,WAAY,GAEhB,CACIjL,GAAI,GACJ+K,KAAM,MACNvB,WAAW,EACXwB,MAAO,GACPC,WAAY,KAIxB,CACIjL,GAAI,EACJkK,SAAU,SACVoE,UAAU,EACVjF,MAAO,CACH,CACIrJ,GAAI,GACJ+K,KAAM,aACNvB,WAAW,EACXwB,MAAO,GACPC,WAAY,M,oBC2FbkY,OA/Hf,WAAgE,IAA3CvpB,EAA0C,uDAAlCwpB,KAAWJ,IAAetjB,EAAQ,uCAC3D,OAAQA,EAAOnH,MACX,IAAK,gBACD,OAAOqB,EAEX,IAAK,WAAa,IACNiB,EAAS6E,EAAT7E,KAER,OAAIA,GAAQA,EAAKwoB,eAAe,OAASxoB,EAAKwoB,eAAe,QAClDD,KAAWxpB,EAAMiH,IAAI,SAAC0F,GACzB,OAAIA,EAAKvG,KAAOnF,EAAKmF,GACV,eACAuG,EADP,CAEI8C,MAAM,GAAD,oBACE9C,EAAK8C,OADP,gBAEMxO,EAAKiQ,UAKbvE,KAKZ3M,EAEX,IAAK,WAAa,IACNiB,EAAS6E,EAAT7E,KAER,OAAIA,EACM,GAAN,oBACOjB,GADP,gBAGWiB,KAKRjB,EAEX,IAAK,cAAgB,IACTiB,EAAS6E,EAAT7E,KAER,OAAIA,GAAQA,EAAKwoB,eAAe,MACrBD,KAAWxpB,EAAM0P,OAAO,SAAC/C,GAC5B,OAAIA,EAAKvG,KAAOnF,EAAKmF,MAOtBpG,EAEX,IAAK,YAAc,IACPiB,EAAS6E,EAAT7E,KAER,OAAIA,GAAQA,EAAKwoB,eAAe,MACrBD,KAAWxpB,EAAMiH,IAAI,SAAC0F,GACzB,OAAIA,EAAKvG,KAAOnF,EAAKmF,GACV,eACAuG,EADP,GAEO1L,GAGJ,eAAI0L,MAIZ3M,EAEX,IAAK,cAAgB,IACTiB,EAAS6E,EAAT7E,KAER,OAAIA,GAAQA,EAAKwoB,eAAe,OAASxoB,EAAKwoB,eAAe,QAClDD,KAAWxpB,EAAMiH,IAAI,SAAC0F,GACzB,OAAIA,EAAKvG,KAAOnF,EAAKmF,GACV,eACAuG,EADP,CAEI8C,MAAO9C,EAAK8C,MAAMC,OAAO,SAACS,GACtB,OAAIA,EAAK/J,KAAOnF,EAAKiQ,KAAK9K,OAO3BuG,KAKZ3M,EAEX,IAAK,YAAc,IACPiB,EAAS6E,EAAT7E,KAER,OAAIA,GAAQA,EAAKwoB,eAAe,OAASxoB,EAAKwoB,eAAe,QAClDD,KAAWxpB,EAAMiH,IAAI,SAACiM,GACzB,OAAIA,EAAK9M,KAAOnF,EAAKmF,GACV,eACA8M,EADP,CAEIzD,MAAOyD,EAAKzD,MAAMxI,IAAI,SAAC0I,GACnB,OAAIA,EAAKvJ,KAAOnF,EAAKiQ,KAAK9K,GACf,eACAuJ,EADP,GAEO1O,EAAKiQ,MAGLvB,MAKZuD,KAKZlT,EAEX,QACI,OAAOA,ICnGJ4Y,GA3BA,CACX,CACIxS,GAAI,EACJuF,MAAO,gBACP+M,MAAO,EACPhC,KAAM,IAAIA,KACVrH,MAAO,UACPsJ,KAAM,GAEV,CACIvS,GAAI,EACJuF,MAAO,wBACP+M,MAAO,GACPhC,KAAM,IAAIA,KACVrH,MAAO,UACPsJ,KAAM,IAEV,CACIvS,GAAI,EACJuF,MAAO,UACP+M,MAAO,EACPhC,KAAM,IAAIA,KACVrH,MAAO,UACPsJ,KAAM,MCsEC+Q,OA1Ff,WAAoE,IAA3C1pB,EAA0C,uDAAlCwpB,KAAWJ,IAAetjB,EAAQ,uCAC/D,OAAQA,EAAOnH,MACX,IAAK,gBACD,OAAOqB,EACX,IAAK,cAAgB,IACTiB,EAAS6E,EAAT7E,KAER,OAAIA,EACM,GAAN,oBACOjB,GADP,gBAGWiB,KAKRjB,EAEX,IAAK,eAAiB,IACViB,EAAS6E,EAAT7E,KAER,OAAIA,GAAQA,EAAKwoB,eAAe,MACrBD,KAAWxpB,EAAMiH,IAAI,SAAC0F,GACzB,OAAIA,EAAKvG,KAAOnF,EAAKmF,GACV,eACAuG,EADP,GAEO1L,GAGJ,eACA0L,MAKR3M,EAEX,IAAK,iBAAmB,IACZiB,EAAS6E,EAAT7E,KAER,OAAIA,GAAQA,EAAKwoB,eAAe,MACrBD,KAAWxpB,EAAM0P,OAAO,SAAC/C,GAC5B,OAAIA,EAAKvG,KAAOnF,EAAKmF,MAOtBpG,EAEX,IAAK,WAAa,IACNiB,EAAS6E,EAAT7E,KAER,OAAa,IAATA,GAAe0oB,MAAM1oB,GAYlBjB,EAXIwpB,KAAWxpB,EAAMiH,IAAI,SAAC0F,GACzB,OAAIA,EAAKvG,KAAOnF,EACL,eACA0L,EADP,CAEI+L,MAAO/L,EAAK+L,MAAQ,IAGrB,eAAK/L,MAMxB,IAAK,WAAa,IACN1L,EAAS6E,EAAT7E,KAER,OAAa,IAATA,GAAe0oB,MAAM1oB,GAYlBjB,EAXIwpB,KAAWxpB,EAAMiH,IAAI,SAAC0F,GACzB,OAAIA,EAAKvG,KAAOnF,EACL,eACA0L,EADP,CAEI+L,MAAO/L,EAAK+L,MAAQ,IAGrB,eAAK/L,MAMxB,QACI,OAAO3M,ICjEJoR,GAxBH,CACR,CACIhL,GAAI,EACJuF,MAAO,aACPW,QAAS,IACT+C,MAAO,UACPqH,KAAM,IAAIA,MAEd,CACItQ,GAAI,EACJuF,MAAO,QACPW,QAAS,IACT+C,MAAO,UACPqH,KAAM,IAAIA,MAEd,CACItQ,GAAI,EACJuF,MAAO,cACPW,QAAS,IACT+C,MAAO,UACPqH,KAAM,IAAIA,OC2CHgT,OA5Df,WAAoE,IAA3C1pB,EAA0C,uDAAlCwpB,KAAWJ,IAAetjB,EAAQ,uCAC/D,OAAQA,EAAOnH,MACX,IAAK,gBACD,OAAOqB,EAEX,IAAK,WAAa,IACNiB,EAAS6E,EAAT7E,KAER,OAAIA,EACM,GAAN,oBACOjB,GADP,gBAGWiB,KAKRjB,EAGX,IAAK,YAAc,IACPiB,EAAS6E,EAAT7E,KAER,OAAIA,GAAQA,EAAKwoB,eAAe,MACrBD,KAAWxpB,EAAMiH,IAAI,SAAC0F,GACzB,OAAIA,EAAKvG,KAAOnF,EAAKmF,GACV,eACAuG,EADP,GAEO1L,GAGJ,eACA0L,MAKR3M,EAGX,IAAK,cAAgB,IACTiB,EAAS6E,EAAT7E,KAER,OAAIA,GAAQA,EAAKwoB,eAAe,MACrBD,KAAWxpB,EAAM0P,OAAO,SAAC/C,GAC5B,OAAIA,EAAKvG,KAAOnF,EAAKmF,MAOtBpG,EAGX,QACI,OAAOA,IC4BJ4pB,GAvFO,CAClB,CACIxjB,GAAI,EACJob,KAAM,iBACNE,iBAAkB,wDAClBrS,MAAO,OACPuT,KAAM,GACNC,UAAW,CACP,CACIzc,GAAI,EACJ+K,KAAM,SACN2R,QAAS,CACL,CACI3R,KAAM,WACN4R,SAAS,GAEb,CACI5R,KAAM,SACN4R,SAAS,GAEb,CACI5R,KAAM,UACN4R,SAAS,GAEb,CACI5R,KAAM,SACN4R,SAAS,KAIrB,CACI3c,GAAI,EACJ+K,KAAM,gBACN2R,QAAS,CACL,CACI3R,KAAM,iBACN4R,SAAS,GAEb,CACI5R,KAAM,SACN4R,SAAS,GAEb,CACI5R,KAAM,SACN4R,SAAS,GAEb,CACI5R,KAAM,kBACN4R,SAAS,OAM7B,CACI3c,GAAI,EACJob,KAAM,yBACNE,iBAAkB,qDAClBrS,MAAO,OACPuT,KAAM,GACNC,UAAW,CACP,CACIzc,GAAI,EACJ+K,KAAM,+CACN2R,QAAS,CACL,CACI3R,KAAM,iBACN4R,SAAS,GAEb,CACI5R,KAAM,QACN4R,SAAS,GAEb,CACI5R,KAAM,uCACN4R,SAAS,GAEb,CACI5R,KAAM,wBACN4R,SAAS,QCpClBU,OAxCf,SAAgBzjB,EAAO8F,GACrB,GAAqB,qBAAV9F,EACT,OAAOopB,GAET,OAAQtjB,EAAOnH,MACb,IAAK,MACH,MAAO,GACT,IAAK,cAAgB,IACXsC,EAAS6E,EAAT7E,KAER,OAAIA,GAAQA,EAAKwoB,eAAe,MACvBD,KAAWxpB,EAAM0P,OAAO,SAAC/C,GAC9B,OAAIA,EAAKvG,KAAOnF,EAAKmF,MAOlBpG,EAET,IAAK,WAAa,IACRiB,EAAS6E,EAAT7E,KAER,OAAIA,EACM,GAAN,oBACOjB,GADP,gBAGWiB,KAKRjB,EAET,QACE,OAAOA,IC9BE6pB,eAAgB,CAC3BvE,WACArlB,QACAsP,OACAY,QACAyI,YACAxH,SACAqS,YCLEqG,GAAQC,YAAYC,IAI1BC,IAASC,OACL,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,GAAD,OAEJK,SAASC,eAAe,SfCb,WACb,GAA6C,kBAAmBjN,UAAW,CAGzE,GADkB,IAAIkN,IAAIC,cAAwBlE,OAAOkC,UAC3CiC,SAAWnE,OAAOkC,SAASiC,OAIvC,OAGFnE,OAAOoE,iBAAiB,OAAQ,WAC9B,IAAM9B,EAAK,UAAM4B,cAAN,sBAEPlC,KAiDV,SAAiCM,GAE/B7nB,MAAM6nB,GACH5nB,KAAK,SAAAC,GAGkB,MAApBA,EAAS0pB,SACuD,IAAhE1pB,EAAS2pB,QAAQC,IAAI,gBAAgBhP,QAAQ,cAG7CwB,UAAUwL,cAAciC,MAAM9pB,KAAK,SAAA+nB,GACjCA,EAAagC,aAAa/pB,KAAK,WAC7BslB,OAAOkC,SAASwC,aAKpBrC,GAAgBC,KAGnBS,MAAM,WACL/d,QAAQC,IACN,mEArEA0f,CAAwBrC,GAIxBvL,UAAUwL,cAAciC,MAAM9pB,KAAK,WACjCsK,QAAQC,IACN,+GAMJod,GAAgBC,Me1BxBsC,K","file":"static/js/main.878b1037.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.9577f6bf.jpg\";","import React, { Component } from 'react';\r\nimport logo from '../logo.svg';\r\n\r\nimport Paper from 'material-ui/Paper';\r\n\r\nclass ExtendedHeader extends Component {\r\n    render() {\r\n        const style = {\r\n            width: \"90%\",\r\n            marginTop: -25,\r\n            marginBottom: 40,\r\n            textAlign: 'center',\r\n            display: 'inline-block',\r\n          };\r\n        return (\r\n            <Paper style={style} zDepth={3} rounded={false} transitionEnabled={true}>\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <h1 className=\"App-title\">Project // NEON /</h1>\r\n                    <p>Version 0.8.3 // BY: Mihajlo Marjanović</p>\r\n                    <p>Built with React.js & Redux.js & Material UI</p>\r\n                </header>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExtendedHeader;","export function page_change(page) {\r\n    return {\r\n        type: \"PAGE_CHANGE\",\r\n        page\r\n    }\r\n}\r\n\r\nexport function toggle_header() {\r\n    return {\r\n        type: \"TOGGLE_HEADER\",\r\n    }\r\n}\r\n\r\nexport function toggle_drawer() {\r\n    return {\r\n        type: \"TOGGLE_DRAWER\",\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\nimport moment from 'moment'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as GeneralActions from \"../../Actions/GeneralActions\";\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 275,\r\n        maxWidth: 400,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: 10,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        textAlign: 'left'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        margin: 10,\r\n    },\r\n    actions: {\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nconst WelcomePage = (props) => {\r\n    const { page_change, toggle_header, toggle_drawer } = props;\r\n\r\n    const classes = useStyles();\r\n    const [fact, setFact] = useState('');\r\n\r\n    useEffect(() => {\r\n        let url = `http://numbersapi.com/${moment().format('M/D')}/date`;\r\n        fetch(url)\r\n            .then((response) => response.text())\r\n            .then(data => {\r\n                setFact(data)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>WELCOME, {props.User.name} !</h1>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                        On this day\r\n                    </Typography>\r\n                    {fact}\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\" onClick={() => { page_change('Facts') }}>See more fun facts</Button>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <h3>Feel free to explore NEON</h3>\r\n                </CardContent>\r\n                <CardActions className={classes.actions}>\r\n                    <Button variant=\"contained\" size=\"small\" className={classes.button}\r\n                        onClick={() => { toggle_drawer() }}\r\n                    >\r\n                        <i className=\"material-icons\">\r\n                            menu_open\r\n                        </i>\r\n                        Open Menu\r\n                     </Button>\r\n                    <Button variant=\"contained\" size=\"small\" className={classes.button}\r\n                        onClick={() => { toggle_header() }}\r\n                    >\r\n                        <i className=\"material-icons\">\r\n                            info\r\n                        </i>\r\n                        See Details\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(state => {\r\n    const { User } = state;\r\n\r\n    return {\r\n        User,\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(WelcomePage);","import React, { Component } from 'react';\r\n\r\nimport Paper from 'material-ui/Paper';\r\nimport TextField from 'material-ui/TextField';\r\nimport FlatButton from 'material-ui/FlatButton';\r\n//import RaisedButton from 'material-ui/RaisedButton';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableRowColumn,\r\n} from 'material-ui/Table';\r\n\r\nimport {\r\n    cyan500,\r\n    grey800,\r\n    grey400\r\n} from 'material-ui/styles/colors';\r\n\r\n\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fN: \"\",\r\n            operation: \"\",\r\n            sN: \"\",\r\n            first: true,\r\n        }\r\n    }\r\n\r\n    result() {\r\n        if (!this.state.first && this.state.sN) {\r\n            let fNum = parseInt(this.state.fN, 10);\r\n            let sNum = parseInt(this.state.sN, 10);\r\n            switch (this.state.operation) {\r\n                case \"+\":\r\n                    this.setState({\r\n                        fN: fNum + sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"-\":\r\n                    this.setState({\r\n                        fN: fNum - sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"×\":\r\n                    this.setState({\r\n                        fN: fNum * sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"÷\":\r\n                    this.setState({\r\n                        fN: fNum / sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                default:\r\n                    return\r\n            }\r\n        }\r\n    }\r\n\r\n    addNum(num) {\r\n        if (this.state.first) {\r\n            this.setState({\r\n                fN: this.state.fN + num\r\n            })\r\n        } else {\r\n            this.setState({\r\n                sN: this.state.sN + num\r\n            })\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.setState({\r\n            fN: \"\",\r\n            operation: \"\",\r\n            sN: \"\",\r\n            first: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            paperStyle: {\r\n                width: \"380px\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                marginTop: \"10%\"\r\n            },\r\n            operationsDiv: {\r\n                width: \"100%\",\r\n                backgroundColor: cyan500,\r\n                color: \"white\"\r\n            },\r\n            operationsButtons: {\r\n                fontSize: \"30px\",\r\n                color: \"white\"\r\n            },\r\n            numbersDiv: {\r\n                backgroundColor: grey800,\r\n                color: grey400\r\n            },\r\n            flatButton: {\r\n                height: \"60px\",\r\n                width: \"50px\",\r\n                borderRadius: \"100%\"\r\n            },\r\n            actionButton: {\r\n                marginLeft: 17,\r\n                color: \"black\",\r\n                fontSize: \"20px\",\r\n            },\r\n            inputStyle: {\r\n                fontSize: \"32px\",\r\n                textAlign: \"right\",\r\n                width: \"70%\",\r\n                display: \"inline-block\",\r\n            },\r\n            iconButtons: {\r\n                display: \"inline-block\",\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Paper style={style.paperStyle} zDepth={5} rounded={false} transitionEnabled={true}>\r\n                    <TextField\r\n                        hintText=\"insert number...\"\r\n                        value={this.state.first ? this.state.fN : this.state.sN}\r\n                        type=\"number\"\r\n                        style={style.inputStyle}\r\n                        floatingLabelShrinkStyle={{ fontSize: \"20px\", textAlign: \"right\" }}\r\n                        floatingLabelText={this.state.fN + \" \" + this.state.operation + \" \" + this.state.sN}\r\n                        onInput={\r\n                            (event) => {\r\n                                this.state.first ?\r\n                                    this.setState({\r\n                                        fN: event.target.value\r\n                                    })\r\n                                    :\r\n                                    this.setState({\r\n                                        sN: event.target.value\r\n                                    })\r\n                            }\r\n                        }\r\n                    />\r\n                    <IconButton style={style.iconButtons} name={\"del\"} label=\"del\" onClick={\r\n                        (event) => {\r\n                            let fNum = \"\" + this.state.fN;\r\n                            let sNum = \"\" + this.state.sN;\r\n                            if (this.state.first) {\r\n                                if (fNum !== \"\") {\r\n                                    this.setState({\r\n                                        fN: fNum.substring(0, fNum.length - 1)\r\n                                    })\r\n                                }\r\n                            } else {\r\n                                if (sNum !== \"\") {\r\n                                    this.setState({\r\n                                        sN: sNum.substring(0, sNum.length - 1)\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                    }>\r\n                        <i className=\"material-icons\">\r\n                            backspace\r\n                        </i>\r\n                    </IconButton>\r\n                    <IconButton style={style.iconButtons} onClick={()=> {this.clearAll()}}>\r\n                        <i className=\"material-icons\">\r\n                            clear\r\n                        </i>\r\n                    </IconButton>\r\n                    <br />\r\n                    <Paper zDepth={4} style={style.operationsDiv}>\r\n                        <FlatButton style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }} name={\"+\"} rippleColor=\"black\" labelStyle={style.operationsButtons} label=\"+\" onClick={\r\n                            (event) => {\r\n                                this.setState({\r\n                                    operation: \"+\",\r\n                                    first: false,\r\n                                })\r\n                            }\r\n                        } />\r\n                        <FlatButton style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }} name={\"-\"} rippleColor=\"black\" label=\"-\" labelStyle={style.operationsButtons} onClick={\r\n                            (event) => {\r\n                                this.setState({\r\n                                    operation: \"-\",\r\n                                    first: false,\r\n                                })\r\n                            }\r\n                        } />\r\n                        <FlatButton style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }} name={\"×\"} rippleColor=\"black\" label=\"×\" labelStyle={style.operationsButtons} onClick={\r\n                            (event) => {\r\n                                this.setState({\r\n                                    operation: \"×\",\r\n                                    first: false,\r\n                                })\r\n                            }\r\n                        } />\r\n                        <FlatButton style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }} name={\"÷\"} rippleColor=\"black\" label=\"÷\" labelStyle={style.operationsButtons} onClick={\r\n                            (event) => {\r\n                                this.setState({\r\n                                    operation: \"÷\",\r\n                                    first: false,\r\n                                })\r\n                            }\r\n                        } />\r\n                    </Paper>\r\n                    <Table style={style.numbersDiv} selectable={false}>\r\n                        <TableBody displayRowCheckbox={false}>\r\n                            <TableRow displayBorder={false}>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"7\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(7)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"8\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(8)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"9\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(9)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                            </TableRow>\r\n                            <TableRow displayBorder={false}>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"4\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(4)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"5\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(5)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"6\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(6)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                            </TableRow>\r\n                            <TableRow displayBorder={false}>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"1\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(1)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"2\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(2)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"3\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(3)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                            </TableRow>\r\n                            <TableRow displayBorder={false}>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\".\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(\".\")\r\n                                    }} disabled={true} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"0\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(0)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FloatingActionButton style={style.actionButton} secondary={true} zDepth={4} onClick={() => {\r\n                                        this.result()\r\n                                    }}>\r\n                                        =\r\n                                    </FloatingActionButton>\r\n                                </TableRowColumn>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;","export function name_change(name) {\r\n    return { \r\n        type: \"NAME_CHANGE\",\r\n        name\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport * as UserActions from \"../.././Actions/UserActions\";\r\n\r\nconst MainActions = {\r\n    ...UserActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    UserPaper: {\r\n        margin: theme.spacing(2),\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        padding: 20\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    }\r\n});\r\n\r\nclass UserPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { name_change } = this.props\r\n        this.name_change = name_change\r\n\r\n        this.state = {\r\n            userName: \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Paper elevation={10} className={classes.UserPaper}>\r\n                <TextField\r\n                    id=\"userName-changer\"\r\n                    variant=\"outlined\"\r\n                    label=\"Your name\"\r\n                    value={this.props.User.name}\r\n                    onChange={(event) => {\r\n                        this.name_change(event.target.value)\r\n                    }}\r\n                />\r\n                <br/>\r\n                <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\r\n                    Delete your stats\r\n                    <i className=\"material-icons\" style={{marginLeft: \"7px\"}}>\r\n                        delete_forever\r\n                    </i>\r\n                </Button>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { User } = state;\r\n\r\n        return {\r\n            User,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(UserPage);","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport moment from 'moment';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    chip: {\r\n        display: \"block\",\r\n        marginTop: theme.spacing(1),\r\n    }\r\n});\r\n\r\nclass Stopwatch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateDisplay = this.updateDisplay.bind(this);\r\n\r\n        this.state = {\r\n            display: \"00:00:00\",\r\n            flags: [],\r\n            action: \"pause\",\r\n            time: null\r\n        }\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.initial();\r\n    }\r\n\r\n    renderDisplay() {\r\n        return (\r\n            <h1>\r\n                {this.state.display}\r\n            </h1>\r\n        )\r\n    }\r\n\r\n    updateDisplay() {\r\n        this.setState({\r\n            time: moment(this.state.time.add(1, \"second\"))\r\n        }, () => {\r\n            this.setState({\r\n                display: moment(this.state.time).format(\"HH:mm:ss\")\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    initial() {\r\n        this.setState({\r\n            display: \"00:00:00\",\r\n            flags: [],\r\n            action: \"pause\",\r\n            time: null\r\n        });\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    setFlag() {\r\n        this.setState({\r\n            flags: [\r\n                ...this.state.flags,\r\n                {\r\n                    ID: Math.floor(Math.random() * 1000),\r\n                    time: this.state.display\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    renderControls() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fade in={true}>\r\n                <div>\r\n                    <Tooltip title={this.state.action === \"start\" ? \"Put a flag\" : \"Reset\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                            onClick={() => {\r\n                                this.state.action === \"start\"\r\n                                    ? this.setFlag()\r\n                                    : this.initial()\r\n                            }}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                {this.state.action === \"start\" ? \"outlined_flag\" : \"restore\"}\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        color=\"primary\"\r\n                        className={classes.fab}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n                                time: this.state.display === \"00:00:00\"\r\n                                    ? moment(\"00:00:00\", \"HH:mm:ss\")\r\n                                    : this.state.time\r\n                            }, () => {\r\n                                if (this.state.action === \"start\") {\r\n                                    this.timer = setInterval(this.updateDisplay, 1000);\r\n                                } else {\r\n                                    clearInterval(this.timer);\r\n                                }\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                            {this.state.action === \"start\" ? \"pause\" : \"play_arrow\"}\r\n                        </i>\r\n                        {this.state.action === \"start\" ? \"Pause\" : \"Start\"}\r\n                    </Fab>\r\n\r\n                    <Tooltip title={\"Pin to Home\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                add_location\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n    renderFlags() {\r\n        const { flags } = this.state;\r\n        if (!flags || !flags.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    flags.map((flag, index) => {\r\n                        return (\r\n                            <div\r\n                                className={classes.chip}\r\n                                key={flag.ID}\r\n                            >\r\n                                <Badge\r\n                                    badgeContent={index + 1}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    <Chip\r\n                                        avatar={\r\n                                            <Avatar>\r\n                                                <i className=\"material-icons\">\r\n                                                    flag\r\n                                                </i>\r\n                                            </Avatar>\r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        label={flag.time}\r\n\r\n                                    />\r\n                                </Badge>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderDisplay()}\r\n                {this.renderControls()}\r\n                {this.renderFlags()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Stopwatch);","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nclass Success extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.props.open}\r\n                autoHideDuration={this.props.autoHideDuration ? this.props.autoHideDuration : 3000}\r\n                onClose={this.props.handleClose}\r\n            >\r\n                <SnackbarContent\r\n                    className={classNames(classes.success)}\r\n                    aria-describedby=\"client-snackbar\"\r\n                    message={\r\n                        <span id=\"client-snackbar\" className={classes.message}>\r\n                            <i className={classNames(classes.icon, classes.iconVariant, \"material-icons\")}>\r\n                                check_circle_outline\r\n                            </i>\r\n                            {this.props.text.length ? this.props.text : \"Copied to clipboard!\"}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.props.handleClose}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                close\r\n                            </i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Success);","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport Success from '../../../Components/SnackBars/SnackSuccess';\r\n\r\nimport moment from 'moment';\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    chip: {\r\n        display: \"block\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    InputFields: {\r\n        margin: 7,\r\n    }\r\n});\r\n\r\nclass Countdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateDisplay = this.updateDisplay.bind(this);\r\n        this.handleSBClose = this.handleSBClose.bind(this);\r\n\r\n        this.state = {\r\n            display: \"00:00:00\",\r\n            action: \"pause\",\r\n            time: {\r\n                h: 0,\r\n                m: 0,\r\n                s: 20\r\n            },\r\n            snackBarSuccess: false\r\n        }\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.initial();\r\n    }\r\n\r\n    handleInputChange(label, value) {\r\n        this.setState({\r\n            time: {\r\n                ...this.state.time,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    makeOptionsArr(label) {\r\n        if (label === \"h\") {\r\n            let arr = [];\r\n            for (let i = 0; i < 24; i++) {\r\n                let obj = {\r\n                    value: i,\r\n                    label: i,\r\n                }\r\n                arr.push(obj);\r\n            }\r\n\r\n            return arr;\r\n        }\r\n\r\n        let arr = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            let obj = {\r\n                value: i,\r\n                label: i,\r\n            }\r\n            arr.push(obj);\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    renderDisplay() {\r\n        const { classes } = this.props;\r\n        if (this.state.display === \"00:00:00\") {\r\n            return (\r\n                <div className={classes.InputFields}>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Hours\"\r\n                        value={this.state.time.h}\r\n                        onChange={(e) => this.handleInputChange('h', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">H</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"h\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Minutes\"\r\n                        value={this.state.time.m}\r\n                        onChange={(e) => this.handleInputChange('m', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">M</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"m\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Seconds\"\r\n                        value={this.state.time.s}\r\n                        onChange={(e) => this.handleInputChange('s', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">S</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"s\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <h1>\r\n                {moment(this.state.display).format(\"HH:mm:ss\")}\r\n            </h1>\r\n        )\r\n    }\r\n\r\n    updateDisplay() {\r\n        if (this.state.display.format(\"HH:mm:ss\") === \"00:00:00\") {\r\n            clearInterval(this.timer)\r\n            this.initial();\r\n            this.setState({\r\n                snackBarSuccess: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                display: this.state.display.subtract(1, \"second\")\r\n            })\r\n        }\r\n    }\r\n\r\n    initial() {\r\n        this.setState({\r\n            display: \"00:00:00\",\r\n            action: \"pause\",\r\n            time: {\r\n                h: 0,\r\n                m: 0,\r\n                s: 20\r\n            }\r\n        });\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    handleStartPause() {\r\n        if (this.state.display === \"00:00:00\") {\r\n            const { time } = this.state;\r\n            this.setState({\r\n                display: moment(`${time.h}:${time.m}:${time.s}`, \"HH:mm:ss\"),\r\n            });\r\n            this.timer = setInterval(this.updateDisplay, 1000);\r\n            return;\r\n        }\r\n\r\n        if (this.state.action === \"pause\") {\r\n            clearInterval(this.timer);\r\n            return;\r\n        } else {\r\n            this.timer = setInterval(this.updateDisplay, 1000);\r\n            return;\r\n        }\r\n\r\n        /* this.setState({\r\n            action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n            time: this.state.display === \"00:00:00\"\r\n                ? moment(\"00:00:00\", \"HH:mm:ss\")\r\n                : this.state.time\r\n        }, () => {\r\n            if (this.state.action === \"start\") {\r\n                this.timer = setInterval(this.updateDisplay, 1000);\r\n            } else {\r\n                clearInterval(this.timer);\r\n            }\r\n        }) */\r\n    }\r\n\r\n    renderControls() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fade in={true}>\r\n                <div>\r\n                    <Tooltip title={\"Reset\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                            onClick={() => {\r\n                                this.initial()\r\n                            }}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                {\"restore\"}\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        color=\"primary\"\r\n                        className={classes.fab}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n                            }, () => {\r\n                                this.handleStartPause()\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                            {this.state.action === \"start\" ? \"pause\" : \"play_arrow\"}\r\n                        </i>\r\n                        {this.state.action === \"start\" ? \"Pause\" : \"Start\"}\r\n                    </Fab>\r\n\r\n                    <Tooltip title={\"Pin to Home\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                add_location\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n    renderFlags() {\r\n        const { flags } = this.state;\r\n        if (!flags || !flags.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    flags.map((flag, index) => {\r\n                        return (\r\n                            <div\r\n                                className={classes.chip}\r\n                                key={flag.ID}\r\n                            >\r\n                                <Badge\r\n                                    badgeContent={index + 1}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    <Chip\r\n                                        avatar={\r\n                                            <Avatar>\r\n                                                <i className=\"material-icons\">\r\n                                                    flag\r\n                                                </i>\r\n                                            </Avatar>\r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        label={flag.time}\r\n                                    />\r\n                                </Badge>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSBClose() {\r\n        this.setState({\r\n            snackBarSuccess: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderDisplay()}\r\n                {this.renderControls()}\r\n                {this.renderFlags()}\r\n                <Success\r\n                    open={this.state.snackBarSuccess}\r\n                    handleClose={this.handleSBClose}\r\n                    text={\"Countdown finished!\"}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Countdown);","import React, { Component, Fragment } from 'react';\r\n\r\nimport DatePicker from 'material-ui/DatePicker';\r\nimport _ from \"lodash\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Stopwatch from \"./Components/StopWatch.js\";\r\nimport Countdown from \"./Components/Countdown.js\";\r\n\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport * as moment from 'moment';\r\n\r\nimport {\r\n    cyan500,\r\n    pinkA200,\r\n} from 'material-ui/styles/colors';\r\n\r\nconst styles = theme => ({\r\n    Menu: {\r\n        width: '100%',\r\n        maxWidth: 240,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginRight: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    Content: {\r\n        width: '100%',\r\n        maxWidth: 300,\r\n        backgroundColor: theme.palette.background.paper,\r\n        minHeight: 100,\r\n        height: \"auto\",\r\n        padding: 75,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n    fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        marginRight: \"10px\"\r\n    },\r\n\r\n    Avatar: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        marginRight: 10,\r\n    }\r\n});\r\n\r\nclass Time extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            compare: {\r\n                date1: moment().unix() * 1000,\r\n                date2: moment().unix() * 1000,\r\n            },\r\n            Menu: [\r\n                {\r\n                    ID: 1,\r\n                    Title: \"Compare time\",\r\n                    Icon: \"compare_arrows\"\r\n                },\r\n                {\r\n                    ID: 2,\r\n                    Title: \"Stopwatch\",\r\n                    Icon: \"timer\"\r\n                },\r\n                {\r\n                    ID: 3,\r\n                    Title: \"Countdown\",\r\n                    Icon: \"timelapse\"\r\n                },\r\n            ],\r\n            Current: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.inter = setInterval(this.updateNowInState, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.inter)\r\n    }\r\n\r\n\r\n    updateNowInState = () => {\r\n        this.setState({\r\n            now: moment()\r\n        })\r\n    }\r\n\r\n\r\n    handleDateChange = (date, key) => {\r\n        console.log(date.unix() * 1000, key)\r\n        this.setState({\r\n            compare: {\r\n                ...this.state.compare,\r\n                [key]: date.unix() * 1000\r\n            }\r\n        })\r\n    }\r\n\r\n    compareTime() {\r\n        const { date1, date2 } = this.state.compare;\r\n        console.log(date1, date2)\r\n        return (\r\n            <Fragment>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"First date\"\r\n                        value={date1}\r\n                        onChange={(date) => this.handleDateChange(date, 'date1')}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                        style={{ display: 'block'}}\r\n                    />\r\n                    <br />\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Second date\"\r\n                        value={date2}\r\n                        onChange={(date) => this.handleDateChange(date, 'date2')}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <br />\r\n                <Paper elevation={1}>\r\n                    <p>{moment(date1).from(moment(date2))}</p>\r\n                </Paper>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n\r\n    renderContentInner() {\r\n        clearInterval(this.inter);\r\n\r\n        switch (this.state.Current) {\r\n            case 1: return this.compareTime();\r\n            case 2: return <Stopwatch />;\r\n            case 3: return <Countdown />;\r\n            default: return <Stopwatch />;\r\n        }\r\n    }\r\n\r\n    renderContent() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper className={classes.Content} elevation={10}>\r\n                {this.renderContentInner()}\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n    renderMenu() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper elevation={3} className={classes.Menu}>\r\n                <List component=\"nav\" dense>\r\n                    {\r\n                        this.state.Menu.map((item, index) => {\r\n                            return (\r\n                                <Zoom in={true}\r\n                                    key={item.ID}\r\n                                    style={{ transitionDelay: index * 100 }}\r\n                                >\r\n                                    <div>\r\n                                        <ListItem\r\n                                            dense\r\n                                            button\r\n                                            onClick={() => {\r\n                                                this.setState({\r\n                                                    Current: item.ID\r\n                                                })\r\n                                            }}\r\n                                        >\r\n                                            <Avatar className={classes.Avatar}>\r\n                                                <i className=\"material-icons\">\r\n                                                    {item.Icon}\r\n                                                </i>\r\n                                            </Avatar>\r\n                                            <ListItemText primary={item.Title} />\r\n                                        </ListItem>\r\n                                        {\r\n                                            !(this.state.Menu.length - 1 === index)\r\n                                                ? <Divider variant=\"inset\" />\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </Zoom>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={10}\r\n                    className={\"\"}\r\n                    alignItems={\"center\"}\r\n                    direction={\"row\"}\r\n                    justify={\"center\"}\r\n                    style={{ marginTop: 50 }}\r\n                >\r\n                    {this.renderMenu()}\r\n                    <Fade in={true} style={{ transitionDelay: 100 }}>\r\n                        {this.renderContent()}\r\n                    </Fade>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Time);","import React, { Component, Fragment } from 'react';\r\n\r\n//import Paper from '@material-ui/core/Paper';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n\r\n//import Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nclass Arrays extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: null,\r\n            divisedBy: 1,\r\n        };\r\n    }\r\n\r\n    handleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    };\r\n\r\n    returnEven() {\r\n        let arr = []\r\n        for (let i = 1; i < 100; i++) {\r\n            if (i % 2 === 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnOdd() {\r\n        let arr = []\r\n        for (let i = 1; i < 100; i++) {\r\n            if (i % 2 !== 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnFibonacci() {\r\n        let arr = [0, 1]\r\n        for (let i = 0; i <= 20; i++) {\r\n            arr.push(arr[i] + arr[i + 1])\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    isPrime(n) {\r\n        if (n === 2)\r\n            return true;\r\n        if (n === 3)\r\n            return true;\r\n        if (n % 2 === 0)\r\n            return false;\r\n        if (n % 3 === 0)\r\n            return false;\r\n\r\n        let i = 5;\r\n        let w = 2;\r\n\r\n        while (i * i <= n) {\r\n            if (n % i === 0) {\r\n                return false;\r\n            }\r\n            i += w;\r\n            w = 6 - w;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    returnPrime() {\r\n        let arr = []\r\n        for (let i = 2; i < 100; i++) {\r\n            if (this.isPrime(i)) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnDivisible() {\r\n        let arr = []\r\n        for (let i = 1; i <= 100; i++) {\r\n            if (i % this.state.divisedBy === 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    renderNumbers(arr, newRow = 10) {\r\n\r\n        if (!arr || !arr.length) return null;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    arr.map((num, index) => {\r\n                        if (index % newRow === 0 && index !== 0) {\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <span>{num + \", \"}</span>\r\n                                    <br />\r\n                                </Fragment>\r\n                            )\r\n                        } else {\r\n                            return num + \",\";\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { expanded } = this.state;\r\n\r\n        const style = {\r\n            panel: {\r\n                width: \"50%\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n            },\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <ExpansionPanel expanded={expanded === 'panel1'} style={style.panel} onChange={this.handleChange('panel1')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Even numbers between 1 and 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnEven())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel2'} style={style.panel} onChange={this.handleChange('panel2')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Odd numbers between 1 and 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnOdd(), 5)}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel3'} style={style.panel} onChange={this.handleChange('panel3')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        First 20 Fibonacci numbers\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnFibonacci())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel4'} style={style.panel} onChange={this.handleChange('panel4')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Prime numbers from 1 to 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnPrime())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel5'} style={style.panel} onChange={this.handleChange('panel5')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Numbers divisible by {this.state.divisedBy === 1 ? \"...\" : this.state.divisedBy}\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnDivisible())}\r\n                    </ExpansionPanelDetails>\r\n                    <Divider />\r\n                    <ExpansionPanelActions>\r\n                        <FormControl>\r\n                            {\"Show me numbers divisible by: \"}\r\n                            <Select\r\n                                value={this.state.divisedBy}\r\n                                onChange={(event) => this.setState({ divisedBy: event.target.value })}\r\n                            >\r\n                                <MenuItem value={3}>3</MenuItem>\r\n                                <MenuItem value={4}>4</MenuItem>\r\n                                <MenuItem value={5}>5</MenuItem>\r\n                                <MenuItem value={6}>6</MenuItem>\r\n                                <MenuItem value={7}>7</MenuItem>\r\n                                <MenuItem value={8}>8</MenuItem>\r\n                                <MenuItem value={9}>9</MenuItem>\r\n                                <MenuItem value={10}>10</MenuItem>\r\n                                <MenuItem value={15}>15</MenuItem>\r\n                                <MenuItem value={25}>25</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </ExpansionPanelActions>\r\n                </ExpansionPanel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Arrays;","import React, { Component } from 'react';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                backgroundColor: this.props.Color,\r\n                height: \"400px\",\r\n                width: \"200px\"\r\n            }}>\r\n                <h1>{this.props.Number}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Card from \"./Card\";\r\n//import url from \"../.././Pictures/Uno_cards/blue_0.png\";\r\n\r\nclass Uno extends Component {\r\n    render() {\r\n        //var url = \"\";\r\n        console.log(this.props.Uno)\r\n        return (\r\n            <div>\r\n                <h1>Ovo je Uno</h1>\r\n                {\r\n                    this.props.Uno.map((item) => {\r\n                        return (\r\n                            <Card \r\n                                {...item}\r\n                                onClick={()=> {\r\n                                    \r\n                                }}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => {\r\n    const { Uno } = state;\r\n\r\n    return {\r\n        Uno,\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Uno);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        maxWidth: 720,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        contentAlign: \"center\"\r\n    },\r\n\r\n    padding: {\r\n        padding: `0 ${theme.spacing(2)}px`,\r\n    }\r\n});\r\n\r\nclass Lists extends Component {\r\n\r\n    renderBadgeNumber(item) {\r\n        var unCompleted = item.Todos.filter((task)=> {\r\n            if(!task.Completed) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n\r\n        return unCompleted.length;\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <Tabs\r\n                    value={this.props.current}\r\n                    onChange={(event, value) => {\r\n                        this.props.changeCurrent(value)\r\n                    }}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {\r\n                        this.props.Todo.map((item) => {\r\n                            return (\r\n                                <Tab\r\n                                    label={\r\n                                        <Badge \r\n                                        className={classes.padding} \r\n                                        color=\"secondary\" \r\n                                        badgeContent={this.renderBadgeNumber(item)}>\r\n                                            {item.ListName}\r\n                                        </Badge>\r\n                                    }\r\n                                    key={item.ID}\r\n                                    value={item.ID}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </Tabs>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nLists.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Todo } = state;\r\n\r\n        return {\r\n            Todo,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators({}, dispatch);\r\n        })\r\n)(Lists);","export function new_task(data) {\r\n    return {\r\n        type: 'NEW_TASK',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function new_list(data) {\r\n    return {\r\n        type: 'NEW_LIST',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_list(data) {\r\n    return {\r\n        type: 'DELETE_LIST',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_task(data) {\r\n    return {\r\n        type: 'DELETE_TASK',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function edit_task(data) {\r\n    return {\r\n        type: 'EDIT_TASK',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_list(data) {\r\n    return {\r\n        type: 'EDIT_LIST',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nclass TaskView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_task } = this.props;\r\n        this.new_task = new_task;\r\n\r\n        this.handleTaskEdit = this.handleTaskEdit.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            Task: {\r\n                ID: \"\",\r\n                Text: \"\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 2,\r\n                ...this.props.Task\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Task.ID ? true : false;\r\n    }\r\n\r\n    handleTaskEdit(label, value) {\r\n        this.setState({\r\n            ...this.state,\r\n            Task: {\r\n                ...this.state.Task,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        var ID = Math.floor(Math.random() * 1000),\r\n            Task = {};\r\n\r\n        if (this.isEditing()) {\r\n            Task = {\r\n                ...this.state.Task,\r\n            }\r\n            this.props.edit_task({\r\n                ID: this.props.listID,\r\n                Task\r\n            })\r\n        } else {\r\n            Task = {\r\n                ...this.state.Task,\r\n                ID\r\n            }\r\n            this.props.new_task({\r\n                ID: this.props.listID,\r\n                Task\r\n            })\r\n        }\r\n\r\n        this.props.handleModalClose()\r\n    }\r\n\r\n    render() {\r\n        const { Task } = this.state;\r\n        return (\r\n            <Dialog\r\n                open={this.props.showTaskModal}\r\n                onClose={this.props.handleModalClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">{\"Edit task #\" + Task.ID}</DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={Task.Completed}\r\n                                    onChange={() => this.handleTaskEdit(\"Completed\", !Task.Completed)}\r\n                                    value={\"?\"}\r\n                                />\r\n                            }\r\n                            label={\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"text\">Name</InputLabel>\r\n                                    <Input\r\n                                        autoFocus\r\n                                        fullWidth\r\n                                        id=\"text\"\r\n                                        value={Task.Text}\r\n                                        onChange={(e) => {\r\n                                            this.handleTaskEdit(\"Text\", e.target.value)\r\n                                        }} />\r\n                                </FormControl>\r\n                            }\r\n                        />\r\n                        <br />\r\n                        <div>\r\n                            Importance level:\r\n                            <IconButton\r\n                                color={Task.Importance === 1 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 1)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    low_priority\r\n                                </i>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                color={Task.Importance === 2 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 2)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    code\r\n                                </i>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                color={Task.Importance === 3 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 3)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    priority_high\r\n                                </i>\r\n                            </IconButton>\r\n                        </div>\r\n                        {\r\n                            /*\r\n                            <Button variant=\"flat\" color=\"primary\">\r\n                                Move to list\r\n                            <i className=\"material-icons\">send</i>\r\n                            </Button>\r\n                            */\r\n                        }\r\n                        <br />\r\n                        <FormControl>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                label=\"Notes\"\r\n                                fullWidth\r\n                                multiline\r\n                                rows=\"3\"\r\n                                value={Task.Notes}\r\n                                onChange={(e) => {\r\n                                    this.handleTaskEdit(\"Notes\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleModalClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(TaskView);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n//import Chip from '@material-ui/core/Chip';\r\n\r\nimport TaskView from './TaskView';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 420,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    },\r\n\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    listItemCompleted: {\r\n        textDecoration: \"line-through\"\r\n    },\r\n\r\n    arrow: {\r\n        paddingTop: \"15px\",\r\n        verticalAlign: \"center\"\r\n    },\r\n\r\n    avatar: {\r\n        margin: 10,\r\n    },\r\n\r\n    highImportance: {\r\n        color: '#fff',\r\n        backgroundColor: '#f44336'\r\n    },\r\n\r\n    normalImportance: {\r\n        color: '#fff',\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n\r\n    lowImportance: {\r\n        color: '#000',\r\n        backgroundColor: '#4caf50',\r\n    },\r\n\r\n    close: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n\r\n    buttonDelete: {\r\n        color: '#fff',\r\n        backgroundColor: theme.palette.secondary.main,\r\n    }\r\n});\r\n\r\nclass CurrentList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { delete_task, edit_task, new_task } = this.props;\r\n        this.delete_task = delete_task;\r\n        this.edit_task = edit_task;\r\n        this.new_task = new_task;\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n        this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n\r\n        this.state = {\r\n            showCompleted: true,\r\n            showUncompleted: true,\r\n            showTaskModal: false,\r\n            showSnackbar: false,\r\n            Task: {\r\n                Importance: 2\r\n            },\r\n            lastDeleted: {}\r\n        }\r\n    }\r\n\r\n    findById(list, ID, flag) {\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].ID === ID) {\r\n                if (!flag) {\r\n                    return list[i].Todos;\r\n                } else {\r\n                    return list[i];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleUndoDelete() {\r\n        this.handleSnackbarClose()\r\n        this.new_task({\r\n            ID: this.props.currentList,\r\n            Task: this.state.lastDeleted\r\n        })\r\n    }\r\n\r\n    handleSnackbarClose() {\r\n        this.setState({\r\n            showSnackbar: false\r\n        })\r\n    }\r\n\r\n    handleModalClose() {\r\n        this.setState({\r\n            showTaskModal: false\r\n        })\r\n    }\r\n\r\n    handleChange(label) {\r\n        let value = this.state[label];\r\n        this.setState({\r\n            [label]: !value\r\n        })\r\n    }\r\n\r\n    handleTaskEdit(label, value) {\r\n        this.setState({\r\n            ...this.state,\r\n            Task: {\r\n                ...this.state.Task,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    filterTasks(flag, tasks = this.findById(this.props.Todo, this.props.currentList, false)) {\r\n        return tasks.filter((task) => {\r\n            if (flag) {\r\n                return !task.Completed;\r\n            }\r\n            return task.Completed;\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.handleModalClose()\r\n        const data = {\r\n            ID: this.props.currentList,\r\n            Task: this.state.Task\r\n        }\r\n        this.edit_task(data)\r\n    }\r\n\r\n    renderItemImportance(item) {\r\n        const { classes } = this.props;\r\n        const { Importance } = item;\r\n        switch (Importance) {\r\n            case 1: return <Avatar className={classes.lowImportance}>\r\n                <i className=\"material-icons\">low_priority</i>\r\n            </Avatar>\r\n            case 2: return <Avatar className={classes.normalImportance}>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n            </Avatar>\r\n            case 3: return <Avatar className={classes.highImportance}>\r\n                <i className=\"material-icons\">priority_high</i>\r\n            </Avatar>\r\n            default: return <Avatar className={classes.normalImportance}>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n            </Avatar>\r\n        }\r\n    }\r\n\r\n    renderItems(item) {\r\n        const { classes } = this.props;\r\n\r\n        return <ListItem\r\n            key={item.ID}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={() => {\r\n                const data = {\r\n                    ID: this.props.currentList,\r\n                    Task: {\r\n                        ...item,\r\n                        Completed: !item.Completed\r\n                    }\r\n                }\r\n                this.edit_task(data)\r\n            }}\r\n            className={classes.listItem}\r\n        >\r\n            <ListItemAvatar>\r\n                {this.renderItemImportance(item)}\r\n            </ListItemAvatar>\r\n            <Checkbox\r\n                checked={item.Completed}\r\n            />\r\n            <ListItemText\r\n                className={item.Completed ? classes.listItemCompleted : \"\"}\r\n                primary={item.Text}\r\n                secondary={item.Notes\r\n                    ? <i className=\"material-icons\">notes</i>\r\n                    : null\r\n                }\r\n            />\r\n            <ListItemSecondaryAction>\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showTaskModal: true,\r\n                            Task: {\r\n                                ...this.state.Task,\r\n                                ...item\r\n                            }\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\">\r\n                        edit\r\n                    </i>\r\n                </IconButton>\r\n                <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showSnackbar: true,\r\n                            lastDeleted: {\r\n                                ...item\r\n                            }\r\n                        })\r\n                        const data = {\r\n                            ID: this.props.currentList,\r\n                            Task: item\r\n                        }\r\n                        this.delete_task(data)\r\n                    }}>\r\n                    <i className=\"material-icons\">\r\n                        delete_forever\r\n                    </i>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <List className={classes.root}>\r\n                <ListSubheader onClick={() => this.handleChange(\"showUncompleted\")}>\r\n                    <IconButton onClick={() => this.handleChange(\"showUncompleted\")}>\r\n                        <i className={\"material-icons\"}>\r\n                            {!this.state.showUncompleted ? \"keyboard_arrow_down\" : \"keyboard_arrow_up\"}\r\n                        </i>\r\n                    </IconButton>\r\n                    Uncompleted\r\n                </ListSubheader>\r\n                {\r\n                    this.state.showUncompleted && this.filterTasks(true).map((item) => {\r\n                        return (\r\n                            this.renderItems(item)\r\n                        )\r\n                    })\r\n                }\r\n                <ListSubheader onClick={() => this.handleChange(\"showCompleted\")}>\r\n                    <IconButton onClick={() => this.handleChange(\"showCompleted\")}>\r\n                        <i className={\"material-icons\"}>\r\n                            {!this.state.showCompleted ? \"keyboard_arrow_down\" : \"keyboard_arrow_up\"}\r\n                        </i>\r\n                    </IconButton>\r\n                    Completed\r\n                </ListSubheader>\r\n                {\r\n                    this.state.showCompleted && this.filterTasks(false).map((item) => {\r\n                        return (\r\n                            this.renderItems(item)\r\n                        )\r\n                    })\r\n                }\r\n                <Divider />\r\n                {\r\n                    this.state.showTaskModal\r\n                        ? <TaskView\r\n                            Task={this.state.Task}\r\n                            showTaskModal={this.state.showTaskModal}\r\n                            listID={this.props.currentList}\r\n                            handleModalClose={this.handleModalClose}\r\n                        />\r\n                        : null\r\n                }\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={this.state.showSnackbar}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleSnackbarClose}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span id=\"message-id\">Task deleted</span>}\r\n                    action={[\r\n                        <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n                            UNDO\r\n                        </Button>,\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.handleSnackbarClose}\r\n                        >\r\n                            <i className=\"material-icons\">close</i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\nCurrentList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Todo } = state;\r\n\r\n        return {\r\n            Todo,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(CurrentList);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nclass ListEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_list, edit_list } = this.props;\r\n        this.new_list = new_list;\r\n        this.edit_list = edit_list;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            list: {\r\n                ID: \"\",\r\n                ListName: \"\",\r\n                Archived: false,\r\n                Todos: [],\r\n                ...this.props.list\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.list.ID ? true : false;\r\n    }\r\n\r\n    handleChange(label, value) {\r\n        this.setState({\r\n            list: {\r\n                ...this.state.list,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_list(this.state.list)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_list({\r\n                ...this.state.list,\r\n                ID\r\n            });\r\n        }\r\n\r\n        this.props.handleClose();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {\r\n                        this.isEditing()\r\n                            ? \"Edit list\"\r\n                            : \"Add new list\"\r\n                    }\r\n                </DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">Name your list</InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.list.ListName}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"ListName\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(ListEdit);","var User = {\r\n    name: \"GSM\"\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport compose from 'recompose/compose';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\n//import './App.css';\r\nimport Lists from \"./Components/Lists\";\r\nimport CurrentList from \"./Components/CurrentList\";\r\nimport ListEdit from './Components/ListEdit';\r\nimport TaskView from './Components/TaskView';\r\n\r\nimport User from '../../Data/User';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n  ...ToDoActions\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 420,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass ToDo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.exitPopups = this.exitPopups.bind(this);\r\n    this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n    this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n\r\n    const { delete_list, new_list } = this.props;\r\n    this.delete_list = delete_list;\r\n    this.new_list = new_list;\r\n\r\n    this.state = {\r\n      tdl: [...this.props.Todo],\r\n      UserName: User.name,\r\n      CurrentList: 1,\r\n      showNewListPopup: false,\r\n      showNewTaskPopup: false,\r\n      lastDeletedList: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      tdl: [...this.props.Todo]\r\n    })\r\n  }\r\n\r\n\r\n  findById(list, ID, flag) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].ID === ID) {\r\n        if (!flag) {\r\n          return list[i].Todos;\r\n        } else {\r\n          return list[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  newList = (list) => {\r\n    this.setState({\r\n      tdl: [\r\n        ...this.state.tdl,\r\n        list\r\n      ],\r\n      showNewListPopup: false\r\n    })\r\n  }\r\n\r\n  currentList() {\r\n    return this.findById(this.props.Todo, this.state.CurrentList, true);\r\n  }\r\n\r\n  nextCurrent() {\r\n    return this.props.Todo.filter((list) => {\r\n      if (list.ID !== this.state.CurrentList) {\r\n        return true;\r\n      }\r\n      return false;\r\n    })[0].ID\r\n  }\r\n\r\n  handleUndoDelete() {\r\n    this.handleSnackbarClose()\r\n    this.new_list(this.state.lastDeletedList)\r\n  }\r\n\r\n  handleSnackbarClose() {\r\n    this.setState({\r\n      showSnackbar: false\r\n    })\r\n  }\r\n\r\n  exitPopups() {\r\n    this.setState({\r\n      showNewListPopup: false,\r\n      showNewTaskPopup: false,\r\n      showEditListPopup: false\r\n    })\r\n  }\r\n\r\n  renderMoreListOptions() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showNewListPopup: true\r\n            })\r\n          }}>\r\n          New list\r\n          </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"medium\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showEditListPopup: true\r\n            })\r\n          }}>\r\n          Edit list\r\n          </Button>\r\n        <Button\r\n          variant=\"text\"\r\n          color=\"default\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showSnackbar: true,\r\n              CurrentList: this.nextCurrent(),\r\n              lastDeletedList: {\r\n                ...this.currentList()\r\n              }\r\n            })\r\n\r\n            this.delete_list(this.currentList())\r\n\r\n          }}>\r\n          Delete list\r\n          </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Lists\r\n          lists={[...this.state.tdl]}\r\n          current={this.state.CurrentList}\r\n          cancel={this.exitPopups}\r\n          newList={\r\n            () => {\r\n              this.setState({\r\n                showNewListPopup: true\r\n              })\r\n            }\r\n          }\r\n          changeCurrent={\r\n            (ID) => {\r\n              this.setState({\r\n                CurrentList: ID\r\n              })\r\n            }\r\n          }\r\n        />\r\n        <CurrentList\r\n          currentList={this.state.CurrentList}\r\n          toggleItem={this.toggleItem}\r\n          deleteItem={this.deleteItem}\r\n        />\r\n        {\r\n          this.state.showNewTaskPopup\r\n            ? <TaskView\r\n              showTaskModal={this.state.showNewTaskPopup}\r\n              listName={this.currentList().ListName}\r\n              listID={this.state.CurrentList}\r\n              handleModalClose={this.exitPopups}\r\n              newTask={this.newTask}\r\n            />\r\n            : null\r\n        }\r\n        {\r\n          this.state.showNewListPopup\r\n            ? <ListEdit\r\n              open={this.state.showNewListPopup}\r\n              listName={this.currentList().ListName}\r\n              handleClose={this.exitPopups}\r\n            />\r\n            : null\r\n        }\r\n        {\r\n          this.state.showEditListPopup\r\n            ? <ListEdit\r\n              open={this.state.showEditListPopup}\r\n              list={this.currentList()}\r\n              handleClose={this.exitPopups}\r\n            />\r\n            : null\r\n        }\r\n        <Tooltip TransitionComponent={Zoom} title=\"Add new TASK\">\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            className={classes.fab}\r\n            onClick={() => {\r\n              this.setState({\r\n                showNewTaskPopup: true\r\n              })\r\n            }}>\r\n            <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>add_circle_outline</i>\r\n            New task\r\n          </Fab>\r\n        </Tooltip>\r\n        {this.renderMoreListOptions()}\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          open={this.state.showSnackbar}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">List deleted</span>}\r\n          action={[\r\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n              UNDO\r\n            </Button>,\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={this.handleSnackbarClose}\r\n            >\r\n              <i className=\"material-icons\">close</i>\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToDo.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(state => {\r\n    const { Todo } = state;\r\n\r\n    return {\r\n      Todo,\r\n    };\r\n  },\r\n    dispatch => {\r\n      return bindActionCreators(MainActions, dispatch);\r\n    })\r\n)(ToDo);","import React, { Component } from 'react';\r\nimport ReactQuill from 'react-quill';\r\n\r\nclass TextEditor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.modules = {\r\n            toolbar: [\r\n                [{ 'header': [1, 2, false] }],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\r\n                ['link', 'image'],\r\n                ['clean']\r\n            ],\r\n        }\r\n\r\n        this.formats = [\r\n            'header',\r\n            'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n            'list', 'bullet', 'indent',\r\n            'link', 'image'\r\n        ]\r\n        this.state = { text: '' }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(value) {\r\n        this.setState({ text: value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactQuill\r\n                value={this.props.value}\r\n                onChange={this.props.handleChange}\r\n                theme=\"snow\"\r\n                modules={this.modules}\r\n                formats={this.formats}\r\n                style={{\r\n                    height: \"375px\",\r\n                    marginBottom: \"45px\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextEditor;","var darkColors = [\r\n    \"#ba000d\",\r\n    \"#4a148c\",\r\n    \"#0d47a1\",\r\n    \"#1b5e20\",\r\n    \"#0069c0\",\r\n    \"#ff3d00\",\r\n    \"#4e342e\",\r\n    \"#000000\",\r\n];\r\n\r\nexport default darkColors;","export function new_note(data) {\r\n    return {\r\n        type: 'NEW_NOTE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_note(data) {\r\n    return {\r\n        type: 'EDIT_NOTE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_note(data) {\r\n    return {\r\n        type: 'DELETE_NOTE',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport TextEditor from \"../../Components/TextEditor\";\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { CirclePicker } from 'react-color';\r\nimport darkColors from \"../../Data/Settings/darkPickerColors\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as NotesActions from \"../../Actions/NotesActions\";\r\n\r\nconst MainActions = {\r\n    ...NotesActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    note: {\r\n        width: '100%',\r\n        maxWidth: 530,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    editorSpace: {\r\n        width: '100%',\r\n        maxWidth: 530,\r\n        backgroundColor: theme.palette.background.paper,\r\n        height: 375,\r\n    },\r\n\r\n    avatar: {\r\n        width: 20,\r\n        height: 20,\r\n        marginLeft: 10,\r\n    },\r\n\r\n    Button: {\r\n        display: \"inline-block\"\r\n    }\r\n});\r\n\r\nclass NotesView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_note, delete_note, edit_note } = this.props;\r\n        this.new_note = new_note;\r\n        this.delete_note = delete_note;\r\n        this.edit_note = edit_note;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            Note: {\r\n                ID: null,\r\n                Title: \"\",\r\n                Content: \"\",\r\n                Color: \"#0d47a1\",\r\n                Date: new Date(),\r\n                ...this.props.Note\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Note.ID ? true : false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!this.props.Note || prevProps.Note.ID === this.props.Note.ID) return null;\r\n        if (!this.props.isNew) {\r\n            return this.setState({\r\n                Note: {\r\n                    ID: null,\r\n                    Title: \"\",\r\n                    Content: \"\",\r\n                    Color: \"#0d47a1\",\r\n                    Date: new Date(),\r\n                    ...this.props.Note\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            return this.setState({\r\n                Note: {\r\n                    ...this.props.Note\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange(newValue) {\r\n        this.setState({\r\n            Note: {\r\n                ...this.state.Note,\r\n                Content: newValue\r\n            }\r\n        })\r\n    }\r\n\r\n    handleValueChange(label, value) {\r\n        this.setState({\r\n            Note: {\r\n                ...this.state.Note,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete() {\r\n        this.delete_note(this.state.Note)\r\n        // this.props.changeCurrentOnAdd()\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_note(this.state.Note)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_note({\r\n                ...this.state.Note,\r\n                ID\r\n            });\r\n            this.props.changeCurrentOnAdd(ID)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <Paper elevation={10} className={classes.note}>\r\n                    <TextField\r\n                        id=\"full-width\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Avatar\r\n                                        style={{ backgroundColor: this.state.Note.Color }}\r\n                                        className={classes.avatar}\r\n                                    >\r\n                                        {this.state.Note.Title[0]}\r\n                                    </Avatar>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        required\r\n                        placeholder=\"Enter title here...\"\r\n                        fullWidth\r\n                        value={this.state.Note.Title}\r\n                        onChange={(e) => {\r\n                            this.handleValueChange(\"Title\", e.target.value)\r\n                        }}\r\n                    />\r\n                    <TextEditor\r\n                        value={this.state.Note.Content}\r\n                        handleChange={this.handleChange}\r\n                    />\r\n                    <div style={{ display: \"inline-block\" }}>\r\n                        <CirclePicker\r\n                            color={this.state.Note.Color}\r\n                            width=\"260px\"\r\n                            colors={darkColors}\r\n                            circleSpacing={3}\r\n                            onChange={(value) => {\r\n                                this.handleValueChange(\"Color\", value.hex)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.isEditing()\r\n                            ? <Button\r\n                                color=\"secondary\"\r\n                                className={classes.Button}\r\n                                onClick={this.handleDelete}>\r\n                                Delete\r\n                                </Button>\r\n                            : <Button\r\n                                color=\"secondary\"\r\n                                className={classes.Button}\r\n                                onClick={this.props.handleCancel}>\r\n                                Cancel\r\n                                </Button>\r\n                    }\r\n                    <Button className={classes.Button} type=\"submit\" color=\"primary\">\r\n                        Save\r\n                        </Button>\r\n                </Paper>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(() => {\r\n        return {}\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(NotesView);","export function increase(data) {\r\n    return {\r\n        type: 'INCREASE',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function decrease(data) {\r\n    return {\r\n        type: 'DECREASE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function new_counter(data) {\r\n    return {\r\n        type: 'NEW_COUNTER',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_counter(data) {\r\n    return {\r\n        type: 'EDIT_COUNTER',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_counter(data) {\r\n    return {\r\n        type: 'DELETE_COUNTER',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport NotesView from \"./NotesView\";\r\nimport _ from \"lodash\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\n//import { Fab } from '@material-ui/core';\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    notesList: {\r\n        width: '100%',\r\n        maxWidth: 240,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginRight: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst EmptyNote = {\r\n    ID: null,\r\n    Title: \"\",\r\n    Content: \"\",\r\n    Color: \"#0d47a1\",\r\n    Date: new Date(),\r\n}\r\n\r\nclass Notes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.changeCurrentOnAdd = this.changeCurrentOnAdd.bind(this);\r\n\r\n        this.state = {\r\n            currentNote: this.getFirst(),\r\n            isNew: false,\r\n        }\r\n    }\r\n\r\n    /* static getDerivedStateFromProps(props, state) {\r\n        return \r\n    } */\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.Notes === this.props.Notes) return null;\r\n\r\n        if (!this.props.Notes.length) {\r\n            return this.setState({\r\n                currentNote: EmptyNote\r\n            })\r\n        }\r\n\r\n        return this.setState({\r\n            currentNote: this.props.Notes[0]\r\n        })\r\n    }\r\n\r\n\r\n    getFirst(arr = this.props.Notes) {\r\n        if (!arr.length) return EmptyNote;\r\n\r\n        return arr[0]\r\n    }\r\n\r\n    renderNotesList() {\r\n        const { classes, Notes } = this.props;\r\n\r\n        if (!Notes || !Notes.length) return null;\r\n\r\n        return (\r\n            <Paper elevation={5} className={classes.notesList}>\r\n                <List component=\"nav\" dense>\r\n                    {\r\n                        Notes.map((note, index) => {\r\n                            return (\r\n                                <Zoom in={true}\r\n                                    key={note.ID}\r\n                                    style={{ transitionDelay: index * 100 }}\r\n                                >\r\n                                    <div>\r\n                                        <ListItem\r\n                                            dense\r\n                                            button\r\n                                            onClick={() => {\r\n                                                this.setState({\r\n                                                    currentNote: _.find(this.props.Notes, { ID: note.ID })\r\n                                                })\r\n                                            }}\r\n                                        >\r\n                                            <Avatar\r\n                                                style={{\r\n                                                    backgroundColor: note.Color,\r\n                                                    marginRight: 10,\r\n                                                }}\r\n                                            >\r\n                                                {note.Title[0]}\r\n                                            </Avatar>\r\n                                            <ListItemText primary={note.Title} />\r\n                                        </ListItem>\r\n                                        {\r\n                                            !(this.props.Notes.length - 1 === index)\r\n                                                ? <Divider variant=\"inset\" />\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </Zoom>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new NOTE\">\r\n                <Zoom in={true}>\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        style={{ marginRight: '10px' }}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                isNew: true,\r\n                                currentNote: {\r\n                                    ID: null,\r\n                                    Title: \"\",\r\n                                    Content: \"\",\r\n                                    Color: \"#0d47a1\",\r\n                                    Date: new Date()\r\n                                }\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\">add_circle</i>\r\n                    </Fab>\r\n                </Zoom>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    handleCancel() {\r\n        this.setState({\r\n            isNew: false,\r\n            currentNote: this.getFirst()\r\n        })\r\n    }\r\n\r\n    changeCurrentOnAdd(ID) {\r\n        this.setState({\r\n            isNew: false,\r\n        })\r\n    }\r\n\r\n    getNote() {\r\n        return {\r\n            ID: null,\r\n            Title: \"\",\r\n            Content: \"\",\r\n            Color: \"#0d47a1\",\r\n            Date: new Date(),\r\n            ...(this.state.isNew ? { ID: null } : _.find(this.props.Notes, { ID: this.state.currentID }))\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={10}\r\n                    className={\"\"}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    style={{ marginTop: 50 }}\r\n                >\r\n                    {this.renderFabButton()}\r\n                    {this.renderNotesList()}\r\n                    <Zoom in={true} style={{ transitionDelay: 500 }}>\r\n                        <NotesView\r\n                            Note={this.state.currentNote}\r\n                            handleCancel={this.handleCancel}\r\n                            isNew={this.state.isNew}\r\n                            changeCurrentOnAdd={this.changeCurrentOnAdd}\r\n                        />\r\n                    </Zoom>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Notes } = state;\r\n\r\n        return {\r\n            Notes,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Notes);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport { CirclePicker } from 'react-color';\r\nimport darkColors from \"../../Data/Settings/darkPickerColors\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nclass CounterView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_counter, delete_counter, edit_counter } = this.props;\r\n        this.new_counter = new_counter;\r\n        this.delete_counter = delete_counter;\r\n        this.edit_counter = edit_counter;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            Counter: {\r\n                ID: null,\r\n                Title: \"\",\r\n                Value: 0,\r\n                Date: new Date(),\r\n                Color: \"#0d47a1\",\r\n                Goal: 0,\r\n                ...this.props.Counter\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Counter.ID ? true : false;\r\n    }\r\n\r\n    handleChange(label, value) {\r\n        this.setState({\r\n            Counter: {\r\n                ...this.state.Counter,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.handleClose()\r\n        this.delete_counter(this.state.Counter)\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_counter(this.state.Counter)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_counter({\r\n                ...this.state.Counter,\r\n                ID\r\n            });\r\n        }\r\n\r\n        this.props.handleClose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {\r\n                        this.isEditing()\r\n                            ? \"Edit counter\"\r\n                            : \"Add new counter\"\r\n                    }\r\n                    {\r\n                        this.isEditing()\r\n                        && <Tooltip TransitionComponent={Zoom} title=\"DELETE COUNTER\">\r\n                            <IconButton\r\n                                key=\"delete\"\r\n                                aria-label=\"Delete\"\r\n                                color=\"inherit\"\r\n                                onClick={this.handleDelete}\r\n                            >\r\n                                <i className=\"material-icons\">delete_forever</i>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    }\r\n                </DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControl>\r\n                            <TextField\r\n                                required\r\n                                autoFocus\r\n                                label=\"Name your counter\"\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Title}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Title\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">\r\n                                {\r\n                                    this.isEditing()\r\n                                        ? \"Value\"\r\n                                        : \"Starting value\"\r\n                                }\r\n                            </InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Value}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Value\", parseInt(e.target.value, 10))\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">Counter goal</InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Goal}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Goal\", parseInt(e.target.value, 10))\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <br />\r\n                        <FormControl>\r\n                            <CirclePicker\r\n                                color={this.state.Counter.Color}\r\n                                width=\"180px\"\r\n                                colors={darkColors}\r\n                                circleSpacing={17}\r\n                                onChange={(value) => {\r\n                                    this.handleChange(\"Color\", value.hex)\r\n                                }}\r\n                            />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleClose} color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(CounterView);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport CounterView from \"./CounterView\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: '20px',\r\n        borderRadius: '100px',\r\n        position: 'relative',\r\n        color: \"#FFFFFF\"\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n\r\n    white: {\r\n        color: \"#fff\"\r\n    },\r\n\r\n    CardContent: {\r\n        display: 'inline-block',\r\n    },\r\n\r\n    title: {\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        display: \"inline-block\",\r\n        marginRight: \"8px\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    badge: {\r\n        top: -2,\r\n        right: -20,\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    leftDiv: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        left: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        margin: \"1px\",\r\n        paddingRight: \"5px\",\r\n        borderRight: \"1px solid darkgrey\",\r\n        verticalAlign: \"center\"\r\n    },\r\n\r\n    rightDiv: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        right: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        margin: \"1px\",\r\n        paddingLeft: \"5px\",\r\n        borderLeft: \"1px solid grey\"\r\n    },\r\n\r\n    minusButton: {\r\n        margin: \"1px\"\r\n    },\r\n\r\n    bar: {\r\n        position: 'absolute',\r\n        bottom: \"0\",\r\n        right: \"0\",\r\n        left: \"0\",\r\n    },\r\n\r\n    completedProgress: {\r\n        backgroundColor: '#76ff03',\r\n    },\r\n\r\n    uncompletedProgress: {\r\n        backgroundColor: '#f50057',\r\n    },\r\n});\r\n\r\nclass Counters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.counterModal = this.counterModal.bind(this);\r\n        this.exitModals = this.exitModals.bind(this);\r\n\r\n        const { increase, decrease } = this.props;\r\n        this.increase = increase;\r\n        this.decrease = decrease;\r\n\r\n        this.state = {\r\n            showEditModal: false,\r\n            showNewCounterPopup: false,\r\n            CounterToEdit: {}\r\n        }\r\n    }\r\n\r\n    counterModal(Counter) {\r\n        this.setState({\r\n            showEditModal: true,\r\n            CounterToEdit: { ...Counter }\r\n        })\r\n    }\r\n\r\n    exitModals() {\r\n        this.setState({\r\n            showEditModal: false,\r\n            showNewCounterPopup: false\r\n        })\r\n    }\r\n\r\n    renderProgress(Counter) {\r\n        if (!Counter.Goal) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <LinearProgress\r\n                color={\r\n                    this.progress(Counter) === 100\r\n                        ? \"primary\"\r\n                        : \"secondary\"\r\n                }\r\n                variant=\"determinate\"\r\n                value={this.progress(Counter)}\r\n                className={classes.bar}\r\n            />\r\n        )\r\n    }\r\n\r\n    progress(Counter) {\r\n        if (Counter.Value >= Counter.Goal) return 100;\r\n\r\n        return ((100 * Counter.Value) / Counter.Goal);\r\n    }\r\n\r\n    renderCounters() {\r\n        if (!this.props.Counters || !this.props.Counters.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return this.props.Counters.map((Counter, index) => {\r\n            return (\r\n                <Slide\r\n                    direction=\"up\"\r\n                    in={true}\r\n                    key={Counter.ID}\r\n                    style={{transitionDelay: 100*index}}\r\n                    mountOnEnter\r\n                    unmountOnExit\r\n                >\r\n                    <Card\r\n                        className={classes.card}\r\n                        raised\r\n                        style={{ backgroundColor: Counter.Color }}\r\n                    >\r\n                        <CardContent\r\n                            className={classes.CardContent}\r\n                            onClick={() => this.counterModal(Counter)}\r\n                        >\r\n                            <Badge\r\n                                badgeContent={Counter.Value}\r\n                                color=\"secondary\"\r\n                                classes={{ badge: classes.badge }}\r\n                            >\r\n                                <Typography className={classes.title}>\r\n                                    {Counter.Title}\r\n                                </Typography>\r\n                            </Badge>\r\n                        </CardContent>\r\n                        <div className={classes.leftDiv}>\r\n                            <IconButton\r\n                                key=\"close\"\r\n                                aria-label=\"Close\"\r\n                                color=\"inherit\"\r\n                                className={classes.minusButton}\r\n                                onClick={() => { this.decrease(Counter.ID) }}\r\n                            >\r\n                                <i className=\"material-icons\">remove_circle_outline</i>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className={classes.rightDiv}>\r\n                            <IconButton\r\n                                key=\"close\"\r\n                                aria-label=\"Close\"\r\n                                color=\"inherit\"\r\n                                onClick={() => { this.increase(Counter.ID) }}\r\n                            >\r\n                                <i className=\"material-icons\">add_circle_outline</i>\r\n                            </IconButton>\r\n                        </div>\r\n                        {this.renderProgress(Counter)}\r\n                    </Card>\r\n                </Slide>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new COUNTER\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showNewCounterPopup: true\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{marginRight: \"10px\"}}>add_circle</i>\r\n                    New Counter\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    renderNewCounterModal() {\r\n        return this.state.showNewCounterPopup && <CounterView\r\n            open={this.state.showNewCounterPopup}\r\n            handleClose={this.exitModals}\r\n        />\r\n    }\r\n\r\n    renderEditCounterModal() {\r\n        return this.state.showEditModal && <CounterView\r\n            open={this.state.showEditModal}\r\n            Counter={this.state.CounterToEdit}\r\n            handleClose={this.exitModals}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderCounters()}\r\n                {this.renderFabButton()}\r\n                {this.renderNewCounterModal()}\r\n                {this.renderEditCounterModal()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Counters } = state;\r\n\r\n        return {\r\n            Counters,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Counters);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(2),\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n    },\r\n\r\n    convertDiv: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        width: 250,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n\r\n    menu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass Convert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            input: \"\",\r\n            convertorID: 2,\r\n            output: \"\",\r\n            convertors: [\r\n                {\r\n                    ID: 0,\r\n                    Label: \"UPPERCASE\"\r\n                },\r\n                {\r\n                    ID: 1,\r\n                    Label: \"lowercase\"\r\n                },\r\n                {\r\n                    ID: 2,\r\n                    Label: \"Reverse\"\r\n                },\r\n                {\r\n                    ID: 3,\r\n                    Label: \"Morse code\"\r\n                },\r\n                {\r\n                    ID: 4,\r\n                    Label: \"ROT13\"\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange(event, name) {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        }, () => {\r\n            this.setState({\r\n                output: this.Convert()\r\n            })\r\n        });\r\n    };\r\n\r\n    Convert() {\r\n        const { input } = this.state;\r\n\r\n        switch (this.state.convertorID) {\r\n            case 0: return input.toUpperCase();\r\n            case 1: return input.toLowerCase();\r\n            case 2: return input.split(\"\").reverse().join(\"\");\r\n            case 3: return this.Morse(input);\r\n            case 4: return this.ROT13(input);\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    ROT13(str) {\r\n        var input = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n        var output = 'NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm';\r\n        var index = x => input.indexOf(x);\r\n        var translate = x => index(x) > -1 ? output[index(x)] : x;\r\n        return str.split('').map(translate).join('');\r\n    }\r\n\r\n    Morse(input) {\r\n        var letters = [' ', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\r\n        var morseLetters = [\"\\xa0\\xa0\\xa0\\xa0\", \". ___\", \"___ . . .\", \"___ . ___ .\", \"___ . .\", \".\", \". . ___ .\", \"___ ___ .\", \". . . .\", \". .\", \". ___ ___ ___\", \"___ . ___\", \". ___ . .\", \"___ ___\", \"___ .\", \"___ ___ ___\", \". ___ ___ .\", \"___ ___ . ___\", \". ___ .\", \". . .\", \"_\", \". . ___\", \". . . ___\", \". ___ ___\", \"___ . . ___\", \"___ . ___ ___\", \"___ ___ . .\", \". ___ ___ ___ ___\", \". . ___ ___ ___\", \". . . ___ ___\", \". . . . ___\", \". . . . .\", \"___ . . . .\", \"___ ___ . . .\", \"___ ___ ___ . .\", \"___ ___ ___ ___ .\", \"___ ___ ___ ___ ___\"];\r\n\r\n        var newText = \"\";\r\n\r\n        for (var i = 0; i < input.length; i++) {\r\n            for (var j = 0; j < 37; j++) {\r\n                if (input[i].toLowerCase() === letters[j]) {\r\n                    newText += morseLetters[j];\r\n                    newText += \"\\xa0\\xa0\\xa0\";\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return newText;\r\n    }\r\n\r\n    renderInputCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.root} elevation={10}>\r\n            <TextField\r\n                id=\"multiline-flexible\"\r\n                label=\"Input\"\r\n                multiline\r\n                fullWidth\r\n                rows=\"4\"\r\n                rowsMax=\"4\"\r\n                value={this.state.input}\r\n                onChange={(e) => this.handleChange(e, 'input')}\r\n                margin=\"normal\"\r\n            />\r\n        </Card>\r\n    }\r\n\r\n    renderConvertTypeCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.convertDiv} elevation={2}>\r\n            <TextField\r\n                id=\"select-convertor\"\r\n                select\r\n                value={this.state.convertorID}\r\n                onChange={(e) => this.handleChange(e, 'convertorID')}\r\n                SelectProps={{\r\n                    MenuProps: {\r\n                        className: classes.menu,\r\n                    },\r\n                }}\r\n                helperText=\"Select convert method\"\r\n                margin=\"normal\"\r\n            >\r\n                {this.state.convertors.map(option => (\r\n                    <MenuItem key={option.ID} value={option.ID}>\r\n                        {option.Label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </Card>\r\n    }\r\n\r\n    renderOutputCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.root} elevation={10}>\r\n            <TextField\r\n                id=\"multiline-flexible\"\r\n                label=\"Output\"\r\n                multiline\r\n                fullWidth\r\n                rows=\"4\"\r\n                rowsMax=\"4\"\r\n                value={this.state.output}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n            />\r\n        </Card>\r\n    }\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderInputCard()}\r\n                {this.renderArrowDown()}\r\n                {this.renderConvertTypeCard()}\r\n                {this.renderArrowDown()}\r\n                {this.renderOutputCard()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Convert);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport Success from '../../../Components/SnackBars/SnackSuccess';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: 10,\r\n        position: 'relative',\r\n    },\r\n    copyButton: {\r\n        display: 'inline-block',\r\n        paddingLeft: \"5px\",\r\n        position: 'absolute',\r\n        right: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        verticalAlign: \"10px\"\r\n    },\r\n    text: {\r\n        display: \"inline-block\"\r\n    },\r\n    decorationsWrapper: {\r\n        maxHeight: \"25%\",\r\n        overflowY: \"auto\",\r\n    }\r\n});\r\n\r\nclass Decorate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSBClose = this.handleSBClose.bind(this);\r\n\r\n        this.state = {\r\n            text: \"\",\r\n            snackBarSuccess: false\r\n        }\r\n\r\n        this.Decorations = [\r\n            {\r\n                left: \"▁ ▂ ▄ ▅ ▆ ▇ █ [\",\r\n                right: \"] █ ▇ ▆ ▅ ▄ ▂ ▁\",\r\n            },\r\n            {\r\n                left: \"•´¯`•. [\",\r\n                right: \"] .•´¯`•\",\r\n            },\r\n            {\r\n                left: \"(-_-) [\",\r\n                right: \"] (-_-)\",\r\n            },\r\n            {\r\n                left: \"▀▄▀▄▀▄ [\",\r\n                right: \"] ▄▀▄▀▄▀\",\r\n            },\r\n            {\r\n                left: \"▌│█║▌║▌║ [\",\r\n                right: \"] ║▌║▌║█│▌\",\r\n            },\r\n            {\r\n                left: \"๑۞๑,¸¸,ø¤º°`°๑۩ [\",\r\n                right: \"] ๑۩ ,¸¸,ø¤º°`°๑۞๑\",\r\n            },\r\n            {\r\n                left: \"↦↦↦↦↦ [\",\r\n                right: \"] ↤↤↤↤↤\",\r\n            },\r\n            {\r\n                left: \"░▒▓█ [\",\r\n                right: \"] █▓▒░\",\r\n            },\r\n            {\r\n                left: \"➶➶➶➶➶ [\",\r\n                right: \"] ➷➷➷➷➷\",\r\n            },\r\n            {\r\n                left: \"★彡 [\",\r\n                right: \"] 彡★\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    handleChange(event, name) {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    copyToClipboard(text) {\r\n        var data = new DataTransfer();\r\n        data.items.add(\"text/plain\", text);\r\n        navigator.clipboard.writeText(text);\r\n        this.setState({\r\n            snackBarSuccess: true\r\n        });\r\n    }\r\n\r\n    renderDecorations() {\r\n        const { classes } = this.props;\r\n\r\n        return <div className={classes.decorationsWrapper}>\r\n            {\r\n                this.Decorations.map((item, index) => {\r\n                    var textToDisplay = `${item.left} ${this.state.text} ${item.right}`;\r\n                    return <Card className={classes.root} elevation={1} key={index}>\r\n                        <Typography component=\"p\" className={classes.text}>\r\n                            {\r\n                                textToDisplay\r\n                            }\r\n                        </Typography>\r\n                        <div className={classes.copyButton}>\r\n                            <Tooltip TransitionComponent={Zoom} title=\"Copy to clipboard\">\r\n                                <IconButton color=\"secondary\" aria-label=\"Copy\" onClick={() => {\r\n                                    this.copyToClipboard(textToDisplay)\r\n                                }}>\r\n                                    {\r\n                                        <i className=\"material-icons\">\r\n                                            send\r\n                                        </i>\r\n                                    }\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Card>\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n\r\n    handleSBClose() {\r\n        this.setState({\r\n            snackBarSuccess: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Card className={classes.root} elevation={10}>\r\n                    <Typography component=\"p\">\r\n                        You can use this to decorate your string with additional characters.\r\n                    </Typography>\r\n                    <TextField\r\n                        id=\"text\"\r\n                        label=\"Text\"\r\n                        className={classes.textField}\r\n                        value={this.state.text}\r\n                        onChange={(e) => this.handleChange(e, 'text')}\r\n                        margin=\"normal\"\r\n                        inputProps={{\r\n                            autoComplete: \"off\"\r\n                        }}\r\n                    />\r\n                </Card>\r\n                {this.renderDecorations()}\r\n                <Success\r\n                    open={this.state.snackBarSuccess}\r\n                    handleClose={this.handleSBClose}\r\n                    text=\"Copied to clipboard!\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Decorate);","import React, { Component } from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n/* myComponents */\r\nimport Convert from \"./Components/Convert\";\r\nimport Decorate from \"./Components/Decorate\";\r\n\r\nclass String extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            current: 0\r\n        }\r\n    }\r\n\r\n    handleChange(e, value) {\r\n        this.setState({\r\n            current: value\r\n        })\r\n    }\r\n\r\n    renderTabs() {\r\n        return (\r\n            <Paper square style={{ width: 500, marginLeft: \"auto\", marginRight: \"auto\", marginBottom:\"20px\" }}>\r\n                <Tabs\r\n                    value={this.state.current}\r\n                    onChange={this.handleChange}\r\n                    variant=\"fullWidth\"\r\n                    indicatorColor=\"secondary\"\r\n                    textColor=\"secondary\"\r\n                >\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">autorenew</i>\r\n                        }\r\n                        label=\"CONVERT\"\r\n                    />\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">text_format</i>\r\n                        }\r\n                        label=\"DECORATE\"\r\n                    />\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">text_fields</i>\r\n                        }\r\n                        label=\"STYLE\"\r\n                        disabled\r\n                    />\r\n                </Tabs>\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n    renderTabContent() {\r\n        switch(this.state.current) {\r\n            case 0: return <Convert/>;\r\n            case 1: return <Decorate/>;\r\n            default: return <Convert/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderTabs()}\r\n                {this.renderTabContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default String;","export function rnd_num(min, max) {\r\n    min = parseInt(min, 10);\r\n    max = parseInt(max, 10);\r\n    if (!(max > min)) return;\r\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n};\r\n\r\nexport function rnd_color() {\r\n    return \"rgb(\" + rnd_num(0, 255) + \", \" + rnd_num(0, 255) + \", \" + rnd_num(0, 255) + \")\";\r\n};\r\n\r\nexport default {\r\n    rnd_num,\r\n    rnd_color\r\n};","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showNumbers: {\r\n        width: \"auto\",\r\n        maxWidth: 700,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    textField1: {\r\n        width: \"145px\",\r\n        marginRight: \"10px\"\r\n    },\r\n    textField2: {\r\n        width: \"145px\",\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass RndNumber extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: {\r\n                NumberOfIntegers: 10,\r\n                Min: 1,\r\n                Max: 10,\r\n                NumberOfColumns: 3,\r\n                Highlight: 2,\r\n                NumbersToShow: [\r\n                    []\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateNumbers()\r\n    }\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    handleNumberChange(e, label) {\r\n        var value = e.target.value;\r\n        this.setState({\r\n            Number: {\r\n                ...this.state.Number,\r\n                [label]: value\r\n            }\r\n        }, () => {\r\n            if (label === \"Highlight\") return;\r\n            if (value === \"\") return;\r\n            this.generateNumbers()\r\n        });\r\n    }\r\n\r\n    showNumbers() {\r\n        const state = this.state.Number;\r\n\r\n        return state.NumbersToShow.map((arr, i) => {\r\n            return (\r\n                <Fragment key={i}>\r\n                    <p>\r\n                        {\r\n                            arr.map((num, index) => {\r\n                                return <span\r\n                                    key={index}\r\n                                    style={\r\n                                        num === parseInt(state.Highlight, 10)\r\n                                            ? { color: \"red\" }\r\n                                            : {}\r\n                                    }\r\n                                >\r\n                                    {\r\n                                        index === arr.length - 1\r\n                                            ? num\r\n                                            : num + \", \"\r\n                                    }\r\n                                </span>;\r\n                            })\r\n                        }\r\n                    </p>\r\n                    {\r\n                        i === state.NumbersToShow.length - 1\r\n                            ? null\r\n                            : <Divider />\r\n                    }\r\n                </Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n    generateNumbers() {\r\n        const state = this.state.Number;\r\n\r\n        if (!state.NumberOfColumns) return;\r\n\r\n        var rows = parseInt(state.NumberOfColumns, 10) >= parseInt(state.NumberOfIntegers, 10)\r\n            ? state.NumberOfIntegers\r\n            : state.NumberOfColumns\r\n\r\n        var mainArr = [];\r\n        for (let i = 0; i < rows; i++) {\r\n            mainArr.push([])\r\n        }\r\n\r\n        var current = 0;\r\n        for (let n = 0; n < state.NumberOfIntegers; n++) {\r\n            mainArr[current].push(rnd_num(this.state.Number.Min, this.state.Number.Max))\r\n            current++\r\n            if (current === mainArr.length) {\r\n                current = 0;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Number: {\r\n                ...this.state.Number,\r\n                NumbersToShow: [...mainArr]\r\n            }\r\n        })\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"RANDOMISE\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.generateNumbers()\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                        autorenew\r\n                    </i>\r\n                    RANDOMISE\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Card elevation={5} className={classes.content}>\r\n                    <TextField\r\n                        id=\"NumberOfIntegers\"\r\n                        defaultValue={this.state.Number.NumberOfIntegers}\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        label=\"Number of integers to generate\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"NumberOfIntegers\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"min\"\r\n                        defaultValue={this.state.Number.Min}\r\n                        className={classes.textField1}\r\n                        helperText=\"Minimum\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Min\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"max\"\r\n                        defaultValue={this.state.Number.Max}\r\n                        className={classes.textField2}\r\n                        helperText=\"Maximum\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Max\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"min\"\r\n                        defaultValue={this.state.Number.Highlight}\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Highlight\") }}\r\n                        className={classes.textField1}\r\n                        helperText=\"Highlight number\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                        id=\"max\"\r\n                        defaultValue={this.state.Number.NumberOfColumns}\r\n                        className={classes.textField2}\r\n                        helperText=\"Rows\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"NumberOfColumns\") }}\r\n                    />\r\n                </Card>\r\n                {this.renderArrowDown()}\r\n                <Card elevation={2} className={classes.showNumbers}>\r\n                    {this.showNumbers()}\r\n                </Card>\r\n                {this.renderFabButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RndNumber);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { rnd_color } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    propsDiv: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showColor: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        minHeight: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        transitionDuration: \"0.4s\",\r\n        cursor: \"pointer\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n});\r\n\r\nclass RndColor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.changeColor = this.changeColor.bind(this);\r\n\r\n        this.state = {\r\n            Color: rnd_color()\r\n        }\r\n    }\r\n\r\n    changeColor() {\r\n        this.setState({\r\n            Color: rnd_color()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"flip\"\r\n                    className={classes.button}\r\n                    onClick={() => this.changeColor()}\r\n                    color=\"secondary\"\r\n                >\r\n                    <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                        flip_to_front\r\n                    </i>\r\n                    New color\r\n        \t    </Fab>\r\n                <Card elevation={15} className={classes.showColor}>\r\n                    <div\r\n                        className={classes.showColor}\r\n                        style={{ backgroundColor: this.state.Color }}\r\n                        onClick={this.changeColor}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RndColor);","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    showCoin: {\r\n        borderRadius: \"100%\",\r\n        width: 300,\r\n        height: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"center\",\r\n        lineHeight: \"258px\",\r\n        transitionDuration: \"0.4s\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    progress: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    },\r\n});\r\n\r\nclass Coin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            Coin: {\r\n                Title: \"\",\r\n                progress: 0\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleFlip();\r\n    }\r\n    \r\n    progress = () => {\r\n        const { progress } = this.state.Coin;\r\n        this.setState({\r\n            Coin: {\r\n                ...this.state.Coin,\r\n                progress: progress + 1,\r\n                Title: \"\",\r\n            }\r\n        }, () => {\r\n            if (progress >= 100) {\r\n                clearInterval(this.timer);\r\n                this.setState({\r\n                    Coin: {\r\n                        ...this.state.Coin,\r\n                        Title: rnd_num(0, 1) === 0 ? \"TAILS\" : \"HEADS\",\r\n                        progress: 0\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    handleFlip() {\r\n        if (this.state.Coin.progress === 0) {\r\n            this.timer = setInterval(this.progress, 10);\r\n        } else {\r\n            clearInterval(this.timer);\r\n            this.setState({\r\n                Coin: {\r\n                    ...this.state.Coin,\r\n                    progress: 0\r\n                }\r\n            });\r\n            this.timer = setInterval(this.progress, 10);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return <Fragment>\r\n            <Fab\r\n                variant=\"extended\"\r\n                aria-label=\"flip\"\r\n                className={classes.button}\r\n                onClick={() => this.handleFlip()}\r\n                color=\"secondary\"\r\n            >\r\n                <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                    autorenew\r\n                </i>\r\n                Flip\r\n        \t</Fab>\r\n            <Card\r\n                elevation={15}\r\n                className={classes.showCoin}\r\n                color=\"primary\"\r\n                style={\r\n                    this.state.Coin.Title === \"HEADS\"\r\n                        ? { backgroundColor: \"black\", color: \"white\" }\r\n                        : { backgroundColor: \"white\", color: \"black\" }\r\n                }\r\n            >\r\n                {\r\n                    this.state.Coin.progress > 0\r\n                        ? <CircularProgress\r\n                            className={classes.progress}\r\n                            color=\"secondary\"\r\n                            variant=\"determinate\"\r\n                            size={60}\r\n                            value={this.state.Coin.progress}\r\n\r\n                        />\r\n                        : <h1>{this.state.Coin.Title}</h1>\r\n                }\r\n            </Card>\r\n        </Fragment>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Coin);","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n\r\n    diceSpan: {\r\n        margin: theme.spacing(2),\r\n        fontSize: \"32px\",\r\n        backgroundColor: \"black\",\r\n        color: \"white\"\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n    showDices: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    }\r\n});\r\n\r\nclass Dice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Dice: {\r\n                NumberOfDices: 6,\r\n                Dices: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateDices()\r\n    }\r\n\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fab\r\n                variant=\"extended\"\r\n                color=\"primary\"\r\n                className={classes.fab}\r\n                onClick={() => {\r\n                    this.generateDices()\r\n                }}>\r\n                <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                    border_outer\r\n                </i>\r\n                Roll\r\n            </Fab>\r\n        )\r\n    }\r\n\r\n    diceInner(dice) {\r\n        switch (dice) {\r\n            case 6: return \"https://png.icons8.com/material/50/000000/6.png\";\r\n            case 1: return \"https://png.icons8.com/material/50/000000/1.png\";\r\n            case 2: return \"https://png.icons8.com/material/50/000000/2.png\";\r\n            case 3: return \"https://png.icons8.com/material/50/000000/3.png\";\r\n            case 4: return \"https://png.icons8.com/material/50/000000/4.png\";\r\n            case 5: return \"https://png.icons8.com/material/50/000000/5.png\";\r\n            default: return;\r\n        }\r\n    }\r\n\r\n    generateDices() {\r\n        var arr = [];\r\n        for (let i = 0; i < this.state.Dice.NumberOfDices; i++) {\r\n            arr.push(rnd_num(1, 6));\r\n        }\r\n\r\n        this.setState({\r\n            Dice: {\r\n                ...this.state.Dice,\r\n                Dices: [...arr]\r\n            }\r\n        })\r\n    }\r\n\r\n    showDices() {\r\n        return this.state.Dice.Dices.map((dice, index) => {\r\n            return <img\r\n                alt=\"dice\"\r\n                className=\"diceSpan\"\r\n                src={this.diceInner(dice)}\r\n                key={index}\r\n            />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Card elevation={5} className={classes.content}>\r\n                    <TextField\r\n                        id=\"NumberOfDices\"\r\n                        defaultValue={this.state.Dice.NumberOfDices}\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        label=\"Number of dices to roll\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                Dice: {\r\n                                    ...this.state.Dice,\r\n                                    NumberOfDices: e.target.value\r\n                                }\r\n                            }, () => { this.generateDices() })\r\n                        }}\r\n                    />\r\n                </Card>\r\n                {this.renderArrowDown()}\r\n                <Card elevation={2} className={classes.showDices}>\r\n                    {this.showDices()}\r\n                </Card>\r\n                {this.renderFabButton()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Dice);","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport RndNumber from \"./Components/Rnd_number\";\r\nimport RndColor from './Components/Rnd_color';\r\nimport Coin from './Components/Coin';\r\nimport Dice from './Components/Dice';\r\n\r\nconst styles = theme => ({\r\n    menuCard: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\"\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    showCoin: {\r\n        borderRadius: \"100%\",\r\n        width: 300,\r\n        height: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"center\",\r\n        lineHeight: \"258px\",\r\n        transitionDuration: \"0.4s\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    progress: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    },\r\n\r\n    diceSpan: {\r\n        margin: theme.spacing(2),\r\n        fontSize: \"32px\",\r\n        backgroundColor: \"black\",\r\n        color: \"white\"\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n    showDices: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    }\r\n});\r\n\r\nclass Randomiser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleMenuClick = this.handleMenuClick.bind(this);\r\n\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            current: 0,\r\n        }\r\n    }\r\n\r\n    handleMenuClick(ID) {\r\n        this.setState({\r\n            current: ID\r\n        });\r\n    }\r\n\r\n    renderContent() {\r\n        switch (this.state.current) {\r\n            case 0: return <RndNumber />;\r\n            case 1: return <RndColor />;\r\n            case 2: return <Coin />;\r\n            case 3: return <Dice />;\r\n            default: return <RndNumber />;\r\n        }\r\n    }\r\n\r\n    renderChips() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.menuCard}>\r\n                    <Chip\r\n                        avatar={<Avatar>NU</Avatar>}\r\n                        label=\"Numbers\"\r\n                        color=\"primary\"\r\n                        variant={this.state.current === 0 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(0)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>CO</Avatar>}\r\n                        label=\"Color\"\r\n                        color=\"secondary\"\r\n                        variant={this.state.current === 1 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(1)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>CF</Avatar>}\r\n                        label=\"Coin flipper\"\r\n                        variant={this.state.current === 2 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(2)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>DR</Avatar>}\r\n                        label=\"Dice roller\"\r\n                        variant={this.state.current === 3 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(3)}\r\n                        className={classes.chip}\r\n                    />\r\n                </div>\r\n                {this.renderContent()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderChips()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRandomiser.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Randomiser);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    display: 'flex',\r\n    width: '300px',\r\n    margin: '10px',\r\n  },\r\n  avatar: {\r\n    width: 25,\r\n    height: 25,\r\n    marginRight: 4,\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    lineHeight: '25px',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 48,\r\n    width: 48,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  editIcon: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  deleteIcon: {\r\n    color: '',\r\n  },\r\n});\r\n\r\nfunction MediaControlCard(props) {\r\n  const { classes, theme } = props;\r\n\r\n  return (\r\n    <Card className={classes.card} elevation={10}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            style={{ backgroundColor: props.quiz.Color }}\r\n          >\r\n            {\r\n              props.quiz.Name[0]\r\n            }\r\n          </Avatar>\r\n          <h5 style={{ display: 'inline-block' }}>\r\n            {props.quiz.Name.slice(1)}\r\n          </h5>\r\n          <p variant=\"subtitle1\" color=\"textSecondary\">\r\n            {props.quiz.ShortDescription}\r\n          </p>\r\n        </CardContent>\r\n        <div className={classes.controls}>\r\n          <IconButton aria-label=\"Play\" onClick={() => {props.onPlay(props.quiz.ID)}}>\r\n            <PlayArrowIcon className={classes.playIcon} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Edit\">\r\n            <EditIcon className={classes.editIcon} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Delete\" onClick={() => props.onDelete(props.quiz.ID)}>\r\n            <DeleteIcon className={classes.deleteIcon} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMediaControlCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MediaControlCard);","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nclass Error extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.props.open}\r\n                autoHideDuration={this.props.autoHideDuration ? this.props.autoHideDuration : 3000}\r\n                onClose={this.props.handleClose}\r\n            >\r\n                <SnackbarContent\r\n                    className={classNames(classes.error)}\r\n                    aria-describedby=\"client-snackbar\"\r\n                    message={\r\n                        <span id=\"client-snackbar\" className={classes.message}>\r\n                            <i className={classNames(classes.icon, classes.iconVariant, \"material-icons\")}>\r\n                            error_outline\r\n                            </i>\r\n                            {this.props.text.length ? this.props.text : \"Wrong\"}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.props.handleClose}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                close\r\n                            </i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Error);","import React, { Component, Fragment } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass Summary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.showSummary}\r\n                onClose={this.props.handleSummaryClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">{\"Summary of -\" + this.props.QuizName + \"-\"}</DialogTitle>\r\n                <Divider variant=\"middle\" />\r\n                {\r\n                    this.props.results.map((r, index) => {\r\n                        return (\r\n                            <Fragment key={index}>\r\n                                <div style={{ padding: 12 }}>\r\n                                    <p style={{ display: 'inline' }}>\r\n                                        <b>\r\n                                            {\r\n                                                `#${index + 1}: ${r.QuestionText}`\r\n                                            }\r\n                                        </b>\r\n                                    </p>\r\n                                    <i\r\n                                        className=\"material-icons\"\r\n                                        style={\r\n                                            { \r\n                                                display: 'inline',\r\n                                                color: r.isCorrect ? 'green' : 'red',\r\n                                                marginLeft: 3\r\n                                         }\r\n                                        }>\r\n                                        {r.isCorrect ? 'done_all' : 'close'}\r\n                                    </i>\r\n                                    <p>Your answer: {r.UserAnswer}</p>\r\n                                    {\r\n                                        !r.isCorrect\r\n                                            ? <p>Correct answer: {r.CorrectAnswer}</p>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n\r\n                                <Divider variant=\"middle\" />\r\n                            </Fragment>\r\n                        )\r\n                    })\r\n                }\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={this.props.handleSummaryClose}\r\n                >\r\n                    Back to menu\r\n                </Button>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Summary);","export function delete_quiz(data) {\r\n    return {\r\n        type: 'DELETE_QUIZ',\r\n        data\r\n    };\r\n};\r\n\r\nexport function new_quiz(data) {\r\n    return {\r\n        type: 'NEW_QUIZ',\r\n        data\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showNumbers: {\r\n        width: \"auto\",\r\n        maxWidth: 700,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    },\r\n    textField1: {\r\n        width: \"145px\",\r\n        marginRight: \"10px\"\r\n    },\r\n    textField2: {\r\n        width: \"145px\",\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass EditQuiz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Quiz: {\r\n                ID: 0,\r\n                Name: '',\r\n                ShortDescription: '',\r\n                Color: '#000',\r\n                Tags: [],\r\n                Questions: [\r\n                    {\r\n                        ID: 0,\r\n                        Text: '',\r\n                        Answers: [\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: true\r\n                            },\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            CurrentID: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const ID = _.uniqueId();\r\n\r\n        this.setState({\r\n            Quiz: {\r\n                ID: _.uniqueId(),\r\n                Name: '',\r\n                ShortDescription: '',\r\n                Color: '#000',\r\n                Tags: [],\r\n                Questions: [\r\n                    {\r\n                        ID,\r\n                        Text: '',\r\n                        Answers: [\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: true\r\n                            },\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            CurrentID: ID,\r\n        })\r\n    }\r\n    \r\n\r\n    handleQuestionChange({ target: { value } }, ID) {\r\n        this.setState({\r\n            Quiz: {\r\n                ...this.state.Quiz,\r\n                Questions: [\r\n                    ...this.state.Quiz.Questions.map((Q) => {\r\n                        if(Q.ID !== ID) return Q;\r\n                        return {\r\n                            ...Q,\r\n                            Text: value\r\n                        }\r\n                    })\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    handleAnswerChange({ target: { value } }, index) {\r\n        const ID = this.state.CurrentID;\r\n\r\n        this.setState({\r\n            Quiz: {\r\n                ...this.state.Quiz,\r\n                Questions: [\r\n                    ...this.state.Quiz.Questions.map((Q) => {\r\n                        if(Q.ID !== ID) return Q;\r\n                        return {\r\n                            ...Q,\r\n                            Answers: [\r\n                                ..._.find(this.state.Quiz.Questions, {ID}).Answers.map((A, i) => {\r\n                                    if(i !== index) return A;\r\n                                    return {\r\n                                        ...A,\r\n                                        Text: value\r\n                                    }\r\n                                })\r\n                            ]\r\n                        }\r\n                    })\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    renderFields() {\r\n        const { classes } = this.props;\r\n        const { Questions } = this.state.Quiz;\r\n        const { CurrentID } = this.state;\r\n        const CurrentQuestion = _.find(Questions, { ID: CurrentID });\r\n        const { Answers } = CurrentQuestion;\r\n\r\n\r\n        return (\r\n            <Card elevation={5} className={classes.content}>\r\n                <TextField\r\n                    defaultValue={CurrentQuestion.Text}\r\n                    className={classes.textField}\r\n                    fullWidth\r\n                    label=\"Question\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleQuestionChange(e, CurrentID) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[0].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"First answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 0) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[1].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Second answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 1) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[2].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Third answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 2) }}\r\n                />\r\n                <TextField\r\n                    id=\"min\"\r\n                    defaultValue={Answers[3].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Fourth answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 3) }}\r\n                />\r\n\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderFields()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(EditQuiz);","import React, { Component, Fragment } from 'react'\r\nimport QuizTile from './QuizTile';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nimport Success from '../../Components/SnackBars/SnackSuccess';\r\nimport Error from '../../Components/SnackBars/SnackError';\r\nimport Summary from './Summary';\r\n\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as QuizActions from \"../../Actions/QuizActions\";\r\n\r\nimport EditQuiz from './EditQuiz';\r\n\r\nconst MainActions = {\r\n    ...QuizActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        maxWidth: '50%',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        marginBottom: 50,\r\n    },\r\n    Answers: {\r\n        cursor: 'pointer',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass Quizes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPage: \"start\", // Think about it\r\n            toEdit: {},\r\n            toPlay: {},\r\n            shuffledQuestions: [],\r\n            nextQuestion: 0,\r\n            isFinished: false,\r\n            answerResults: [],\r\n            showSnackbar: false,\r\n            showDeleteSnackbar: false,\r\n            snackMessage: '',\r\n            snackType: '',\r\n            showSummary: false,\r\n            lastDeletedQuiz: {}\r\n        }\r\n\r\n        const { delete_quiz, new_quiz } = this.props;\r\n        this.delete_quiz = delete_quiz;\r\n        this.new_quiz = new_quiz;\r\n\r\n        this.handlePlay = this.handlePlay.bind(this);\r\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n        this.handleSummaryClose = this.handleSummaryClose.bind(this);\r\n        this.handleDeleteQuiz = this.handleDeleteQuiz.bind(this);\r\n        this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n        //this.handleAnswer = this.handleAnswer.bind(this);\r\n    }\r\n\r\n    handleSummaryClose() {\r\n        this.setState({\r\n            showSummary: false,\r\n            toPlay: {},\r\n            shuffledQuestions: [],\r\n            nextQuestion: 0,\r\n            isFinished: true,\r\n            answerResults: [],\r\n        })\r\n    }\r\n\r\n    handleSnackbarClose() {\r\n        this.setState({\r\n            showSnackbar: false,\r\n            showDeleteSnackbar: false\r\n        })\r\n    }\r\n\r\n    getNextQuestion() {\r\n        return this.state.shuffledQuestions[this.state.nextQuestion];\r\n    }\r\n\r\n    returnShuffledQuiz(QuestionsArray) {\r\n        return _.shuffle(QuestionsArray.map((Question) => {\r\n            return {\r\n                ...Question,\r\n                Answers: _.shuffle(Question.Answers)\r\n            }\r\n        }))\r\n    }\r\n\r\n    handleDeleteQuiz(ID) {\r\n        this.delete_quiz({ ID });\r\n\r\n        this.setState({\r\n            lastDeletedQuiz: _.find(this.props.Quizes, {ID}),\r\n            showDeleteSnackbar: true,\r\n        })\r\n    }\r\n\r\n    handleUndoDelete() {\r\n        this.new_quiz(this.state.lastDeletedQuiz);\r\n\r\n        this.setState({\r\n            showDeleteSnackbar: false,\r\n        })\r\n    }\r\n\r\n    handlePlay(ID) {\r\n        const obj = _.find(this.props.Quizes, { ID: ID })\r\n\r\n        this.setState({\r\n            currentPage: \"QuizPlay\", // Think about it\r\n            toPlay: obj,\r\n            shuffledQuestions: this.returnShuffledQuiz(obj.Questions), // We randomise order of questions and answers\r\n            nextQuestion: 0,\r\n            isFinished: false,\r\n            answerResults: [],\r\n        })\r\n    }\r\n\r\n    renderDefaultQuizes() {\r\n        if (!this.props.Quizes || !this.props.Quizes.length) return null;\r\n\r\n        return (\r\n            <Grid container justify=\"center\" spacing={10}>\r\n                {\r\n                    this.props.Quizes.map((item) => {\r\n                        return (\r\n                            <Grid key={item.ID} item>\r\n                                <QuizTile\r\n                                    quiz={{ ...item }}\r\n                                    onPlay={this.handlePlay}\r\n                                    onDelete={this.handleDeleteQuiz}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    handleAnswer(Ans) {\r\n        this.setState({\r\n            showSnackbar: true,\r\n            answerResults: [\r\n                ...this.state.answerResults,\r\n                {\r\n                    QuestionText: this.state.shuffledQuestions[this.state.nextQuestion].Text,\r\n                    UserAnswer: Ans.Text,\r\n                    CorrectAnswer: _.find(this.state.shuffledQuestions[this.state.nextQuestion].Answers, { Correct: true }).Text,\r\n                    isCorrect: Ans.Correct,\r\n                }\r\n            ],\r\n            snackMessage: Ans.Correct ? 'Correct!' : 'Not correct!',\r\n            snackType: Ans.Correct ? 'Success' : 'Error'\r\n        }, () => {\r\n            if (this.state.nextQuestion + 2 > this.state.shuffledQuestions.length) {\r\n                this.setState({\r\n                    isFinished: true,\r\n                    showSummary: true,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    nextQuestion: this.state.nextQuestion + 1,\r\n\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    renderPage() {\r\n        const { classes } = this.props;\r\n\r\n        if(this.state.newQuiz) return <EditQuiz />;\r\n\r\n        if (!this.state.toPlay.ID) {\r\n            return (\r\n                <div style={{ width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                    {this.renderDefaultQuizes()}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const Q = this.getNextQuestion();\r\n        return (\r\n            <Fragment>\r\n                <Paper className={classes.root} elevation={5}>\r\n                    <h2>{Q.Text}</h2>\r\n                </Paper>\r\n                <Grid container justify=\"center\" spacing={10}>\r\n                    {\r\n                        Q.Answers.map((Ans, index) => {\r\n                            return (\r\n                                <Grid key={index} item>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className={classes.Answers}\r\n                                        onClick={() => this.handleAnswer(Ans)}\r\n                                    >\r\n                                        {\r\n                                            Ans.Text\r\n                                        }\r\n                                    </Button>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n\r\n    }\r\n\r\n    renderSnackBar() {\r\n        //const { classes } = this.props;\r\n\r\n        return this.state.snackType === \"Success\"\r\n            ? <Success\r\n                open={this.state.showSnackbar}\r\n                handleClose={this.handleSnackbarClose}\r\n                text={this.state.snackMessage}\r\n                autoHideDuration={1500}\r\n            />\r\n            : <Error\r\n                open={this.state.showSnackbar}\r\n                handleClose={this.handleSnackbarClose}\r\n                text={this.state.snackMessage}\r\n                autoHideDuration={1500}\r\n            />\r\n    }\r\n\r\n    renderUndoDeleteSnackbar() {\r\n        const { classes } = this.props; \r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.state.showDeleteSnackbar}\r\n                autoHideDuration={6000}\r\n                onClose={this.handleSnackbarClose}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">Quiz deleted</span>}\r\n                action={[\r\n                    <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n                        UNDO\r\n                    </Button>,\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={classes.close}\r\n                        onClick={this.handleSnackbarClose}\r\n                    >\r\n                        <i className=\"material-icons\">close</i>\r\n                    </IconButton>,\r\n                ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderSummary() {\r\n        if (!this.state.isFinished) return null;\r\n\r\n        return <Summary\r\n            showSummary={this.state.showSummary}\r\n            handleSummaryClose={this.handleSummaryClose}\r\n            QuizName={this.state.toPlay.Name}\r\n            results={this.state.answerResults}\r\n        />\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new QUIZ\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            newQuiz: true\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{marginRight: \"10px\"}}>add_circle</i>\r\n                    New Quiz\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderPage()}\r\n                {this.renderSnackBar()}\r\n                {this.renderSummary()}\r\n                {this.renderUndoDeleteSnackbar()}\r\n                {this.renderFabButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Quizes } = state;\r\n\r\n        return {\r\n            Quizes,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Quizes);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 275,\r\n        maxWidth: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nconst Facts = (props) => {\r\n    const classes = useStyles();\r\n    const [fact, setFact] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch('http://numbersapi.com/random/year')\r\n            .then((response) => response.text())\r\n            .then(data => {\r\n                setFact(data)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    {fact}\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(state => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Facts);","import React, { Component } from 'react';\r\nimport WelcomePage from \"./HomePage/WelcomePage\";\r\nimport Calculator from \"./Calculator\";\r\n//import ToDo from \"./ToDo\";\r\nimport UserPage from \"./UserPage\";\r\nimport Time from \"./Time\";\r\nimport Arrays from \"./Arrays\";\r\nimport Uno from \"./Uno\";\r\nimport ToDo from './ToDo';\r\nimport Notes from './Notes';\r\nimport Counters from './Counters';\r\nimport String from './String';\r\nimport Randomiser from './Randomiser';\r\nimport Quizes from './Quizes';\r\nimport Facts from './Facts';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as GeneralActions from \".././Actions/GeneralActions\";\r\n\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n}\r\n\r\nclass RenderPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { page_change } = this.props\r\n        this.page_change = page_change\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.General.currentPage) {\r\n            case (\"WelcomePage\"):\r\n                return (<WelcomePage />);\r\n            case (\"UserPage\"):\r\n                return (<UserPage />);\r\n            case (\"Calculator\"):\r\n                return (<Calculator />);\r\n            case (\"ToDo\"):\r\n                return (<ToDo />);\r\n            case (\"Time\"):\r\n                return (<Time />);\r\n            case (\"Arrays\"):\r\n                return (<Arrays />);\r\n            case (\"Facts\"):\r\n                return (<Facts />);\r\n            case (\"Uno\"):\r\n                return (<Uno />);\r\n            case (\"Notes\"):\r\n                return (<Notes />);\r\n            case (\"Counters\"):\r\n                return (<Counters />);\r\n            case (\"String\"):\r\n                return (<String />);\r\n            case (\"Randomiser\"):\r\n                return (<Randomiser />);\r\n            case (\"Quizes\"):\r\n                return (<Quizes />);\r\n            default:\r\n                return (<WelcomePage />);\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(state => {\r\n    const { General } = state;\r\n\r\n    return {\r\n        General,\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(RenderPage);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Others\r\nimport ExtendedHeader from '.././Others/Header';\r\nimport Profilna from \"../Pictures/avatar.jpg\";\r\n// Pages\r\nimport RenderPage from \".././Content/index\";\r\n\r\nimport * as GeneralActions from \".././Actions/GeneralActions\";\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        zIndex: 4,\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        display: 'flex',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        position: 'flex',\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        dislay: \"block\",\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        minHeight: \"100vh\",\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n    },\r\n    Title: {\r\n        cursor: 'pointer',\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        cursor: \"pointer\",\r\n    },\r\n    bigAvatar: {\r\n        width: 60,\r\n        height: 60,\r\n    },\r\n});\r\n\r\nclass Shell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { page_change, toggle_drawer, toggle_header } = this.props;\r\n        this.page_change = page_change;\r\n        this.toggle_drawer = toggle_drawer;\r\n        this.toggle_header = toggle_header;\r\n    }\r\n\r\n    renderIcon(theme) {\r\n        return (\r\n            <i className=\"material-icons\">\r\n                {theme.direction === 'rtl' ? \"keyboard_arrow_right\" : \"keyboard_arrow_left\"}\r\n            </i>\r\n        )\r\n    }\r\n\r\n    renderMenuItem(page_change, icon, text) {\r\n        return (\r\n            <ListItem\r\n                onClick={() => {\r\n                    this.page_change(page_change)\r\n                }}\r\n                button\r\n            >\r\n                <ListItemIcon>\r\n                    <i className=\"material-icons\">\r\n                        {icon}\r\n                    </i>\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n            </ListItem>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes, theme } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar\r\n                    position=\"absolute\"\r\n                    className={classNames(classes.appBar, this.props.General.isDrawerOpen && classes.appBarShift)}\r\n                >\r\n                    <Toolbar disableGutters={!this.props.General.isDrawerOpen}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"Open drawer\"\r\n                            onClick={() => this.toggle_drawer()}\r\n                            className={classNames(classes.menuButton, this.props.General.isDrawerOpen && classes.hide)}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                menu\r\n                            </i>\r\n                        </IconButton>\r\n\r\n                        <Typography className={classNames(classes.Title, classes.grow)} onClick={() => this.toggle_header()} variant=\"h5\" color=\"inherit\" noWrap>\r\n                            Project // NEON /\r\n                        </Typography>\r\n                        <IconButton onClick={() => this.toggle_header()}>\r\n                            {\r\n                                <i className=\"material-icons\" style={{ color: \"rgb(255, 255, 255)\" }}>\r\n                                    {\r\n                                        this.props.General.isHeaderOpen\r\n                                            ? \"keyboard_arrow_up\"\r\n                                            : \"keyboard_arrow_down\"\r\n                                    }\r\n                                </i>\r\n                            }\r\n                        </IconButton>\r\n\r\n                        <Avatar\r\n                            className={classes.avatar}\r\n                            onClick={() => {\r\n                                window.open('https://mikacinc.github.io/Portfolio/', '_blank');\r\n                            }}\r\n                        >\r\n                            <img\r\n                                alt=\"Mihajlo Marjanović\"\r\n                                src={Profilna}\r\n                            />\r\n                        </Avatar>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classNames(classes.drawerPaper, !this.props.General.isDrawerOpen && classes.drawerPaperClose),\r\n                    }}\r\n                    open={this.props.General.isDrawerOpen}\r\n                >\r\n                    <div className={classes.toolbar}>\r\n                        <IconButton onClick={() => this.toggle_drawer()}>\r\n                            {this.renderIcon(theme)}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <MenuList>\r\n                        {\r\n                            this.renderMenuItem(\"WelcomePage\", \"home\", \"Home\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"UserPage\", \"settings\", \"Settings\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"ToDo\", \"done_all\", \"To-Do list\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Notes\", \"notes\", \"Notes\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Counters\", \"add_circle_outline\", \"Counters\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Time\", \"access_time\", \"Time\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Calculator\", \"dialpad\", \"Calculator\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"String\", \"message\", \"String\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Randomiser\", \"gesture\", \"Randomiser\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Arrays\", \"linear_scale\", \"Arrays\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Facts\", \"filter_none\", \"Fun Facts\")\r\n                        }\r\n                        {\r\n                            //this.renderMenuItem(\"Uno\", \"sim_card\", \"Uno\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Games\", \"videogame_asset\", \"Games\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Quizes\", \"widgets\", \"Quizes\")\r\n                        }\r\n                    </MenuList>\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    {this.props.General.isHeaderOpen ? <ExtendedHeader /> : null}\r\n                    <br />\r\n                    <Zoom in={true} style={{ transitionDelay: 100 }}>\r\n                        <RenderPage />\r\n                    </Zoom>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nShell.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    connect(state => {\r\n        const { General } = state;\r\n\r\n        return {\r\n            General,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Shell);","import React, { Component } from 'react';\r\nimport './App.css';\r\n// Material UI\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\n//import RaisedButton from 'material-ui/RaisedButton';\r\n//import Avatar from 'material-ui/Avatar';\r\n// Dark theme\r\n/*\r\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\r\nimport darkBaseTheme from 'material-ui/styles/baseThemes/darkBaseTheme';\r\n*/\r\n// Shell\r\nimport Shell from './Shell/Shell'\r\n\r\nimport purple from '@material-ui/core/colors/purple';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    // primary: {\r\n    //   main: '#00ff00',\r\n    // },\r\n    // secondary: {\r\n    //   main: '#f44336',\r\n    // },\r\n    primary: purple,\r\n    secondary: {\r\n      main: '#f44336',\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Shell />\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","var General = {\r\n    currentPage: \"WelcomePage\",\r\n    isDrawerOpen: false,\r\n    isHeaderOpen: false,\r\n}\r\n\r\nexport default General;","import initialState from \"../.././Data/General\";\r\n\r\nfunction General(state, action) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState\r\n  }\r\n  switch (action.type) {\r\n    case \"PAGE_CHANGE\":\r\n      return {\r\n        ...state,\r\n        currentPage: action.page\r\n      }\r\n    case \"TOGGLE_HEADER\":\r\n      return {\r\n        ...state,\r\n        isHeaderOpen: !state.isHeaderOpen\r\n      }\r\n    case \"TOGGLE_DRAWER\":\r\n      return {\r\n        ...state,\r\n        isDrawerOpen: !state.isDrawerOpen\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default General;","import initialState from \"../.././Data/User\";\r\n\r\nfunction User(state, action) {\r\n    if (typeof state === 'undefined') {\r\n        return initialState\r\n    }\r\n    switch (action.type) {\r\n        case \"NAME_CHANGE\":\r\n            return {\r\n                ...state,\r\n                name: action.name\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default User;","/*\r\nimport slika from \".././Pictures/Uno_cards/blue_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/red_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/green_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/yellow_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/wild_color_changer.png\";\r\nimport slika from \".././Pictures/Uno_cards/wild_pick_four.png\";\r\n*/\r\n\r\n//import karte from \".././Pictures/Uno_cards\";\r\n\r\n//console.log(karte)\r\n\r\nvar Uno = [\r\n    {\r\n        ID: 1,\r\n        Src: \"\",\r\n        Color: \"blue\",\r\n        Number: 0,\r\n    },\r\n    {\r\n        ID: 2,\r\n        Src: \"\",\r\n        Color: \"green\",\r\n        Number: 1,\r\n    },\r\n    {\r\n        ID: 3,\r\n        Src: \"\",\r\n        Color: \"yellow\",\r\n        Number: 2,\r\n    },\r\n];\r\n\r\nexport default Uno;","import initialState from \"../.././Data/Uno\";\r\n\r\nfunction Uno(state, action) {\r\n    if (typeof state === 'undefined') {\r\n        return initialState;\r\n    }\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default Uno;","var ToDoLists = [\r\n    {\r\n        ID: 1,\r\n        ListName: \"Kupovina\",\r\n        Archived: false,\r\n        Todos: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Hleb\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 2\r\n            },\r\n            {\r\n                ID: 11,\r\n                Text: \"Mleko\",\r\n                Completed: true,\r\n                Notes: \"Kupio ili ne?\",\r\n                Importance: 3\r\n            },\r\n            {\r\n                ID: 12,\r\n                Text: \"Sir\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 1\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        ID: 2,\r\n        ListName: \"Muzika\",\r\n        Archived: false,\r\n        Todos: [\r\n            {\r\n                ID: 44,\r\n                Text: \"LSD-Genius\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 1\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default ToDoLists;","import initialState from '../../Data/ToDo';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction ToDoReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n\r\n        case 'NEW_TASK': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty(\"ID\") && data.hasOwnProperty(\"Task\")) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            Todos: [\r\n                                ...item.Todos, {\r\n                                    ...data.Task\r\n                                }\r\n                            ]\r\n                        }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'NEW_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DELETE_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'EDIT_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {...item};\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case \"DELETE_TASK\": {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID') && data.hasOwnProperty('Task')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            Todos: item.Todos.filter((Todo) => {\r\n                                if (Todo.ID !== data.Task.ID) {\r\n                                    return true;\r\n                                }\r\n                                return false;\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case \"EDIT_TASK\": {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty(\"ID\") && data.hasOwnProperty(\"Task\")) {\r\n                return deepFreeze(state.map((list) => {\r\n                    if (list.ID === data.ID) {\r\n                        return {\r\n                            ...list,\r\n                            Todos: list.Todos.map((task) => {\r\n                                if (task.ID === data.Task.ID) {\r\n                                    return {\r\n                                        ...task,\r\n                                        ...data.Task\r\n                                    }\r\n                                } else {\r\n                                    return task\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return list\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ToDoReducer;","var Counters = [\r\n    {\r\n        ID: 1,\r\n        Title: \"Ključevi\",\r\n        Value: 3,\r\n        Date: new Date(),\r\n        Color: \"#000000\",\r\n        Goal: 6\r\n    },\r\n    {\r\n        ID: 2,\r\n        Title: \"Izgovorenih reči\",\r\n        Value: 23,\r\n        Date: new Date(),\r\n        Color: \"#4a148c\",\r\n        Goal: 50\r\n    },\r\n    {\r\n        ID: 3,\r\n        Title: \"Krugova\",\r\n        Value: 8,\r\n        Date: new Date(),\r\n        Color: \"#ff3d00\",\r\n        Goal: 120\r\n    },\r\n];\r\n\r\nexport default Counters;","import initialState from '../../Data/Counters';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction CountersReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n        case 'NEW_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'EDIT_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {\r\n                        ...item\r\n                    };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DELETE_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'INCREASE': {\r\n            const { data } = action;\r\n\r\n            if (data === 0 || !isNaN(data)) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data) {\r\n                        return {\r\n                            ...item,\r\n                            Value: item.Value + 1\r\n                        };\r\n                    }\r\n                    return { ...item };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DECREASE': {\r\n            const { data } = action;\r\n\r\n            if (data === 0 || !isNaN(data)) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data) {\r\n                        return {\r\n                            ...item,\r\n                            Value: item.Value - 1\r\n                        };\r\n                    }\r\n                    return { ...item };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default CountersReducer;","var Notes = [\r\n    {\r\n        ID: 1,\r\n        Title: \"Kampovanje\",\r\n        Content: \"1\",\r\n        Color: \"#0d47a1\",\r\n        Date: new Date(),\r\n    },\r\n    {\r\n        ID: 2,\r\n        Title: \"Orovi\",\r\n        Content: \"2\",\r\n        Color: \"#4e342e\",\r\n        Date: new Date(),\r\n    },\r\n    {\r\n        ID: 3,\r\n        Title: \"Vrh planine\",\r\n        Content: \"3\",\r\n        Color: \"#4a148c\",\r\n        Date: new Date(),\r\n    },\r\n]\r\n\r\nexport default Notes;","import initialState from '../../Data/Notes';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction CountersReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n\r\n        case 'NEW_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        case 'EDIT_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {\r\n                        ...item\r\n                    };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        case 'DELETE_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default CountersReducer;","const DefaultQuizes = [\r\n    {\r\n        ID: 1,\r\n        Name: \"Glavni gradovi\",\r\n        ShortDescription: \"Da li znaš koji je glavni grad koje države?\",\r\n        Color: \"#000\",\r\n        Tags: [],\r\n        Questions: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Srbija\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Abu Dabi\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Sofija\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Beograd\",\r\n                        Correct: true\r\n                    },\r\n                    {\r\n                        Text: \"Berlin\",\r\n                        Correct: false\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                ID: 2,\r\n                Text: \"Mađarska\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Vašington\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Berlin\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Tirana\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Budimpešta\",\r\n                        Correct: true\r\n                    },\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        ID: 2,\r\n        Name: \"Građa ćelije\",\r\n        ShortDescription: \"Šta je ćelija i od čega se sastoji?\",\r\n        Color: \"#0f0\",\r\n        Tags: [],\r\n        Questions: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Koju ulogu imaju mitohondrije u ćeliji?\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Prenos signala\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Deoba\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Komunikacija sa drugim ćelijama\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Ćelijsko disanje\",\r\n                        Correct: true\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n]\r\n\r\nexport default DefaultQuizes;","import initialState from \"../.././Data/Quizes\";\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction Quizes(state, action) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState\r\n  }\r\n  switch (action.type) {\r\n    case \"qqq\":\r\n      return {};\r\n    case 'DELETE_QUIZ': {\r\n      const { data } = action;\r\n\r\n      if (data && data.hasOwnProperty('ID')) {\r\n        return deepFreeze(state.filter((item) => {\r\n          if (item.ID !== data.ID) {\r\n            return true;\r\n          }\r\n          return false;\r\n        }));\r\n      }\r\n\r\n      return state;\r\n    }\r\n    case 'NEW_QUIZ': {\r\n      const { data } = action;\r\n\r\n      if (data) {\r\n          return [\r\n              ...state,\r\n              {\r\n                  ...data\r\n              }\r\n          ];\r\n      }\r\n\r\n      return state;\r\n  }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default Quizes;","import {combineReducers} from \"redux\";\r\nimport General from \"./GeneralReducer\";\r\nimport User from \"./UserReducer\";\r\nimport Uno from \"./UnoReducer\";\r\nimport Todo from \"./ToDoReducer\";\r\nimport Counters from \"./CountersReducer\";\r\nimport Notes from \"./NotesReducer\";\r\nimport Quizes from \"./QuizesReducer\";\r\n\r\nexport default combineReducers({\r\n    General,\r\n    User,\r\n    Uno,\r\n    Todo,\r\n    Counters,\r\n    Notes,\r\n    Quizes,\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n// Reducer\r\nimport reducer from \"./Reducers/index\";\r\n// redux\r\nimport { createStore } from 'redux'\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(reducer)\r\n\r\n//console.log(store.getState())\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}