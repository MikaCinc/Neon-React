{"version":3,"sources":["logo.svg","Pictures/avatar.jpg","Others/Header.js","Actions/GeneralActions/index.js","Content/HomePage/WelcomePage.js","Content/Calculator/index.js","Actions/UserActions/index.js","Content/UserPage/index.js","Content/Time/Components/StopWatch.js","Components/SnackBars/SnackSuccess.js","Content/Time/Components/Countdown.js","Content/Time/index.js","Content/Arrays/index.js","Content/Uno/Card.js","Content/Uno/index.js","Content/ToDo/Components/Lists.js","Actions/ToDoActions/index.js","Content/ToDo/Components/TaskView.js","Content/ToDo/Components/CurrentList.js","Content/ToDo/Components/ListEdit.js","Data/User.js","Content/ToDo/index.js","Components/TextEditor.js","Data/Settings/darkPickerColors.js","Actions/NotesActions/index.js","Content/Notes/NotesView.js","Actions/CountersActions/index.js","Content/Notes/index.js","Content/Counters/CounterView.js","Content/Counters/index.js","Content/String/Components/Convert.js","Content/String/Components/Decorate.js","Content/String/index.js","lib/Common/index.js","Content/Randomiser/Components/Rnd_number.js","Content/Randomiser/Components/Rnd_color.js","Content/Randomiser/Components/Coin.js","Content/Randomiser/Components/Dice.js","Content/Randomiser/index.js","Content/Quizes/QuizTile.js","Components/SnackBars/SnackError.js","Content/Quizes/Summary.js","Actions/QuizActions/index.js","Content/Quizes/EditQuiz.js","Content/Quizes/index.js","Content/Facts/index.js","Content/Games/index.js","Content/index.js","Shell/Shell.js","App.js","registerServiceWorker.js","Data/General.js","Reducers/GeneralReducer/index.js","Reducers/UserReducer/index.js","Data/Uno.js","Reducers/UnoReducer/index.js","Data/ToDo.js","Reducers/ToDoReducer/index.js","Data/Counters.js","Reducers/CountersReducer/index.js","Data/Notes.js","Reducers/NotesReducer/index.js","Data/Quizes.js","Reducers/QuizesReducer/index.js","Reducers/index.js","index.js"],"names":["module","exports","ExtendedHeader","Paper","style","width","marginTop","marginBottom","textAlign","display","elevation","className","src","logo","alt","Component","page_change","page","type","toggle_header","toggle_drawer","togge_theme","theme","change_theme_property","prop","value","MainActions","GeneralActions","useStyles","makeStyles","card","minWidth","maxWidth","marginLeft","marginRight","title","margin","bullet","transform","cardTitle","fontSize","pos","button","actions","connect","state","User","General","dispatch","bindActionCreators","props","themeType","palette","classes","useState","fact","setFact","moment","format","currentTime","setCurrentTime","useEffect","url","fetch","mode","then","response","text","data","timeInt","setInterval","clearInterval","FluentRevealEffect","applyEffect","clickEffect","lightColor","gradientSize","isContainer","children","borderSelector","elementSelector","Typography","variant","color","name","CardContent","gutterBottom","CardActions","Button","size","onClick","FormControlLabel","control","Switch","checked","onChange","switch","label","Calculator","fN","operation","sN","first","this","fNum","parseInt","sNum","setState","num","toString","paperStyle","TextField","placeholder","autoFocus","inputStyle","onInput","event","target","IconButton","iconButtons","substring","length","clearAll","operationsDiv","height","borderRadius","operationsButtons","Table","numbersDiv","TableBody","TableRow","TableCell","flatButton","addNum","disabled","Fab","actionButton","result","withStyles","backgroundColor","secondary","main","grey","primary","name_change","UserActions","UserPage","userName","primaryColor","secondaryColor","UserPaper","id","textInput","Divider","section","onChangeComplete","hex","compose","spacing","background","paper","padding","Stopwatch","updateDisplay","bind","flags","action","time","timer","initial","add","ID","Math","floor","random","Fade","in","Tooltip","aria-label","setFlag","fab","map","flag","index","chip","key","Badge","badgeContent","Chip","avatar","Avatar","renderDisplay","renderControls","renderFlags","Success","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","handleClose","SnackbarContent","classNames","success","aria-describedby","message","icon","iconVariant","close","green","error","dark","info","warning","amber","opacity","alignItems","Countdown","handleSBClose","h","m","s","snackBarSuccess","arr","i","obj","push","InputFields","select","e","handleInputChange","InputProps","startAdornment","InputAdornment","position","makeOptionsArr","option","MenuItem","subtract","handleStartPause","Time","updateNowInState","now","handleDateChange","date","console","log","unix","compare","date1","date2","Menu","Title","Icon","Current","inter","newRow","MuiPickersUtilsProvider","utils","MomentUtils","disableToolbar","KeyboardButtonProps","diff","compareTime","Content","renderContentInner","List","component","dense","item","Zoom","transitionDelay","ListItem","ListItemText","Grid","container","direction","justify","renderMenu","renderContent","minHeight","justifyContent","root","flexGrow","bottom","right","Arrays","handleChange","panel","expanded","divisedBy","n","w","isPrime","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","renderNumbers","returnEven","returnOdd","returnFibonacci","returnPrime","returnDivisible","ExpansionPanelActions","FormControl","Select","Card","Color","Number","Uno","Lists","Todos","filter","task","Completed","Tabs","current","changeCurrent","indicatorColor","textColor","scrollButtons","Todo","Tab","renderBadgeNumber","ListName","contentAlign","new_task","new_list","delete_list","delete_task","edit_task","edit_list","ToDoActions","TaskView","handleTaskEdit","onSubmit","Task","Text","Notes","Importance","preventDefault","isEditing","listID","handleModalClose","Dialog","showTaskModal","aria-labelledby","DialogTitle","DialogContent","Checkbox","InputLabel","htmlFor","Input","fullWidth","multiline","rows","DialogActions","CurrentList","handleSnackbarClose","handleUndoDelete","showCompleted","showUncompleted","showSnackbar","lastDeleted","list","currentList","tasks","findById","lowImportance","normalImportance","highImportance","role","undefined","localName","listItem","ListItemAvatar","renderItemImportance","listItemCompleted","ListItemSecondaryAction","ListSubheader","filterTasks","renderItems","ContentProps","textDecoration","arrow","paddingTop","verticalAlign","buttonDelete","ListEdit","Archived","ToDo","newList","tdl","showNewListPopup","exitPopups","UserName","showNewTaskPopup","lastDeletedList","showEditListPopup","nextCurrent","lists","cancel","toggleItem","deleteItem","listName","newTask","TransitionComponent","renderMoreListOptions","extendedIcon","TextEditor","modules","toolbar","formats","darkColors","new_note","edit_note","delete_note","NotesActions","NotesView","handleDelete","Note","Date","prevProps","isNew","newValue","changeCurrentOnAdd","note","titleInput","required","handleValueChange","colors","circleSpacing","handleCancel","editorSpace","increase","decrease","new_counter","edit_counter","delete_counter","CountersActions","EmptyNote","currentNote","getFirst","prevState","notesList","_","find","currentID","renderFabButton","renderNotesList","CounterView","Counter","Value","Goal","Counters","counterModal","exitModals","showEditModal","showNewCounterPopup","CounterToEdit","LinearProgress","progress","bar","Slide","mountOnEnter","unmountOnExit","raised","badge","leftDiv","minusButton","rightDiv","renderProgress","renderCounters","renderNewCounterModal","renderEditCounterModal","white","fontWeight","cursor","top","left","paddingRight","borderRight","paddingLeft","borderLeft","completedProgress","uncompletedProgress","Convert","input","convertorID","output","convertors","Label","toUpperCase","toLowerCase","split","reverse","join","Morse","ROT13","str","x","indexOf","letters","morseLetters","newText","j","rowsMax","convertDiv","SelectProps","MenuProps","menu","helperText","readOnly","arrowDiv","renderInputCard","renderArrowDown","renderConvertTypeCard","renderOutputCard","mixins","gutters","paddingBottom","Decorate","Decorations","DataTransfer","items","navigator","clipboard","writeText","decorationsWrapper","textToDisplay","copyButton","copyToClipboard","textField","inputProps","autoComplete","renderDecorations","maxHeight","overflowY","String","square","renderTabs","renderTabContent","rnd_num","min","max","rnd_color","RndNumber","NumberOfIntegers","Min","Max","NumberOfColumns","Highlight","NumbersToShow","generateNumbers","mainArr","content","defaultValue","handleNumberChange","textField1","textField2","showNumbers","RndColor","changeColor","showColor","propsDiv","transitionDuration","Coin","handleFlip","showCoin","CircularProgress","lineHeight","Dice","NumberOfDices","Dices","generateDices","dice","diceInner","showDices","diceSpan","Randomiser","handleMenuClick","menuCard","renderChips","flexWrap","details","flexDirection","flex","cover","controls","playIcon","editIcon","deleteIcon","withTheme","quiz","Name","slice","ShortDescription","onPlay","onDelete","Error","Summary","showSummary","handleSummaryClose","QuizName","results","r","QuestionText","isCorrect","UserAnswer","CorrectAnswer","delete_quiz","new_quiz","EditQuiz","Quiz","Tags","Questions","Answers","Correct","CurrentID","uniqueId","Q","A","CurrentQuestion","handleQuestionChange","handleAnswerChange","renderFields","QuizActions","Quizes","currentPage","toEdit","toPlay","shuffledQuestions","nextQuestion","isFinished","answerResults","showDeleteSnackbar","snackMessage","snackType","lastDeletedQuiz","handlePlay","handleDeleteQuiz","QuestionsArray","shuffle","Question","returnShuffledQuiz","QuizTile","Ans","newQuiz","renderDefaultQuizes","getNextQuestion","handleAnswer","renderPage","renderSnackBar","renderSummary","renderUndoDeleteSnackbar","demo","firstIcon","Item","window","edge","Games","RenderPage","Shell","ListItemIcon","AppBar","appBar","isDrawerOpen","appBarShift","Toolbar","disableGutters","menuButton","hide","grow","noWrap","isHeaderOpen","Profilna","Drawer","drawerPaper","drawerPaperClose","renderIcon","MenuList","renderMenuItem","React","zIndex","overflow","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","dislay","whiteSpace","overflowX","breakpoints","up","default","bigAvatar","App","createMuiTheme","ThemeProvider","getTheme","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","typography","useNextVariants","initialState","set","Src","ToDoLists","ToDoReducer","deepFreeze","hasOwnProperty","CountersReducer","isNaN","DefaultQuizes","combineReducers","store","createStore","reducer","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,07CC6B5BC,E,iLAhBP,OACI,kBAACC,EAAA,EAAD,CACIC,MATM,CACVC,MAAO,MACPC,WAAY,GACZC,aAAc,GACdC,UAAW,SACXC,QAAS,gBAKLC,UAAW,IAEX,4BAAQC,UAAU,cACd,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,wBAAIH,UAAU,aAAd,qBACA,2EACA,iF,GAlBSI,a,uHCJtB,SAASC,GAAYC,GACxB,MAAO,CACHC,KAAM,cACND,QAID,SAASE,KACZ,MAAO,CACHD,KAAM,iBAIP,SAASE,KACZ,MAAO,CACHF,KAAM,iBAIP,SAASG,GAAYC,GACxB,MAAO,CACHJ,KAAM,eACNI,SAID,SAASC,GAAsBC,EAAMC,GACxC,MAAO,CACHP,KAAM,wBACNM,OACAC,SCXR,IAAMC,GAAW,eACVC,GAGDC,GAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,IACVC,SAAU,IACVC,WAAY,OACZC,YAAa,OACb3B,aAAc,IAElB4B,MAAO,CACHC,OAAQ,GAEZC,OAAQ,CACJ5B,QAAS,eACT2B,OAAQ,QACRE,UAAW,cAEfC,UAAW,CACPC,SAAU,GACVhC,UAAW,QAEfiC,IAAK,CACDlC,aAAc,IAElBmC,OAAQ,CACJN,OAAQ,GAEZO,QAAS,CACLnC,UAAW,YA0IJoC,eAAQ,SAAAC,GAGnB,MAAO,CACHC,KAHsBD,EAAlBC,KAIJC,QAJsBF,EAAZE,UAOd,SAAAC,GACI,OAAOC,YAAmBvB,GAAasB,IAThCJ,CAtIK,SAACM,GAAW,IACpBlC,EAA2HkC,EAA3HlC,YAAaG,EAA8G+B,EAA9G/B,cAAeC,EAA+F8B,EAA/F9B,cAAeG,EAAgF2B,EAAhF3B,sBAA4D4B,EAAoBD,EAAzDH,QAAWzB,MAAS8B,QAAWlC,KAEnGmC,EAAUzB,KAHW,EAIH0B,mBAAS,IAJN,mBAIpBC,EAJoB,KAIdC,EAJc,OAKWF,mBAASG,MAASC,OAAO,wBALpC,mBAKpBC,EALoB,KAKPC,EALO,KA0C3B,OAnCAC,oBAAU,WACN,IAAIC,EAAG,gCAA4BL,MAASC,OAAO,OAA5C,SACPK,MAAMD,EAAK,CACPE,KAAM,YAELC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAAAG,GACFZ,EAAQY,MAEjB,IAGHP,oBAAU,WACN,IAAIQ,EAAUC,YAAY,WACtB,OAAOV,EAAeH,MAASC,OAAO,yBACvC,KAEH,OAAO,kBAAMa,cAAcF,KAC5B,IAEHR,oBAAU,WACNW,sBAAmBC,YAAY,0BAA2B,CACtDC,aAAa,EACbC,WAAY,aACZC,aAAc,GACdC,aAAa,EACbC,SAAU,CACNC,eAAgB,cAChBC,gBAAiB,OACjBL,WAAY,aACZC,aAAc,QAGvB,IAGC,6BACI,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,YAAYxE,UAAW0C,EAAQlB,OAA9D,YACce,EAAMJ,KAAKsC,KADzB,MAGA,kBAAC,IAAD,CAAMzE,UAAW0C,EAAQvB,MACrB,kBAACuD,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAYtE,UAAW0C,EAAQd,UAAW4C,MAAM,YAAYG,cAAY,GAAxE,eAGC/B,GAEL,kBAACgC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WAAQ1E,EAAY,WAAlD,wBAGR,kBAAC,IAAD,CAAML,UAAW0C,EAAQvB,MACrB,kBAACuD,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAYtE,UAAW0C,EAAQd,UAAW4C,MAAM,YAAYG,cAAY,GAAxE,gBAGC3B,IAGT,kBAAC,IAAD,CAAMhD,UAAW0C,EAAQvB,MACrB,kBAACuD,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAYC,QAAQ,MAApB,8BAIJ,kBAACK,EAAA,EAAD,CAAa5E,UAAW0C,EAAQV,SAC5B,kBAAC6C,EAAA,EAAD,CAAQN,QAAQ,YAAYO,KAAK,QAAQN,MAAO,UAAWxE,UAAW0C,EAAQX,OAC1EgD,QAAS,WAAQtE,MAEjB,uBAAGT,UAAU,kBAAb,aAHJ,aAQA,kBAAC6E,EAAA,EAAD,CAAQN,QAAQ,YAAYO,KAAK,QAAQN,MAAM,YAAYxE,UAAW0C,EAAQX,OAC1EgD,QAAS,WAAQvE,MAEjB,uBAAGR,UAAU,kBAAb,QAHJ,eAQA,kBAAC6E,EAAA,EAAD,CAAQN,QAAQ,YAAYO,KAAK,QAAQ9E,UAAW0C,EAAQX,OACxDgD,QAAS,WAAQ1E,EAAY,cAE7B,uBAAGL,UAAU,kBAAb,4BAHJ,qBAUR,kBAAC,IAAD,CAAMA,UAAW0C,EAAQvB,MACrB,kBAACuD,EAAA,EAAD,KACI,kBAACM,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIC,QAAuB,SAAd3C,EACT4C,SAAU,kBAAMxE,EAAsB,eAA8B,SAAd4B,EAAuB,QAAU,SACvF1B,MAAM,QACNd,UAAW0C,EAAQ2C,SAG3BC,MAAM,+BAIlB,kBAAC,IAAD,CAAMtF,UAAW0C,EAAQvB,MACrB,kBAACuD,EAAA,EAAD,KACI,yBAAK1E,UAAU,0BACX,yBAAKA,UAAU,cACX,4BAAQA,UAAU,OAAlB,WAEJ,yBAAKA,UAAU,cACX,4BAAQA,UAAU,OAAlB,WAEJ,yBAAKA,UAAU,cACX,4BAAQA,UAAU,OAAlB,iB,4DCxHtBuF,G,YACF,WAAYhD,GAAQ,IAAD,8BACf,4CAAMA,KACDL,MAAQ,CACTsD,GAAI,GACJC,UAAW,GACXC,GAAI,GACJC,OAAO,GANI,E,sEAWf,IAAKC,KAAK1D,MAAMyD,OAASC,KAAK1D,MAAMwD,GAAI,CACpC,IAAIG,EAAOC,SAASF,KAAK1D,MAAMsD,GAAI,IAC/BO,EAAOD,SAASF,KAAK1D,MAAMwD,GAAI,IACnC,OAAQE,KAAK1D,MAAMuD,WACf,IAAK,IACDG,KAAKI,SAAS,CACVR,GAAIK,EAAOE,EACXN,UAAW,GACXC,GAAI,GACJC,OAAO,IAEX,MACJ,IAAK,IACDC,KAAKI,SAAS,CACVR,GAAIK,EAAOE,EACXN,UAAW,GACXC,GAAI,GACJC,OAAO,IAEX,MACJ,IAAK,OACDC,KAAKI,SAAS,CACVR,GAAIK,EAAOE,EACXN,UAAW,GACXC,GAAI,GACJC,OAAO,IAEX,MACJ,IAAK,OACDC,KAAKI,SAAS,CACVR,GAAIK,EAAOE,EACXN,UAAW,GACXC,GAAI,GACJC,OAAO,IAEX,MACJ,QACI,W,6BAKTM,GACCL,KAAK1D,MAAMyD,MACXC,KAAKI,SAAS,CACVR,GAAII,KAAK1D,MAAMsD,GAAGU,WAAaD,IAGnCL,KAAKI,SAAS,CACVN,GAAIE,KAAK1D,MAAMwD,GAAGQ,WAAaD,M,iCAMvCL,KAAKI,SAAS,CACVR,GAAI,GACJC,UAAW,GACXC,GAAI,GACJC,OAAO,M,+BAIL,IAAD,OACGjD,EAAYkD,KAAKrD,MAAjBG,QADH,EAG8BkD,KAAK1D,MAAjCsD,EAHF,EAGEA,GAAIG,EAHN,EAGMA,MAAOD,EAHb,EAGaA,GAAID,EAHjB,EAGiBA,UAEtB,OACI,6BACI,kBAACjG,EAAA,EAAD,CAAOQ,UAAW0C,EAAQyD,WAAYpG,UAAW,GAC7C,kBAACqG,GAAA,EAAD,CACIC,YAAY,gBACZvF,MAAO6E,EAAQH,EAAKE,EACpBnF,KAAK,SACL+F,WAAS,EACT/B,QAAQ,WACRvE,UAAW0C,EAAQ6D,WACnBjB,MAAOK,EAAQH,EAAKA,EAAKC,EAAYC,EACrCc,QACI,SAACC,GACGd,EACI,EAAKK,SAAS,CACVR,GAAIiB,EAAMC,OAAO5F,QAGrB,EAAKkF,SAAS,CACVN,GAAIe,EAAMC,OAAO5F,WAKrC,kBAAC6F,EAAA,EAAD,CAAY3G,UAAW0C,EAAQkE,YAAanC,KAAM,MAAOa,MAAM,MAAMP,QACjE,SAAC0B,GACG,IAAIZ,EAAO,GAAKL,EACZO,EAAO,GAAKL,EACZC,EACa,KAATE,GACA,EAAKG,SAAS,CACVR,GAAIK,EAAKgB,UAAU,EAAGhB,EAAKiB,OAAS,KAI/B,KAATf,GACA,EAAKC,SAAS,CACVN,GAAIK,EAAKc,UAAU,EAAGd,EAAKe,OAAS,OAMpD,uBAAG9G,UAAU,kBAAb,cAIJ,kBAAC2G,EAAA,EAAD,CAAY3G,UAAW0C,EAAQkE,YAAa7B,QAAS,WAAQ,EAAKgC,aAC9D,uBAAG/G,UAAU,kBAAb,UAIJ,6BACA,kBAACR,EAAA,EAAD,CAAOO,UAAW,EAAGC,UAAW0C,EAAQsE,eACpC,kBAACnC,EAAA,EAAD,CACIpF,MAAO,CAAEwH,OAAQ,OAAQvH,MAAO,OAAQwH,aAAc,QACtD5B,MAAM,IACNtF,UAAW0C,EAAQyE,kBACnBpC,QACI,SAAC0B,GACG,EAAKT,SAAS,CACVP,UAAW,IACXE,OAAO,MARvB,OAYA,kBAACd,EAAA,EAAD,CACIpF,MAAO,CAAEwH,OAAQ,OAAQvH,MAAO,OAAQwH,aAAc,QACtDpG,MAAO,IACPwE,MAAM,IACNtF,UAAW0C,EAAQyE,kBACnBpC,QACI,SAAC0B,GACG,EAAKT,SAAS,CACVP,UAAW,IACXE,OAAO,MATvB,OAaA,kBAACd,EAAA,EAAD,CACIpF,MAAO,CAAEwH,OAAQ,OAAQvH,MAAO,OAAQwH,aAAc,QACtDpG,MAAO,OACPwE,MAAM,OACNtF,UAAW0C,EAAQyE,kBACnBpC,QACI,SAAC0B,GACG,EAAKT,SAAS,CACVP,UAAW,OACXE,OAAO,MATvB,UAaA,kBAACd,EAAA,EAAD,CACIpF,MAAO,CAAEwH,OAAQ,OAAQvH,MAAO,OAAQwH,aAAc,QACtDpG,MAAO,OACPwE,MAAM,OACNtF,UAAW0C,EAAQyE,kBACnBpC,QACI,SAAC0B,GACG,EAAKT,SAAS,CACVP,UAAW,OACXE,OAAO,MATvB,WAcJ,kBAACyB,GAAA,EAAD,CAAOpH,UAAW0C,EAAQ2E,YACtB,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQ7E,UAAW0C,EAAQ+E,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,QAIJ,kBAACF,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQ7E,UAAW0C,EAAQ+E,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,OAIJ,kBAACF,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQ7E,UAAW0C,EAAQ+E,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,QAKR,kBAACH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQ7E,UAAW0C,EAAQ+E,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,OAIJ,kBAACF,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQ7E,UAAW0C,EAAQ+E,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,OAIJ,kBAACF,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQ7E,UAAW0C,EAAQ+E,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,QAKR,kBAACH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQ7E,UAAW0C,EAAQ+E,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,OAIJ,kBAACF,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQ7E,UAAW0C,EAAQ+E,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,OAIJ,kBAACF,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQ7E,UAAW0C,EAAQ+E,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,QAKR,kBAACH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQ7E,UAAW0C,EAAQ+E,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,MACbC,UAAU,GAFb,OAIJ,kBAACH,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQ7E,UAAW0C,EAAQ+E,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,OAIJ,kBAACF,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CAAK5H,UAAW0C,EAAQmF,aAAc9H,UAAW,EAAGgF,QAAS,WACzD,EAAK+C,WADT,e,GA3PX1H,aA0QV2H,eAtTA,SAAApH,GAEX,MAAO,CACHwF,WAAY,CACRzG,MAAO,QACP4B,WAAY,OACZC,YAAa,OACb5B,UAAW,OAEfqH,cAAe,CACXtH,MAAO,OACPsI,gBAAiBrH,EAAM8B,QAAQwF,UAAUC,KACzC1D,MAAO,SAEX2C,kBAAmB,CACftF,SAAU,OACV2C,MAAO,SAEX6C,WAAY,CACRW,gBAAiBrH,EAAM8B,QAAQ0F,MAGnCV,WAAY,CACRR,OAAQ,OACRvH,MAAO,OACPwH,aAAc,OACdrF,SAAU,QAEdgG,aAAc,CACVvG,WAAY,GACZ0G,gBAAiBrH,EAAM8B,QAAQ2F,QAAQF,KACvCrG,SAAU,QAEd0E,WAAY,CACR1E,SAAU,GACVhC,UAAW,QACXH,MAAO,OAEXkH,YAAa,CACT9G,QAAS,kBA+QNiI,CAAmBxC,I,SCpU3B,SAAS8C,GAAY5D,GACxB,MAAO,CACHlE,KAAM,cACNkE,QCiBR,IAAM1D,GAAW,eACVuH,EADU,GAEVtH,GA2BDuH,G,YACF,WAAYhG,GAAQ,IAAD,0BAGP8F,GAFR,4CAAM9F,KAEuBA,MAArB8F,YAHO,OAIf,EAAKA,YAAcA,EAEnB,EAAKnG,MAAQ,CACTsG,SAAU,IAPC,E,sEAWT,IAAD,SAC2I5C,KAAKrD,MAA7IG,EADH,EACGA,QADH,IACYN,QAAWzB,MAAS8B,QAAiBD,EADjD,EAC2CjC,KAAkCkI,EAD7E,EAC4DL,QAAWF,KAAyCQ,EADhH,EAC6FT,UAAaC,KAE/G,OACI,kBAAC1I,EAAA,EAAD,CAAOO,UAAW,GAAIC,UAAW0C,EAAQiG,WACrC,kBAACvC,GAAA,EAAD,CACIwC,GAAG,mBACHrE,QAAQ,WACRe,MAAM,YACNtF,UAAW0C,EAAQmG,UACnB/H,MAAO8E,KAAKrD,MAAMJ,KAAKsC,KACvBW,SAAU,SAACqB,GACP,EAAK4B,YAAY5B,EAAMC,OAAO5F,UAGtC,kBAACgI,EAAA,EAAD,CAASvE,QAAQ,WACjB,yBAAKvE,UAAW0C,EAAQqG,SACxB,kBAAC/D,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIC,QAAuB,SAAd3C,EACT4C,SAAU,kBAAM,EAAK7C,MAAM3B,sBAAsB,eAA8B,SAAd4B,EAAuB,QAAU,SAClG1B,MAAM,QACNd,UAAW0C,EAAQ2C,SAG3BC,MAAM,8BAGV,yBAAKtF,UAAW0C,EAAQqG,SACpB,kBAACzE,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,WAAtC,wBAGA,kBAAC,iBAAD,CACIA,MAAOiE,EACPO,iBAAkB,SAAClI,GAAD,OAAW,EAAKyB,MAAM3B,sBAAsB,uBAAwBE,EAAMmI,SAGpG,yBAAKjJ,UAAW0C,EAAQqG,SACpB,kBAACzE,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,aAAtC,0BAGA,kBAAC,gBAAD,CACIA,MAAOkE,EACPM,iBAAkB,SAAClI,GAAD,OAAW,EAAKyB,MAAM3B,sBAAsB,yBAA0BE,EAAMmI,SAGtG,kBAACH,EAAA,EAAD,CAASvE,QAAQ,WACjB,kBAACM,EAAA,EAAD,CAAQN,QAAQ,YAAYC,MAAM,YAAYxE,UAAW0C,EAAQX,QAAjE,oBAEI,uBAAG/B,UAAU,iBAAiBP,MAAO,CAAE6B,WAAY,QAAnD,wB,GA9DGlB,aAuER8I,OACXnB,YAhGW,SAAApH,GAAK,MAAK,CACrBgI,UAAW,CACPlH,OAAQd,EAAMwI,QAAQ,GACtBzJ,MAAO,OACP2B,SAAU,IACV2G,gBAAiBrH,EAAM8B,QAAQ2G,WAAWC,MAC1C/H,WAAY,OACZC,YAAa,OACb+H,QAAS,IAGbT,UAAW,CACPpH,OAAQd,EAAMwI,QAAQ,IAG1BJ,QAAS,CACLtH,OAAQd,EAAMwI,QAAQ,IAG1BpH,OAAQ,CACJN,OAAQd,EAAMwI,QAAQ,OA6E1BlH,YAAQ,SAAAC,GAGJ,MAAO,CACHC,KAHsBD,EAAlBC,KAIJC,QAJsBF,EAAZE,UAOd,SAAAC,GACI,OAAOC,YAAmBvB,GAAasB,KAXpC6G,CAabX,I,2GC5GIgB,G,YACF,WAAYhH,GAAQ,IAAD,8BACf,4CAAMA,KAEDiH,cAAgB,EAAKA,cAAcC,KAAnB,iBAErB,EAAKvH,MAAQ,CACTpC,QAAS,WACT4J,MAAO,GACPC,OAAQ,QACRC,KAAM,MAGV,EAAKC,MAAQ,KAZE,E,oFAgBfjE,KAAKkE,Y,sCAIL,OACI,4BACKlE,KAAK1D,MAAMpC,W,sCAKP,IAAD,OACZ8F,KAAKI,SAAS,CACV4D,KAAM9G,IAAO8C,KAAK1D,MAAM0H,KAAKG,IAAI,EAAG,YACrC,WACC,EAAK/D,SAAS,CACVlG,QAASgD,IAAO,EAAKZ,MAAM0H,MAAM7G,OAAO,kB,gCAOhD6C,KAAKI,SAAS,CACVlG,QAAS,WACT4J,MAAO,GACPC,OAAQ,QACRC,KAAM,OAGVhG,cAAcgC,KAAKiE,S,gCAInBjE,KAAKI,SAAS,CACV0D,MAAM,GAAD,oBACE9D,KAAK1D,MAAMwH,OADb,CAED,CACIM,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBP,KAAMhE,KAAK1D,MAAMpC,e,uCAMf,IAAD,OACL4C,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAAC0H,GAAA,EAAD,CAAMC,IAAI,GACN,6BACI,kBAACC,GAAA,EAAD,CAAS9I,MAA6B,UAAtBoE,KAAK1D,MAAMyH,OAAqB,aAAe,SAC3D,kBAAChD,EAAA,EAAD,CACInC,MAAM,YACNxE,UAAW0C,EAAQX,OACnBwI,aAAW,cACXxF,QAAS,WACiB,UAAtB,EAAK7C,MAAMyH,OACL,EAAKa,UACL,EAAKV,YAGf,uBAAG9J,UAAU,kBACc,UAAtB4F,KAAK1D,MAAMyH,OAAqB,gBAAkB,aAK/D,kBAAC/B,GAAA,EAAD,CACIrD,QAAQ,WACRC,MAAM,UACNxE,UAAW0C,EAAQ+H,IACnB1F,QAAS,WACL,EAAKiB,SAAS,CACV2D,OAA8B,UAAtB,EAAKzH,MAAMyH,OAAqB,QAAU,QAClDC,KAA6B,aAAvB,EAAK1H,MAAMpC,QACXgD,IAAO,WAAY,YACnB,EAAKZ,MAAM0H,MAClB,WAC2B,UAAtB,EAAK1H,MAAMyH,OACX,EAAKE,MAAQlG,YAAY,EAAK6F,cAAe,KAE7C5F,cAAc,EAAKiG,WAI/B,uBAAG7J,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SACzB,UAAtBqE,KAAK1D,MAAMyH,OAAqB,QAAU,cAExB,UAAtB/D,KAAK1D,MAAMyH,OAAqB,QAAU,SAG/C,kBAACW,GAAA,EAAD,CAAS9I,MAAO,eACZ,kBAACmF,EAAA,EAAD,CACInC,MAAM,YACNxE,UAAW0C,EAAQX,OACnBwI,aAAW,eAEX,uBAAGvK,UAAU,kBAAb,sB,oCAUT,IACH0J,EAAU9D,KAAK1D,MAAfwH,MACR,IAAKA,IAAUA,EAAM5C,OAAQ,OAAO,KAF1B,IAIFpE,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,6BAEQgH,EAAMgB,IAAI,SAACC,EAAMC,GACb,OACI,yBACI5K,UAAW0C,EAAQmI,KACnBC,IAAKH,EAAKX,IAEV,kBAACe,GAAA,EAAD,CACIC,aAAcJ,EAAQ,EACtBpG,MAAM,aAEN,kBAACyG,GAAA,EAAD,CACIC,OACI,kBAACC,EAAA,EAAD,KACI,uBAAGnL,UAAU,kBAAb,SAKRuE,QAAQ,WACRe,MAAOqF,EAAKf,c,+BAa5C,OACI,6BACKhE,KAAKwF,gBACLxF,KAAKyF,iBACLzF,KAAK0F,mB,GA1KElL,aAgLT2H,eA5LA,SAAApH,GAAK,MAAK,CACrB8J,IAAK,CACDlJ,YAAaZ,EAAMwI,QAAQ,GAC3B7H,WAAYX,EAAMwI,QAAQ,GAC1BvJ,aAAce,EAAMwI,QAAQ,IAEhC0B,KAAM,CACF/K,QAAS,QACTH,UAAWgB,EAAMwI,QAAQ,MAoLlBpB,CAAmBwB,I,8DCtK5BgC,G,iLACQ,IACE7I,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAAC8I,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAMhG,KAAKrD,MAAMqJ,KACjBC,iBAAkBjG,KAAKrD,MAAMsJ,iBAAmBjG,KAAKrD,MAAMsJ,iBAAmB,IAC9EC,QAASlG,KAAKrD,MAAMwJ,aAEpB,kBAACC,GAAA,EAAD,CACIhM,UAAWiM,IAAWvJ,EAAQwJ,SAC9BC,mBAAiB,kBACjBC,QACI,0BAAMxD,GAAG,kBAAkB5I,UAAW0C,EAAQ0J,SAC1C,uBAAGpM,UAAWiM,IAAWvJ,EAAQ2J,KAAM3J,EAAQ4J,YAAa,mBAA5D,wBAGC1G,KAAKrD,MAAMiB,KAAKsD,OAASlB,KAAKrD,MAAMiB,KAAO,wBAGpDmG,OAAQ,CACJ,kBAAChD,EAAA,EAAD,CACImE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACNxE,UAAW0C,EAAQ6J,MACnBxH,QAASa,KAAKrD,MAAMwJ,aAEpB,uBAAG/L,UAAU,kBAAb,kB,GAjCNI,aA4CP2H,eAtEA,SAAApH,GAAK,MAAK,CACrBuL,QAAS,CACLlE,gBAAiBwE,KAAM,MAE3BC,MAAO,CACHzE,gBAAiBrH,EAAM8B,QAAQgK,MAAMC,MAEzCC,KAAM,CACF3E,gBAAiBrH,EAAM8B,QAAQ2F,QAAQsE,MAE3CE,QAAS,CACL5E,gBAAiB6E,KAAM,MAE3BR,KAAM,CACFxK,SAAU,IAEdyK,YAAa,CACTQ,QAAS,GACTvL,YAAaZ,EAAMwI,QAAQ,IAE/BiD,QAAS,CACLtM,QAAS,OACTiN,WAAY,YAgDLhF,CAAmBwD,I,oBC5C5ByB,G,YACF,WAAYzK,GAAQ,IAAD,8BACf,4CAAMA,KAEDiH,cAAgB,EAAKA,cAAcC,KAAnB,iBACrB,EAAKwD,cAAgB,EAAKA,cAAcxD,KAAnB,iBAErB,EAAKvH,MAAQ,CACTpC,QAAS,WACT6J,OAAQ,QACRC,KAAM,CACFsD,EAAG,EACHC,EAAG,EACHC,EAAG,IAEPC,iBAAiB,GAGrB,EAAKxD,MAAQ,KAjBE,E,oFAqBfjE,KAAKkE,Y,wCAGSxE,EAAOxE,GACrB8E,KAAKI,SAAS,CACV4D,KAAK,eACEhE,KAAK1D,MAAM0H,KADd,eAECtE,EAAQxE,Q,qCAKNwE,GACX,GAAc,MAAVA,EAAe,CAEf,IADA,IAAIgI,EAAM,GACDC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIC,EAAM,CACN1M,MAAOyM,EACPjI,MAAOiI,GAEXD,EAAIG,KAAKD,GAGb,OAAOF,EAIX,IADA,IAAIA,EAAM,GACDC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIC,EAAM,CACN1M,MAAOyM,EACPjI,MAAOiI,GAEXD,EAAIG,KAAKD,GAGb,OAAOF,I,sCAGM,IAAD,OACJ5K,EAAYkD,KAAKrD,MAAjBG,QACR,MAA2B,aAAvBkD,KAAK1D,MAAMpC,QAEP,yBAAKE,UAAW0C,EAAQgL,aACpB,kBAACtH,GAAA,EAAD,CACIuH,QAAM,EACNpJ,QAAQ,WACRe,MAAM,QACNxE,MAAO8E,KAAK1D,MAAM0H,KAAKsD,EACvB9H,SAAU,SAACwI,GAAD,OAAO,EAAKC,kBAAkB,IAAKD,EAAElH,OAAO5F,QACtDgN,WAAY,CACRC,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,OAGnBrI,KAAKsI,eAAe,KAAKxD,IAAI,SAAAyD,GAAM,OAChC,kBAACC,GAAA,EAAD,CAAUtD,IAAKqD,EAAOrN,MAAOA,MAAOqN,EAAOrN,OACtCqN,EAAO7I,UAIpB,kBAACc,GAAA,EAAD,CACIuH,QAAM,EACNpJ,QAAQ,WACRe,MAAM,UACNxE,MAAO8E,KAAK1D,MAAM0H,KAAKuD,EACvB/H,SAAU,SAACwI,GAAD,OAAO,EAAKC,kBAAkB,IAAKD,EAAElH,OAAO5F,QACtDgN,WAAY,CACRC,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,OAGnBrI,KAAKsI,eAAe,KAAKxD,IAAI,SAAAyD,GAAM,OAChC,kBAACC,GAAA,EAAD,CAAUtD,IAAKqD,EAAOrN,MAAOA,MAAOqN,EAAOrN,OACtCqN,EAAO7I,UAIpB,kBAACc,GAAA,EAAD,CACIuH,QAAM,EACNpJ,QAAQ,WACRe,MAAM,UACNxE,MAAO8E,KAAK1D,MAAM0H,KAAKwD,EACvBhI,SAAU,SAACwI,GAAD,OAAO,EAAKC,kBAAkB,IAAKD,EAAElH,OAAO5F,QACtDgN,WAAY,CACRC,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,OAGnBrI,KAAKsI,eAAe,KAAKxD,IAAI,SAAAyD,GAAM,OAChC,kBAACC,GAAA,EAAD,CAAUtD,IAAKqD,EAAOrN,MAAOA,MAAOqN,EAAOrN,OACtCqN,EAAO7I,WAQ5B,4BACKxC,IAAO8C,KAAK1D,MAAMpC,SAASiD,OAAO,e,sCAMG,aAA1C6C,KAAK1D,MAAMpC,QAAQiD,OAAO,aAC1Ba,cAAcgC,KAAKiE,OACnBjE,KAAKkE,UACLlE,KAAKI,SAAS,CACVqH,iBAAiB,KAGrBzH,KAAKI,SAAS,CACVlG,QAAS8F,KAAK1D,MAAMpC,QAAQuO,SAAS,EAAG,c,gCAMhDzI,KAAKI,SAAS,CACVlG,QAAS,WACT6J,OAAQ,QACRC,KAAM,CACFsD,EAAG,EACHC,EAAG,EACHC,EAAG,MAIXxJ,cAAcgC,KAAKiE,S,yCAInB,GAA2B,aAAvBjE,KAAK1D,MAAMpC,QAAwB,CAAC,IAC5B8J,EAAShE,KAAK1D,MAAd0H,KAKR,OAJAhE,KAAKI,SAAS,CACVlG,QAASgD,IAAO,GAAD,OAAI8G,EAAKsD,EAAT,YAActD,EAAKuD,EAAnB,YAAwBvD,EAAKwD,GAAK,mBAErDxH,KAAKiE,MAAQlG,YAAYiC,KAAK4D,cAAe,MAIjD,MAA0B,UAAtB5D,KAAK1D,MAAMyH,YACX/F,cAAcgC,KAAKiE,YAGnBjE,KAAKiE,MAAQlG,YAAYiC,KAAK4D,cAAe,Q,uCAkBnC,IAAD,OACL9G,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAAC0H,GAAA,EAAD,CAAMC,IAAI,GACN,6BACI,kBAACC,GAAA,EAAD,CAAS9I,MAAO,SACZ,kBAACmF,EAAA,EAAD,CACInC,MAAM,YACNxE,UAAW0C,EAAQX,OACnBwI,aAAW,cACXxF,QAAS,WACL,EAAK+E,YAGT,uBAAG9J,UAAU,kBACR,aAKb,kBAAC4H,GAAA,EAAD,CACIrD,QAAQ,WACRC,MAAM,UACNxE,UAAW0C,EAAQ+H,IACnB1F,QAAS,WACL,EAAKiB,SAAS,CACV2D,OAA8B,UAAtB,EAAKzH,MAAMyH,OAAqB,QAAU,SACnD,WACC,EAAK2E,uBAGb,uBAAGtO,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SACzB,UAAtBqE,KAAK1D,MAAMyH,OAAqB,QAAU,cAExB,UAAtB/D,KAAK1D,MAAMyH,OAAqB,QAAU,SAG/C,kBAACW,GAAA,EAAD,CAAS9I,MAAO,eACZ,kBAACmF,EAAA,EAAD,CACInC,MAAM,YACNxE,UAAW0C,EAAQX,OACnBwI,aAAW,eAEX,uBAAGvK,UAAU,kBAAb,sB,oCAUT,IACH0J,EAAU9D,KAAK1D,MAAfwH,MACR,IAAKA,IAAUA,EAAM5C,OAAQ,OAAO,KAF1B,IAIFpE,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,6BAEQgH,EAAMgB,IAAI,SAACC,EAAMC,GACb,OACI,yBACI5K,UAAW0C,EAAQmI,KACnBC,IAAKH,EAAKX,IAEV,kBAACe,GAAA,EAAD,CACIC,aAAcJ,EAAQ,EACtBpG,MAAM,aAEN,kBAACyG,GAAA,EAAD,CACIC,OACI,kBAACC,EAAA,EAAD,KACI,uBAAGnL,UAAU,kBAAb,SAKRuE,QAAQ,WACRe,MAAOqF,EAAKf,c,sCAY5ChE,KAAKI,SAAS,CACVqH,iBAAiB,M,+BAKrB,OACI,6BACKzH,KAAKwF,gBACLxF,KAAKyF,iBACLzF,KAAK0F,cACN,kBAAC,GAAD,CACIM,KAAMhG,KAAK1D,MAAMmL,gBACjBtB,YAAanG,KAAKqH,cAClBzJ,KAAM,6B,GAnSFpD,aA0ST2H,eAzTA,SAAApH,GAAK,MAAK,CACrB8J,IAAK,CACDlJ,YAAaZ,EAAMwI,QAAQ,GAC3B7H,WAAYX,EAAMwI,QAAQ,GAC1BvJ,aAAce,EAAMwI,QAAQ,IAEhC0B,KAAM,CACF/K,QAAS,QACTH,UAAWgB,EAAMwI,QAAQ,IAE7BuE,YAAa,CACTjM,OAAQ,KA8SDsG,CAAmBiF,I,8BClQ5BuB,I,mBACF,WAAYhM,GAAQ,IAAD,8BACf,4CAAMA,KAoCViM,iBAAmB,WACf,EAAKxI,SAAS,CACVyI,IAAK3L,OAvCM,EA4CnB4L,iBAAmB,SAACC,EAAM7D,GACtB8D,QAAQC,IAAkB,IAAdF,EAAKG,OAAehE,GAChC,EAAK9E,SAAS,CACV+I,QAAQ,eACD,EAAK7M,MAAM6M,QADX,eAEFjE,EAAoB,IAAd6D,EAAKG,YA/CpB,EAAK5M,MAAQ,CACT6M,QAAS,CACLC,MAAyB,IAAlBlM,IAASgM,OAChBG,MAAyB,IAAlBnM,IAASgM,QAEpBI,KAAM,CACF,CACIlF,GAAI,EACJmF,MAAO,gBACPC,KAAM,kBAEV,CACIpF,GAAI,EACJmF,MAAO,YACPC,KAAM,SAEV,CACIpF,GAAI,EACJmF,MAAO,YACPC,KAAM,cAGdC,QAAS,GAxBE,E,iIAiCfzL,cAAcgC,KAAK0J,S,oCAqBR,IAAD,OACF5M,EAAYkD,KAAKrD,MAAjBG,QADE,EAEekD,KAAK1D,MAAM6M,QAA5BC,EAFE,EAEFA,MAAOC,EAFL,EAEKA,MAEf,OACI,kBAAC,WAAD,KACI,yBAAKjP,UAAW0C,EAAQ6M,QACpB,kBAACC,GAAA,EAAD,CAAyBC,MAAOC,MAC5B,kBAAC,KAAD,CACIC,gBAAc,EACd5M,OAAO,aACPtB,OAAO,SACPmH,GAAG,qBACHtD,MAAM,aACNxE,MAAOkO,EACP5J,SAAU,SAACuJ,GAAD,OAAU,EAAKD,iBAAiBC,EAAM,UAChDiB,oBAAqB,CACjB,aAAc,eAElBnQ,MAAO,CAAEK,QAAS,aAI9B,yBAAKE,UAAW0C,EAAQ6M,QACpB,kBAACC,GAAA,EAAD,CAAyBC,MAAOC,MAC5B,kBAAC,KAAD,CACIC,gBAAc,EACd5M,OAAO,aACPtB,OAAO,SACPmH,GAAG,qBACHtD,MAAM,cACNxE,MAAOmO,EACP7J,SAAU,SAACuJ,GAAD,OAAU,EAAKD,iBAAiBC,EAAM,UAChDiB,oBAAqB,CACjB,aAAc,mBAK9B,yBAAK5P,UAAW0C,EAAQ6M,QACpB,kBAAC/P,EAAA,EAAD,CAAOO,UAAW,EAAGN,MAAO,CAAEK,QAAS,UACnC,2BAAIgD,EAAOkM,GAAOa,KAAK/M,EAAOmM,GAAQ,c,2CAStDrL,cAAcgC,KAAK0J,OADF,IAGT5M,EAAYkD,KAAKrD,MAAjBG,QAER,OAAQkD,KAAK1D,MAAMmN,SACf,KAAK,EAAG,OAAOzJ,KAAKkK,cACpB,KAAK,EAAG,OAAO,kBAACtQ,EAAA,EAAD,CAAOQ,UAAW0C,EAAQqN,QAAShQ,UAAW,IAAI,kBAAC,GAAD,OACjE,KAAK,EAAG,OAAO,kBAACP,EAAA,EAAD,CAAOQ,UAAW0C,EAAQqN,QAAShQ,UAAW,IAAI,kBAAC,GAAD,OACjE,QAAS,OAAO,kBAACP,EAAA,EAAD,CAAOQ,UAAW0C,EAAQqN,QAAShQ,UAAW,IAAI,kBAAC,GAAD,U,sCAKtE,OACI6F,KAAKoK,uB,mCAIC,IAAD,OACDtN,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAAClD,EAAA,EAAD,CAAOO,UAAW,EAAGC,UAAW0C,EAAQwM,MACpC,kBAACe,GAAA,EAAD,CAAMC,UAAU,MAAMC,OAAK,GAEnBvK,KAAK1D,MAAMgN,KAAKxE,IAAI,SAAC0F,EAAMxF,GACvB,OACI,kBAACyF,EAAA,EAAD,CAAMhG,IAAI,EACNS,IAAKsF,EAAKpG,GACVvK,MAAO,CAAE6Q,gBAAyB,IAAR1F,IAE1B,6BACI,kBAAC2F,EAAA,EAAD,CACIJ,OAAK,EACLpO,QAAM,EACNgD,QAAS,WACL,EAAKiB,SAAS,CACVqJ,QAASe,EAAKpG,OAItB,kBAACmB,EAAA,EAAD,CAAQnL,UAAW0C,EAAQyI,QACvB,uBAAGnL,UAAU,kBACRoQ,EAAKhB,OAGd,kBAACoB,EAAA,EAAD,CAAcpI,QAASgI,EAAKjB,SAG1B,EAAKjN,MAAMgN,KAAKpI,OAAS,IAAM8D,EAC3B,kBAAC9B,EAAA,EAAD,CAASvE,QAAQ,UACjB,a,+BAa1C,OACI,6BACI,kBAACkM,GAAA,EAAD,CACIC,WAAS,EACTvH,QAAS,GACTnJ,UAAW,GACX+M,WAAY,SACZ4D,UAAW,MACXC,QAAS,SACTnR,MAAO,CAAEE,UAAW,KAEnBiG,KAAKiL,aACN,kBAACzG,GAAA,EAAD,CAAMC,IAAI,EAAM5K,MAAO,CAAE6Q,gBAAiB,MACrC1K,KAAKkL,uB,GAtLX1Q,cA8LJ2H,eAvOA,SAAApH,GAAK,MAAK,CACrBuO,KAAM,CACFxP,MAAO,OACP2B,SAAU,IACV2G,gBAAiBrH,EAAM8B,QAAQ2G,WAAWC,MAC1C9H,YAAa,OACb3B,aAAc,QAElBmQ,QAAS,CACLrQ,MAAO,OACP2B,SAAU,IACV2G,gBAAiBrH,EAAM8B,QAAQ2G,WAAWC,MAC1C0H,UAAW,IACX9J,OAAQ,OACRqC,QAAS,GACTxJ,QAAS,OACTkR,eAAgB,SAChBjE,WAAY,UAGhBkE,KAAM,CACFC,SAAU,GAGdzG,IAAK,CACDwD,SAAU,WACVkD,OAAQxQ,EAAMwI,QAAQ,GACtBiI,MAAOzQ,EAAMwI,QAAQ,GACrB5H,YAAa,QAGjB4J,OAAQ,CACJnD,gBAAiBrH,EAAM8B,QAAQ2F,QAAQF,KACvC3G,YAAa,IAGjBgO,OAAQ,CACJzP,QAAS,WAkMFiI,CAAmBwG,I,4DC5CnB8C,G,YA7MX,WAAY9O,GAAQ,IAAD,8BACf,4CAAMA,KAOV+O,aAAe,SAAAC,GAAK,OAAI,SAAC9K,EAAO+K,GAC5B,EAAKxL,SAAS,CACVwL,WAAUA,GAAWD,MARzB,EAAKrP,MAAQ,CACTsP,SAAU,KACVC,UAAW,GAJA,E,0EAgBf,IADA,IAAInE,EAAM,GACDC,EAAI,EAAGA,EAAI,IAAKA,IACjBA,EAAI,IAAM,GACVD,EAAIG,KAAKF,GAGjB,OAAOD,I,kCAKP,IADA,IAAIA,EAAM,GACDC,EAAI,EAAGA,EAAI,IAAKA,IACjBA,EAAI,IAAM,GACVD,EAAIG,KAAKF,GAGjB,OAAOD,I,wCAKP,IADA,IAAIA,EAAM,CAAC,EAAG,GACLC,EAAI,EAAGA,GAAK,GAAIA,IACrBD,EAAIG,KAAKH,EAAIC,GAAKD,EAAIC,EAAI,IAE9B,OAAOD,I,8BAGHoE,GACJ,GAAU,IAANA,EACA,OAAO,EACX,GAAU,IAANA,EACA,OAAO,EACX,GAAIA,EAAI,IAAM,EACV,OAAO,EACX,GAAIA,EAAI,IAAM,EACV,OAAO,EAKX,IAHA,IAAInE,EAAI,EACJoE,EAAI,EAEDpE,EAAIA,GAAKmE,GAAG,CACf,GAAIA,EAAInE,IAAM,EACV,OAAO,EAEXA,GAAKoE,EACLA,EAAI,EAAIA,EAEZ,OAAO,I,oCAKP,IADA,IAAIrE,EAAM,GACDC,EAAI,EAAGA,EAAI,IAAKA,IACjB3H,KAAKgM,QAAQrE,IACbD,EAAIG,KAAKF,GAGjB,OAAOD,I,wCAKP,IADA,IAAIA,EAAM,GACDC,EAAI,EAAGA,GAAK,IAAKA,IAClBA,EAAI3H,KAAK1D,MAAMuP,YAAc,GAC7BnE,EAAIG,KAAKF,GAGjB,OAAOD,I,oCAGGA,GAAmB,IAAdiC,EAAa,uDAAJ,GAExB,OAAKjC,GAAQA,EAAIxG,OAGb,6BAEQwG,EAAI5C,IAAI,SAACzE,EAAK2E,GACV,OAAIA,EAAQ2E,IAAW,GAAe,IAAV3E,EAEpB,kBAAC,WAAD,CAAUE,IAAKF,GACX,8BAAO3E,EAAM,MACb,8BAIDA,EAAM,OAdD,O,+BAwB1B,IAAD,OACGuL,EAAa5L,KAAK1D,MAAlBsP,SAEF/R,EAAQ,CACV8R,MAAO,CACH7R,MAAO,MACP4B,WAAY,OACZC,YAAa,SAIrB,OACI,6BACI,kBAACsQ,GAAA,EAAD,CAAgBL,SAAuB,WAAbA,EAAuB/R,MAAOA,EAAM8R,MAAOnM,SAAUQ,KAAK0L,aAAa,WAC7F,kBAACQ,GAAA,EAAD,CAAuBC,WACnB,uBAAG/R,UAAU,kBAAb,wBADJ,kCAMA,kBAACgS,GAAA,EAAD,KACKpM,KAAKqM,cAAcrM,KAAKsM,gBAGjC,kBAACL,GAAA,EAAD,CAAgBL,SAAuB,WAAbA,EAAuB/R,MAAOA,EAAM8R,MAAOnM,SAAUQ,KAAK0L,aAAa,WAC7F,kBAACQ,GAAA,EAAD,CAAuBC,WACnB,uBAAG/R,UAAU,kBAAb,wBADJ,iCAMA,kBAACgS,GAAA,EAAD,KACKpM,KAAKqM,cAAcrM,KAAKuM,YAAa,KAG9C,kBAACN,GAAA,EAAD,CAAgBL,SAAuB,WAAbA,EAAuB/R,MAAOA,EAAM8R,MAAOnM,SAAUQ,KAAK0L,aAAa,WAC7F,kBAACQ,GAAA,EAAD,CAAuBC,WACnB,uBAAG/R,UAAU,kBAAb,wBADJ,8BAMA,kBAACgS,GAAA,EAAD,KACKpM,KAAKqM,cAAcrM,KAAKwM,qBAGjC,kBAACP,GAAA,EAAD,CAAgBL,SAAuB,WAAbA,EAAuB/R,MAAOA,EAAM8R,MAAOnM,SAAUQ,KAAK0L,aAAa,WAC7F,kBAACQ,GAAA,EAAD,CAAuBC,WACnB,uBAAG/R,UAAU,kBAAb,wBADJ,+BAMA,kBAACgS,GAAA,EAAD,KACKpM,KAAKqM,cAAcrM,KAAKyM,iBAGjC,kBAACR,GAAA,EAAD,CAAgBL,SAAuB,WAAbA,EAAuB/R,MAAOA,EAAM8R,MAAOnM,SAAUQ,KAAK0L,aAAa,WAC7F,kBAACQ,GAAA,EAAD,CAAuBC,WACnB,uBAAG/R,UAAU,kBAAb,wBADJ,wBAImD,IAAzB4F,KAAK1D,MAAMuP,UAAkB,MAAQ7L,KAAK1D,MAAMuP,WAE1E,kBAACO,GAAA,EAAD,KACKpM,KAAKqM,cAAcrM,KAAK0M,oBAE7B,kBAACxJ,EAAA,EAAD,MACA,kBAACyJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACK,iCACD,kBAACC,GAAA,EAAD,CACI3R,MAAO8E,KAAK1D,MAAMuP,UAClBrM,SAAU,SAACqB,GAAD,OAAW,EAAKT,SAAS,CAAEyL,UAAWhL,EAAMC,OAAO5F,UAE7D,kBAACsN,GAAA,EAAD,CAAUtN,MAAO,GAAjB,KACA,kBAACsN,GAAA,EAAD,CAAUtN,MAAO,GAAjB,KACA,kBAACsN,GAAA,EAAD,CAAUtN,MAAO,GAAjB,KACA,kBAACsN,GAAA,EAAD,CAAUtN,MAAO,GAAjB,KACA,kBAACsN,GAAA,EAAD,CAAUtN,MAAO,GAAjB,KACA,kBAACsN,GAAA,EAAD,CAAUtN,MAAO,GAAjB,KACA,kBAACsN,GAAA,EAAD,CAAUtN,MAAO,GAAjB,KACA,kBAACsN,GAAA,EAAD,CAAUtN,MAAO,IAAjB,MACA,kBAACsN,GAAA,EAAD,CAAUtN,MAAO,IAAjB,MACA,kBAACsN,GAAA,EAAD,CAAUtN,MAAO,IAAjB,e,GApMXV,aCCNsS,G,iLAZP,OACI,yBAAKjT,MAAO,CACRuI,gBAAiBpC,KAAKrD,MAAMoQ,MAC5B1L,OAAQ,QACRvH,MAAO,UAEP,4BAAKkG,KAAKrD,MAAMqQ,a,GARbxS,aCMbyS,G,iLAIE,OADAjE,QAAQC,IAAIjJ,KAAKrD,MAAMsQ,KAEnB,6BACI,0CAEIjN,KAAKrD,MAAMsQ,IAAInI,IAAI,SAAC0F,GAChB,OACI,kBAAC,GAAD,iBACQA,EADR,CAEIrL,QAAS,uB,GAZvB3E,aAwBH6B,eAAQ,SAAAC,GAGnB,MAAO,CACH2Q,IAHY3Q,EAAR2Q,MAMR,SAAAxQ,GACI,OAAOC,YAAmB,GAAID,IARvBJ,CASR4Q,I,oBCdDC,G,0LAEgB1C,GAQd,OAPkBA,EAAK2C,MAAMC,OAAO,SAACC,GACjC,OAAIA,EAAKC,YAMMpM,S,+BAGb,IAAD,OACGpE,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAAClD,EAAA,EAAD,CAAOQ,UAAW0C,EAAQuO,MACtB,kBAACkC,GAAA,EAAD,CACIrS,MAAO8E,KAAKrD,MAAM6Q,QAClBhO,SAAU,SAACqB,EAAO3F,GACd,EAAKyB,MAAM8Q,cAAcvS,IAE7BwS,eAAe,UACfC,UAAU,YACVhP,QAAQ,aACRiP,cAAc,QAGV5N,KAAKrD,MAAMkR,KAAK/I,IAAI,SAAC0F,GACjB,OACI,kBAACsD,GAAA,EAAD,CACIpO,MACI,kBAACyF,GAAA,EAAD,CACA/K,UAAW0C,EAAQ4G,QACnB9E,MAAM,YACNwG,aAAc,EAAK2I,kBAAkBvD,IAChCA,EAAKwD,UAGd9I,IAAKsF,EAAKpG,GACVlJ,MAAOsP,EAAKpG,a,GAzC5B5J,aAyDL8I,OACXnB,YAzEW,SAAApH,GAAK,MAAK,CACrBsQ,KAAM,CACFC,SAAU,EACVxR,MAAO,OACP2B,SAAU,IACVC,WAAY,OACZC,YAAa,OACbsS,aAAc,UAGlBvK,QAAS,CACLA,QAAQ,KAAD,OAAO3I,EAAMwI,QAAQ,GAArB,UA+DXlH,YAAQ,SAAAC,GAGJ,MAAO,CACHuR,KAHavR,EAATuR,OAMR,SAAApR,GACI,OAAOC,YAAmB,GAAID,KAV3B6G,CAYb4J,I,oGChGK,SAASgB,GAASrQ,GACrB,MAAO,CACHlD,KAAM,WACNkD,QAID,SAASsQ,GAAStQ,GACrB,MAAO,CACHlD,KAAM,WACNkD,QAID,SAASuQ,GAAYvQ,GACxB,MAAO,CACHlD,KAAM,cACNkD,QAID,SAASwQ,GAAYxQ,GACxB,MAAO,CACHlD,KAAM,cACNkD,QAID,SAASyQ,GAAUzQ,GACtB,MAAO,CACHlD,KAAM,YACNkD,QAID,SAAS0Q,GAAU1Q,GACtB,MAAO,CACHlD,KAAM,YACNkD,QCnBR,IAAM1C,GAAW,eACVqT,GAGDC,G,YACF,WAAY9R,GAAQ,IAAD,0BAGPuR,GAFR,4CAAMvR,KAEoBA,MAAlBuR,SAHO,OAIf,EAAKA,SAAWA,EAEhB,EAAKQ,eAAiB,EAAKA,eAAe7K,KAApB,iBACtB,EAAK8K,SAAW,EAAKA,SAAS9K,KAAd,iBAEhB,EAAKvH,MAAQ,CACTsS,KAAK,aACDxK,GAAI,GACJyK,KAAM,GACNvB,WAAW,EACXwB,MAAO,GACPC,WAAY,GACT,EAAKpS,MAAMiS,OAhBP,E,yEAsBf,QAAO5O,KAAK1D,MAAMsS,KAAKxK,K,qCAGZ1E,EAAOxE,GAClB8E,KAAKI,SAAL,eACOJ,KAAK1D,MADZ,CAEIsS,KAAK,eACE5O,KAAK1D,MAAMsS,KADd,eAEClP,EAAQxE,S,+BAKZ8M,GACLA,EAAEgH,iBAEF,IAAI5K,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBqK,EAAO,GAEP5O,KAAKiP,aACLL,EAAI,eACG5O,KAAK1D,MAAMsS,MAElB5O,KAAKrD,MAAM2R,UAAU,CACjBlK,GAAIpE,KAAKrD,MAAMuS,OACfN,WAGJA,EAAI,eACG5O,KAAK1D,MAAMsS,KADd,CAEAxK,OAEJpE,KAAKrD,MAAMuR,SAAS,CAChB9J,GAAIpE,KAAKrD,MAAMuS,OACfN,UAIR5O,KAAKrD,MAAMwS,qB,+BAGL,IAAD,OACGP,EAAS5O,KAAK1D,MAAdsS,KACR,OACI,kBAACQ,GAAA,EAAD,CACIpJ,KAAMhG,KAAKrD,MAAM0S,cACjBnJ,QAASlG,KAAKrD,MAAMwS,iBACpBG,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAavM,GAAG,qBAAqB,cAAgB4L,EAAKxK,IAC1D,0BAAMuK,SAAU3O,KAAK2O,UACjB,kBAACa,GAAA,EAAD,KACI,kBAACpQ,GAAA,EAAD,CACIC,QACI,kBAACoQ,GAAA,EAAD,CACIlQ,QAASqP,EAAKtB,UACd9N,SAAU,kBAAM,EAAKkP,eAAe,aAAcE,EAAKtB,YACvDpS,MAAO,MAGfwE,MACI,kBAACkN,GAAA,EAAD,KACI,kBAAC8C,GAAA,EAAD,CAAYC,QAAQ,QAApB,QACA,kBAACC,GAAA,EAAD,CACIlP,WAAS,EACTmP,WAAS,EACT7M,GAAG,OACH9H,MAAO0T,EAAKC,KACZrP,SAAU,SAACwI,GACP,EAAK0G,eAAe,OAAQ1G,EAAElH,OAAO5F,aAKzD,6BACA,iDAEI,kBAAC6F,EAAA,EAAD,CACInC,MAA2B,IAApBgQ,EAAKG,WAAmB,UAAY,UAC3C5P,QACI,WACI,EAAKuP,eAAe,aAAc,IAG1C/J,aAAW,UACX,uBAAGvK,UAAU,kBAAb,iBAIJ,kBAAC2G,EAAA,EAAD,CACInC,MAA2B,IAApBgQ,EAAKG,WAAmB,UAAY,UAC3C5P,QACI,WACI,EAAKuP,eAAe,aAAc,IAG1C/J,aAAW,UACX,uBAAGvK,UAAU,kBAAb,SAIJ,kBAAC2G,EAAA,EAAD,CACInC,MAA2B,IAApBgQ,EAAKG,WAAmB,UAAY,UAC3C5P,QACI,WACI,EAAKuP,eAAe,aAAc,IAG1C/J,aAAW,UACX,uBAAGvK,UAAU,kBAAb,mBAaR,6BACA,kBAACwS,GAAA,EAAD,KACI,kBAACpM,GAAA,EAAD,CACI7B,QAAQ,SACRe,MAAM,QACNmQ,WAAS,EACTC,WAAS,EACTC,KAAK,IACL7U,MAAO0T,EAAKE,MACZtP,SAAU,SAACwI,GACP,EAAK0G,eAAe,QAAS1G,EAAElH,OAAO5F,YAItD,kBAAC8U,GAAA,EAAD,KACI,kBAAC/Q,EAAA,EAAD,CAAQE,QAASa,KAAKrD,MAAMwS,iBAAkBvQ,MAAM,WAApD,UAGA,kBAACK,EAAA,EAAD,CAAQtE,KAAK,SAASiE,MAAM,WAA5B,e,GAnKDpE,aA6KR6B,eAAQ,WACnB,MAAO,IAEP,SAAAI,GACI,OAAOC,YAAmBvB,GAAasB,IAJhCJ,CAKRoS,IC9KDtT,GAAW,eACVqT,GA2DDyB,G,YACF,WAAYtT,GAAQ,IAAD,6BACf,4CAAMA,KAE4CA,MAA1C0R,EAHO,EAGPA,YAAaC,EAHN,EAGMA,UAAWJ,EAHjB,EAGiBA,SAHjB,OAIf,EAAKG,YAAcA,EACnB,EAAKC,UAAYA,EACjB,EAAKJ,SAAWA,EAEhB,EAAKS,SAAW,EAAKA,SAAS9K,KAAd,iBAChB,EAAKsL,iBAAmB,EAAKA,iBAAiBtL,KAAtB,iBACxB,EAAKqM,oBAAsB,EAAKA,oBAAoBrM,KAAzB,iBAC3B,EAAKsM,iBAAmB,EAAKA,iBAAiBtM,KAAtB,iBAExB,EAAKvH,MAAQ,CACT8T,eAAe,EACfC,iBAAiB,EACjBhB,eAAe,EACfiB,cAAc,EACd1B,KAAM,CACFG,WAAY,GAEhBwB,YAAa,IArBF,E,sEAyBVC,EAAMpM,EAAIW,GACf,IAAK,IAAI4C,EAAI,EAAGA,EAAI6I,EAAKtP,OAAQyG,IAC7B,GAAI6I,EAAK7I,GAAGvD,KAAOA,EACf,OAAKW,EAGMyL,EAAK7I,GAFL6I,EAAK7I,GAAGwF,Q,yCAS3BnN,KAAKkQ,sBACLlQ,KAAKkO,SAAS,CACV9J,GAAIpE,KAAKrD,MAAM8T,YACf7B,KAAM5O,KAAK1D,MAAMiU,gB,4CAKrBvQ,KAAKI,SAAS,CACVkQ,cAAc,M,yCAKlBtQ,KAAKI,SAAS,CACViP,eAAe,M,mCAIV3P,GACT,IAAIxE,EAAQ8E,KAAK1D,MAAMoD,GACvBM,KAAKI,SAAL,eACKV,GAASxE,M,qCAIHwE,EAAOxE,GAClB8E,KAAKI,SAAL,eACOJ,KAAK1D,MADZ,CAEIsS,KAAK,eACE5O,KAAK1D,MAAMsS,KADd,eAEClP,EAAQxE,S,kCAKT6J,GAA8E,IAAxE2L,EAAuE,uDAA/D1Q,KAAK2Q,SAAS3Q,KAAKrD,MAAMkR,KAAM7N,KAAKrD,MAAM8T,aAAa,GAC7E,OAAOC,EAAMtD,OAAO,SAACC,GACjB,OAAItI,GACQsI,EAAKC,UAEVD,EAAKC,c,+BAIXtF,GACLA,EAAEgH,iBACFhP,KAAKmP,mBACL,IAAMtR,EAAO,CACTuG,GAAIpE,KAAKrD,MAAM8T,YACf7B,KAAM5O,KAAK1D,MAAMsS,MAErB5O,KAAKsO,UAAUzQ,K,2CAGE2M,GAAO,IAChB1N,EAAYkD,KAAKrD,MAAjBG,QAER,OADuB0N,EAAfuE,YAEJ,KAAK,EAAG,OAAO,kBAACxJ,EAAA,EAAD,CAAQnL,UAAW0C,EAAQ8T,eACtC,uBAAGxW,UAAU,kBAAb,iBAEJ,KAAK,EAAG,OAAO,kBAACmL,EAAA,EAAD,CAAQnL,UAAW0C,EAAQ+T,kBACtC,uBAAGzW,UAAU,kBAAb,yBAEJ,KAAK,EAAG,OAAO,kBAACmL,EAAA,EAAD,CAAQnL,UAAW0C,EAAQgU,gBACtC,uBAAG1W,UAAU,kBAAb,kBAEJ,QAAS,OAAO,kBAACmL,EAAA,EAAD,CAAQnL,UAAW0C,EAAQ+T,kBACvC,uBAAGzW,UAAU,kBAAb,4B,kCAKAoQ,GAAO,IAAD,OACN1N,EAAYkD,KAAKrD,MAAjBG,QAER,OAAO,kBAAC6N,EAAA,EAAD,CACHzF,IAAKsF,EAAKpG,GACV2M,UAAMC,EACNzG,OAAK,EACLpO,QAAM,EACNgD,QAAS,SAAC6I,GACoB,QAAvBA,EAAElH,OAAOmQ,WAEZ,EAAK7Q,SAAS,CACViP,eAAe,EACfT,KAAK,eACE,EAAKtS,MAAMsS,KADd,GAEGpE,MAIfpQ,UAAW0C,EAAQoU,UAEnB,kBAACC,GAAA,EAAD,KACKnR,KAAKoR,qBAAqB5G,IAE/B,kBAACiF,GAAA,EAAD,CACIlQ,QAASiL,EAAK8C,UACd9N,SAAU,WACN,IAAM3B,EAAO,CACTuG,GAAI,EAAKzH,MAAM8T,YACf7B,KAAK,eACEpE,EADH,CAEA8C,WAAY9C,EAAK8C,aAGzB,EAAKgB,UAAUzQ,MAGvB,kBAAC+M,EAAA,EAAD,CACIxQ,UAAWoQ,EAAK8C,UAAYxQ,EAAQuU,kBAAoBvU,EAAQ6Q,UAChEnL,QAASgI,EAAKqE,KAEdxM,UAAWmI,EAAKsE,MACV,uBAAG1U,UAAU,kBAAb,SACA,OAGV,kBAACkX,GAAA,EAAD,KACI,kBAACvQ,EAAA,EAAD,CACInC,MAAM,UACNO,QAAS,WACL,EAAKiB,SAAS,CACViP,eAAe,EACfT,KAAK,eACE,EAAKtS,MAAMsS,KADd,GAEGpE,OAIf,uBAAGpQ,UAAU,kBAAb,SAIJ,kBAAC2G,EAAA,EAAD,CACI4D,aAAW,SACXxF,QAAS,WACL,EAAKiB,SAAS,CACVkQ,cAAc,EACdC,YAAY,eACL/F,KAGX,IAAM3M,EAAO,CACTuG,GAAI,EAAKzH,MAAM8T,YACf7B,KAAMpE,GAEV,EAAK6D,YAAYxQ,KAErB,uBAAGzD,UAAU,kBAAb,uB,+BAQN,IAAD,OACG0C,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAACuN,GAAA,EAAD,CAAMjQ,UAAW0C,EAAQuO,MACrB,kBAACkG,GAAA,EAAD,CAAepS,QAAS,kBAAM,EAAKuM,aAAa,qBAC5C,kBAAC3K,EAAA,EAAD,CAAY5B,QAAS,kBAAM,EAAKuM,aAAa,qBACzC,uBAAGtR,UAAW,kBACR4F,KAAK1D,MAAM+T,gBAA0C,oBAAxB,wBAH3C,eASIrQ,KAAK1D,MAAM+T,iBAAmBrQ,KAAKwR,aAAY,GAAM1M,IAAI,SAAC0F,GACtD,OACI,EAAKiH,YAAYjH,KAI7B,kBAAC+G,GAAA,EAAD,CAAepS,QAAS,kBAAM,EAAKuM,aAAa,mBAC5C,kBAAC3K,EAAA,EAAD,CAAY5B,QAAS,kBAAM,EAAKuM,aAAa,mBACzC,uBAAGtR,UAAW,kBACR4F,KAAK1D,MAAM8T,cAAwC,oBAAxB,wBAHzC,aASIpQ,KAAK1D,MAAM8T,eAAiBpQ,KAAKwR,aAAY,GAAO1M,IAAI,SAAC0F,GACrD,OACI,EAAKiH,YAAYjH,KAI7B,kBAACtH,EAAA,EAAD,MAEIlD,KAAK1D,MAAM+S,cACL,kBAAC,GAAD,CACET,KAAM5O,KAAK1D,MAAMsS,KACjBS,cAAerP,KAAK1D,MAAM+S,cAC1BH,OAAQlP,KAAKrD,MAAM8T,YACnBtB,iBAAkBnP,KAAKmP,mBAEzB,KAEV,kBAACvJ,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAMhG,KAAK1D,MAAMgU,aACjBrK,iBAAkB,IAClBC,QAASlG,KAAKkQ,oBACdwB,aAAc,CACV,mBAAoB,cAExBlL,QAAS,0BAAMxD,GAAG,cAAT,gBACTe,OAAQ,CACJ,kBAAC9E,EAAA,EAAD,CAAQiG,IAAI,OAAOtG,MAAM,YAAYM,KAAK,QAAQC,QAASa,KAAKmQ,kBAAhE,QAGA,kBAACpP,EAAA,EAAD,CACImE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACNxE,UAAW0C,EAAQ6J,MACnBxH,QAASa,KAAKkQ,qBAEd,uBAAG9V,UAAU,kBAAb,kB,GA3QFI,aAwRX8I,OACXnB,YAjVW,SAAApH,GAAK,MAAK,CACrBsQ,KAAM,CACFvR,MAAO,OACP2B,SAAU,IACVC,WAAY,OACZC,YAAa,QAGjBE,OAAQ,CACJA,OAAQd,EAAMwI,QAAQ,IAG1B8N,kBAAmB,CACfM,eAAgB,eAChB/S,MAAO7D,EAAM8B,QAAQe,KAAK4E,SAG9BoP,MAAO,CACHC,WAAY,OACZC,cAAe,UAGnBxM,OAAQ,CACJzJ,OAAQ,IAGZiV,eAAgB,CACZlS,MAAO,OACPwD,gBAAiB,WAGrByO,iBAAkB,CACdjS,MAAO,OACPwD,gBAAiBrH,EAAM8B,QAAQ2F,QAAQF,MAG3CsO,cAAe,CACXhS,MAAO,OACPwD,gBAAiB,WAGrBuE,MAAO,CACH7M,MAAOiB,EAAMwI,QAAQ,GACrBlC,OAAQtG,EAAMwI,QAAQ,IAG1BwO,aAAc,CACVnT,MAAO,OACPwD,gBAAiBrH,EAAM8B,QAAQwF,UAAUC,MAG7CqL,UAAW,CACP/O,MAAO7D,EAAM8B,QAAQe,KAAK4E,YA8R9BnG,YAAQ,SAAAC,GAGJ,MAAO,CACHuR,KAHavR,EAATuR,OAMR,SAAApR,GACI,OAAOC,YAAmBvB,GAAasB,KAVpC6G,CAYb2M,IC5WI9U,GAAW,eACVqT,GAGDwD,G,YACF,WAAYrV,GAAQ,IAAD,6BACf,4CAAMA,KAE+BA,MAA7BwR,EAHO,EAGPA,SAAUI,EAHH,EAGGA,UAHH,OAIf,EAAKJ,SAAWA,EAChB,EAAKI,UAAYA,EAEjB,EAAK7C,aAAe,EAAKA,aAAa7H,KAAlB,iBACpB,EAAK8K,SAAW,EAAKA,SAAS9K,KAAd,iBAEhB,EAAKvH,MAAQ,CACTkU,KAAK,aACDpM,GAAI,GACJ4J,SAAU,GACViE,UAAU,EACV9E,MAAO,IACJ,EAAKxQ,MAAM6T,OAhBP,E,yEAsBf,QAAOxQ,KAAK1D,MAAMkU,KAAKpM,K,mCAGd1E,EAAOxE,GAChB8E,KAAKI,SAAS,CACVoQ,KAAK,eACExQ,KAAK1D,MAAMkU,KADd,eAEC9Q,EAAQxE,Q,+BAKZ8M,GAEL,GADAA,EAAEgH,iBACEhP,KAAKiP,YACLjP,KAAKuO,UAAUvO,KAAK1D,MAAMkU,UACvB,CACH,IAAIpM,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBvE,KAAKmO,SAAL,eACOnO,KAAK1D,MAAMkU,KADlB,CAEIpM,QAIRpE,KAAKrD,MAAMwJ,gB,+BAIL,IAAD,OACL,OACI,kBAACiJ,GAAA,EAAD,CACIpJ,KAAMhG,KAAKrD,MAAMqJ,KACjBE,QAASlG,KAAKrD,MAAMwJ,YACpBmJ,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAavM,GAAG,qBAERhD,KAAKiP,YACC,YACA,gBAGd,0BAAMN,SAAU3O,KAAK2O,UACjB,kBAACa,GAAA,EAAD,KACI,kBAAC5C,GAAA,EAAD,KACI,kBAAC8C,GAAA,EAAD,CAAYC,QAAQ,OAApB,kBACA,kBAACC,GAAA,EAAD,CACIlP,WAAS,EACTsC,GAAG,OACH9H,MAAO8E,KAAK1D,MAAMkU,KAAKxC,SACvBxO,SAAU,SAACwI,GACP,EAAK0D,aAAa,WAAY1D,EAAElH,OAAO5F,YAIvD,kBAAC8U,GAAA,EAAD,KACI,kBAAC/Q,EAAA,EAAD,CAAQE,QAASa,KAAKrD,MAAMwJ,YAAavH,MAAM,WAA/C,UAGA,kBAACK,EAAA,EAAD,CAAQtE,KAAK,SAASiE,MAAM,WAA5B,e,GAlFDpE,aA4FR6B,eAAQ,WACnB,MAAO,IAEP,SAAAI,GACI,OAAOC,YAAmBvB,GAAasB,IAJhCJ,CAKR2V,IChHQzV,GAJJ,CACPsC,KAAM,OCuBJ1D,GAAW,eACZqT,GA0BC0D,G,YACJ,WAAYvV,GAAQ,IAAD,uBACjB,4CAAMA,KAuCRwV,QAAU,SAAC3B,GACT,EAAKpQ,SAAS,CACZgS,IAAI,GAAD,oBACE,EAAK9V,MAAM8V,KADb,CAED5B,IAEF6B,kBAAkB,KA3CpB,EAAKC,WAAa,EAAKA,WAAWzO,KAAhB,iBAClB,EAAKqM,oBAAsB,EAAKA,oBAAoBrM,KAAzB,iBAC3B,EAAKsM,iBAAmB,EAAKA,iBAAiBtM,KAAtB,iBALP,MAOiB,EAAKlH,MAA/ByR,EAPS,EAOTA,YAAaD,EAPJ,EAOIA,SAPJ,OAQjB,EAAKC,YAAcA,EACnB,EAAKD,SAAWA,EAEhB,EAAK7R,MAAQ,CACX8V,IAAI,aAAK,EAAKzV,MAAMkR,MACpB0E,SAAUhW,GAAKsC,KACfoR,YAAa,EACboC,kBAAkB,EAClBG,kBAAkB,EAClBC,gBAAiB,IAjBF,E,iFAsBjBzS,KAAKI,SAAS,CACZgS,IAAI,aAAKpS,KAAKrD,MAAMkR,U,+BAKf2C,EAAMpM,EAAIW,GACjB,IAAK,IAAI4C,EAAI,EAAGA,EAAI6I,EAAKtP,OAAQyG,IAC/B,GAAI6I,EAAK7I,GAAGvD,KAAOA,EACjB,OAAKW,EAGIyL,EAAK7I,GAFL6I,EAAK7I,GAAGwF,Q,oCAmBrB,OAAOnN,KAAK2Q,SAAS3Q,KAAKrD,MAAMkR,KAAM7N,KAAK1D,MAAM2T,aAAa,K,oCAGjD,IAAD,OACZ,OAAOjQ,KAAKrD,MAAMkR,KAAKT,OAAO,SAACoD,GAC7B,OAAIA,EAAKpM,KAAO,EAAK9H,MAAM2T,cAI1B,GAAG7L,K,yCAINpE,KAAKkQ,sBACLlQ,KAAKmO,SAASnO,KAAK1D,MAAMmW,mB,4CAIzBzS,KAAKI,SAAS,CACZkQ,cAAc,M,mCAKhBtQ,KAAKI,SAAS,CACZiS,kBAAkB,EAClBG,kBAAkB,EAClBE,mBAAmB,M,8CAIE,IAAD,OACd5V,EAAYkD,KAAKrD,MAAjBG,QACR,OACE,6BACE,kBAACmC,EAAA,EAAD,CACEN,QAAQ,YACRC,MAAM,YACNM,KAAK,QACL9E,UAAW0C,EAAQX,OACnBgD,QAAS,WACP,EAAKiB,SAAS,CACZiS,kBAAkB,MAPxB,YAYA,kBAACpT,EAAA,EAAD,CACEN,QAAQ,WACRO,KAAK,SACL9E,UAAW0C,EAAQX,OACnBgD,QAAS,WACP,EAAKiB,SAAS,CACZsS,mBAAmB,MANzB,aAWA,kBAACzT,EAAA,EAAD,CACEN,QAAQ,OACRC,MAAM,UACNM,KAAK,QACL9E,UAAW0C,EAAQX,OACnBgD,QAAS,WACP,EAAKiB,SAAS,CACZkQ,cAAc,EACdL,YAAa,EAAK0C,cAClBF,gBAAgB,eACX,EAAKhC,iBAIZ,EAAKrC,YAAY,EAAKqC,iBAd1B,kB,+BAuBI,IAAD,OACC3T,EAAYkD,KAAKrD,MAAjBG,QAER,OACE,yBAAK1C,UAAU,OACb,kBAAC,GAAD,CACEwY,MAAK,aAAM5S,KAAK1D,MAAM8V,KACtB5E,QAASxN,KAAK1D,MAAM2T,YACpB4C,OAAQ7S,KAAKsS,WACbH,QACE,WACE,EAAK/R,SAAS,CACZiS,kBAAkB,KAIxB5E,cACE,SAACrJ,GACC,EAAKhE,SAAS,CACZ6P,YAAa7L,OAKrB,kBAAC,GAAD,CACEqM,YAAazQ,KAAK1D,MAAM2T,YACxB6C,WAAY9S,KAAK8S,WACjBC,WAAY/S,KAAK+S,aAGjB/S,KAAK1D,MAAMkW,iBACP,kBAAC,GAAD,CACAnD,cAAerP,KAAK1D,MAAMkW,iBAC1BQ,SAAUhT,KAAKyQ,cAAczC,SAC7BkB,OAAQlP,KAAK1D,MAAM2T,YACnBd,iBAAkBnP,KAAKsS,WACvBW,QAASjT,KAAKiT,UAEd,KAGJjT,KAAK1D,MAAM+V,iBACP,kBAAC,GAAD,CACArM,KAAMhG,KAAK1D,MAAM+V,iBACjBW,SAAUhT,KAAKyQ,cAAczC,SAC7B7H,YAAanG,KAAKsS,aAElB,KAGJtS,KAAK1D,MAAMoW,kBACP,kBAAC,GAAD,CACA1M,KAAMhG,KAAK1D,MAAMoW,kBACjBlC,KAAMxQ,KAAKyQ,cACXtK,YAAanG,KAAKsS,aAElB,KAEN,kBAAC5N,GAAA,EAAD,CAASwO,oBAAqBzI,IAAM7O,MAAM,gBACxC,kBAACoG,GAAA,EAAD,CACErD,QAAQ,WACRC,MAAM,UACNxE,UAAW0C,EAAQ+H,IACnB1F,QAAS,WACP,EAAKiB,SAAS,CACZoS,kBAAkB,MAGtB,uBAAGpY,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SAApD,sBATF,aAaDqE,KAAKmT,wBACN,kBAACvN,GAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,KAAMhG,KAAK1D,MAAMgU,aACjBrK,iBAAkB,IAClBC,QAASlG,KAAKkQ,oBACdwB,aAAc,CACZ,mBAAoB,cAEtBlL,QAAS,0BAAMxD,GAAG,cAAT,gBACTe,OAAQ,CACN,kBAAC9E,EAAA,EAAD,CAAQiG,IAAI,OAAOtG,MAAM,YAAYM,KAAK,QAAQC,QAASa,KAAKmQ,kBAAhE,QAGA,kBAACpP,EAAA,EAAD,CACEmE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACNxE,UAAW0C,EAAQ6J,MACnBxH,QAASa,KAAKkQ,qBAEd,uBAAG9V,UAAU,kBAAb,kB,GArOKI,aAkPJ8I,OACbnB,YA1Qa,SAAApH,GAAK,MAAK,CACvBsQ,KAAM,CACJvR,MAAO,OACP2B,SAAU,IACVC,WAAY,OACZC,YAAa,QAGfQ,OAAQ,CACNN,OAAQd,EAAMwI,QAAQ,IAGxB6P,aAAc,CACZzX,YAAaZ,EAAMwI,QAAQ,IAG7BsB,IAAK,CACHwD,SAAU,QACVkD,OAAQxQ,EAAMwI,QAAQ,GACtBiI,MAAOzQ,EAAMwI,QAAQ,OAwPvBlH,YAAQ,SAAAC,GAGN,MAAO,CACLuR,KAHevR,EAATuR,OAMR,SAAApR,GACE,OAAOC,YAAmBvB,GAAasB,KAV9B6G,CAYb4O,I,qBC/PamB,G,YA7CX,WAAY1W,GAAQ,IAAD,8BACf,4CAAMA,KACD2W,QAAU,CACXC,QAAS,CACL,CAAC,CAAE,OAAU,CAAC,EAAG,GAAG,KACpB,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CAAC,CAAE,KAAQ,WAAa,CAAE,KAAQ,UAAY,CAAE,OAAU,MAAQ,CAAE,OAAU,OAC9E,CAAC,OAAQ,SACT,CAAC,WAIT,EAAKC,QAAU,CACX,SACA,OAAQ,SAAU,YAAa,SAAU,aACzC,OAAQ,SAAU,SAClB,OAAQ,SAEZ,EAAKlX,MAAQ,CAAEsB,KAAM,IACrB,EAAK8N,aAAe,EAAKA,aAAa7H,KAAlB,iBAnBL,E,0EAsBN3I,GACT8E,KAAKI,SAAS,CAAExC,KAAM1C,M,+BAItB,OACI,kBAAC,KAAD,CACIA,MAAO8E,KAAKrD,MAAMzB,MAClBsE,SAAUQ,KAAKrD,MAAM+O,aACrB3Q,MAAM,OACNuY,QAAStT,KAAKsT,QACdE,QAASxT,KAAKwT,QACd3Z,MAAO,CACHwH,OAAQ,QACRrH,aAAc,OACdoI,gBAAiB,QACjBxD,MAAO,e,GAxCFpE,aCQViZ,GAXE,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WCRG,SAASC,GAAS7V,GACrB,MAAO,CACHlD,KAAM,WACNkD,QAID,SAAS8V,GAAU9V,GACtB,MAAO,CACHlD,KAAM,YACNkD,QAID,SAAS+V,GAAY/V,GACxB,MAAO,CACHlD,KAAM,cACNkD,QCER,IAAM1C,GAAW,eACV0Y,GAgCDC,G,YACF,WAAYnX,GAAQ,IAAD,6BACf,4CAAMA,KAE4CA,MAA1C+W,EAHO,EAGPA,SAAUE,EAHH,EAGGA,YAAaD,EAHhB,EAGgBA,UAHhB,OAIf,EAAKD,SAAWA,EAChB,EAAKE,YAAcA,EACnB,EAAKD,UAAYA,EAEjB,EAAKjI,aAAe,EAAKA,aAAa7H,KAAlB,iBACpB,EAAK8K,SAAW,EAAKA,SAAS9K,KAAd,iBAChB,EAAKkQ,aAAe,EAAKA,aAAalQ,KAAlB,iBAEpB,EAAKvH,MAAQ,CACT0X,KAAK,aACD5P,GAAI,KACJmF,MAAO,GACPY,QAAS,GACT4C,MAAO,UACPkH,KAAM,IAAIA,MACP,EAAKtX,MAAMqX,OAnBP,E,yEAyBf,QAAOhU,KAAK1D,MAAM0X,KAAK5P,K,yCAGR8P,GACf,OAAKlU,KAAKrD,MAAMqX,MAAQE,EAAUF,KAAK5P,KAAOpE,KAAKrD,MAAMqX,KAAK5P,GACzDpE,KAAKrD,MAAMwX,MAaLnU,KAAKI,SAAS,CACjB4T,KAAK,eACEhU,KAAKrD,MAAMqX,QAdfhU,KAAKI,SAAS,CACjB4T,KAAK,aACD5P,GAAI,KACJmF,MAAO,GACPY,QAAS,GACT4C,MAAO,UACPkH,KAAM,IAAIA,MACPjU,KAAKrD,MAAMqX,QAT+C,O,mCAsBhEI,GACTpU,KAAKI,SAAS,CACV4T,KAAK,eACEhU,KAAK1D,MAAM0X,KADd,CAEA7J,QAASiK,Q,wCAKH1U,EAAOxE,GACrB8E,KAAKI,SAAS,CACV4T,KAAK,eACEhU,KAAK1D,MAAM0X,KADd,eAECtU,EAAQxE,Q,qCAMjB8E,KAAK4T,YAAY5T,KAAK1D,MAAM0X,Q,+BAIvBhM,GAEL,GADAA,EAAEgH,iBACEhP,KAAKiP,YACLjP,KAAK2T,UAAU3T,KAAK1D,MAAM0X,UACvB,CACH,IAAI5P,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBvE,KAAK0T,SAAL,eACO1T,KAAK1D,MAAM0X,KADlB,CAEI5P,QAEJpE,KAAKrD,MAAM0X,mBAAmBjQ,M,+BAI5B,IAAD,OACGtH,EAAYkD,KAAKrD,MAAjBG,QACR,OACI,0BAAM6R,SAAU3O,KAAK2O,UACjB,kBAAC/U,EAAA,EAAD,CAAOO,UAAW,GAAIC,UAAW0C,EAAQwX,MACrC,kBAAC9T,GAAA,EAAD,CACIwC,GAAG,aACHkF,WAAY,CACRC,eACI,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACrB,kBAAC9C,EAAA,EAAD,CACI1L,MAAO,CAAEuI,gBAAiBpC,KAAK1D,MAAM0X,KAAKjH,OAC1C3S,UAAW0C,EAAQwI,QAElBtF,KAAK1D,MAAM0X,KAAKzK,MAAM,MAKvCnP,UAAW0C,EAAQyX,WACnBC,UAAQ,EACR/T,YAAY,sBACZoP,WAAS,EACT3U,MAAO8E,KAAK1D,MAAM0X,KAAKzK,MACvB/J,SAAU,SAACwI,GACP,EAAKyM,kBAAkB,QAASzM,EAAElH,OAAO5F,UAGjD,kBAAC,GAAD,CACIA,MAAO8E,KAAK1D,MAAM0X,KAAK7J,QACvBuB,aAAc1L,KAAK0L,eAEvB,yBAAK7R,MAAO,CAAEK,QAAS,iBACnB,kBAAC,gBAAD,CACI0E,MAAOoB,KAAK1D,MAAM0X,KAAKjH,MACvBjT,MAAM,QACN4a,OAAQjB,GACRkB,cAAe,EACfnV,SAAU,SAACtE,GACP,EAAKuZ,kBAAkB,QAASvZ,EAAMmI,SAK9CrD,KAAKiP,YACC,kBAAChQ,EAAA,EAAD,CACEL,MAAM,YACNxE,UAAW0C,EAAQmC,OACnBE,QAASa,KAAK+T,cAHhB,UAMA,kBAAC9U,EAAA,EAAD,CACEL,MAAM,YACNxE,UAAW0C,EAAQmC,OACnBE,QAASa,KAAKrD,MAAMiY,cAHtB,UAOV,kBAAC3V,EAAA,EAAD,CAAQ7E,UAAW0C,EAAQmC,OAAQtE,KAAK,SAASiE,MAAM,WAAvD,c,GAnJIpE,aA4JT8I,OACXnB,YA1LW,SAAApH,GAAK,MAAK,CACrBuZ,KAAM,CACFxa,MAAO,OACP2B,SAAU,IACV2G,gBAAiBrH,EAAM8B,QAAQ2G,WAAWC,OAG9CoR,YAAa,CACT/a,MAAO,OACP2B,SAAU,IACV2G,gBAAiBrH,EAAM8B,QAAQ2G,WAAWC,MAC1CpC,OAAQ,KAGZiE,OAAQ,CACJxL,MAAO,GACPuH,OAAQ,GACR3F,WAAY,IAGhBuD,OAAQ,CACJ/E,QAAS,gBAGbqa,WAAY,MAmKZlY,YAAQ,WACJ,MAAO,IAEP,SAAAI,GACI,OAAOC,YAAmBvB,GAAasB,KANpC6G,CAQbwQ,ICxNK,SAASgB,GAASjX,GACrB,MAAO,CACHlD,KAAM,WACNkD,QAID,SAASkX,GAASlX,GACrB,MAAO,CACHlD,KAAM,WACNkD,QAID,SAASmX,GAAYnX,GACxB,MAAO,CACHlD,KAAM,cACNkD,QAID,SAASoX,GAAapX,GACzB,MAAO,CACHlD,KAAM,eACNkD,QAID,SAASqX,GAAerX,GAC3B,MAAO,CACHlD,KAAM,iBACNkD,QCNR,IAAM1C,GAAW,eACVga,GAgBDC,GAAY,CACdhR,GAAI,KACJmF,MAAO,GACPY,QAAS,GACT4C,MAAO,UACPkH,KAAM,IAAIA,MAGRnF,G,YACF,WAAYnS,GAAQ,IAAD,8BACf,4CAAMA,KAEDiY,aAAe,EAAKA,aAAa/Q,KAAlB,iBACpB,EAAKwQ,mBAAqB,EAAKA,mBAAmBxQ,KAAxB,iBAE1B,EAAKvH,MAAQ,CACT+Y,YAAa,EAAKC,WAClBnB,OAAO,GARI,E,gFAgBAD,EAAWqB,GAC1B,OAAIrB,EAAUpF,QAAU9O,KAAKrD,MAAMmS,MAAc,KAE5C9O,KAAKrD,MAAMmS,MAAM5N,OAMflB,KAAKI,SAAS,CACjBiV,YAAarV,KAAKrD,MAAMmS,MAAM,KANvB9O,KAAKI,SAAS,CACjBiV,YAAaD,O,iCAUS,IAAzB1N,EAAwB,uDAAlB1H,KAAKrD,MAAMmS,MACtB,OAAKpH,EAAIxG,OAEFwG,EAAI,GAFa0N,K,wCAKT,IAAD,SACapV,KAAKrD,MAAxBG,EADM,EACNA,QAASgS,EADH,EACGA,MAEjB,OAAKA,GAAUA,EAAM5N,OAGjB,kBAACtH,EAAA,EAAD,CAAOO,UAAW,EAAGC,UAAW0C,EAAQ0Y,WACpC,kBAACnL,GAAA,EAAD,CAAMC,UAAU,MAAMC,OAAK,GAEnBuE,EAAMhK,IAAI,SAACwP,EAAMtP,GACb,OACI,kBAACyF,EAAA,EAAD,CAAMhG,IAAI,EACNS,IAAKoP,EAAKlQ,GACVvK,MAAO,CAAE6Q,gBAAyB,IAAR1F,IAE1B,6BACI,kBAAC2F,EAAA,EAAD,CACIJ,OAAK,EACLpO,QAAM,EACNgD,QAAS,WACL,EAAKiB,SAAS,CACViV,YAAaI,KAAEC,KAAK,EAAK/Y,MAAMmS,MAAO,CAAE1K,GAAIkQ,EAAKlQ,SAIzD,kBAACmB,EAAA,EAAD,CACI1L,MAAO,CACHuI,gBAAiBkS,EAAKvH,MACtBpR,YAAa,KAGhB2Y,EAAK/K,MAAM,IAEhB,kBAACqB,EAAA,EAAD,CAAcpI,QAAS8R,EAAK/K,SAG1B,EAAK5M,MAAMmS,MAAM5N,OAAS,IAAM8D,EAC5B,kBAAC9B,EAAA,EAAD,CAASvE,QAAQ,UACjB,WAnCN,O,wCA+CrB,IAAD,OACMqB,KAAKrD,MAAjBG,QAER,OACI,kBAAC4H,GAAA,EAAD,CAASwO,oBAAqBzI,IAAM7O,MAAM,gBACtC,kBAAC6O,EAAA,EAAD,CAAMhG,IAAI,GACN,kBAACzC,GAAA,EAAD,CACIpD,MAAM,UACN/E,MAAO,CAAE8B,YAAa,QACtBwD,QAAS,WACL,EAAKiB,SAAS,CACV+T,OAAO,EACPkB,YAAa,CACTjR,GAAI,KACJmF,MAAO,GACPY,QAAS,GACT4C,MAAO,UACPkH,KAAM,IAAIA,UAItB,uBAAG7Z,UAAU,kBAAb,mB,qCAQhB4F,KAAKI,SAAS,CACV+T,OAAO,EACPkB,YAAarV,KAAKsV,e,yCAIPlR,GACfpE,KAAKI,SAAS,CACV+T,OAAO,M,gCAKX,OAAO,aACH/P,GAAI,KACJmF,MAAO,GACPY,QAAS,GACT4C,MAAO,UACPkH,KAAM,IAAIA,MACNjU,KAAK1D,MAAM6X,MAAQ,CAAE/P,GAAI,MAASqR,KAAEC,KAAK1V,KAAKrD,MAAMmS,MAAO,CAAE1K,GAAIpE,KAAK1D,MAAMqZ,e,+BAKpF,OACI,6BACI,kBAAC9K,GAAA,EAAD,CACIC,WAAS,EACTvH,QAAS,GACTnJ,UAAW,GACX2Q,UAAU,MACVC,QAAQ,SACR7D,WAAW,SACXtN,MAAO,CAAEE,UAAW,KAEnBiG,KAAK4V,kBACL5V,KAAK6V,kBACN,kBAACpL,EAAA,EAAD,CAAMhG,IAAI,EAAM5K,MAAO,CAAE6Q,gBAAiB,MACtC,kBAAC,GAAD,CACIsJ,KAAMhU,KAAK1D,MAAM+Y,YACjBT,aAAc5U,KAAK4U,aACnBT,MAAOnU,KAAK1D,MAAM6X,MAClBE,mBAAoBrU,KAAKqU,4B,GA/JjC7Z,aAwKL8I,OACXnB,YA9LW,SAAApH,GAAK,MAAK,CACrBya,UAAW,CACP1b,MAAO,OACP2B,SAAU,IACV2G,gBAAiBrH,EAAM8B,QAAQ2G,WAAWC,MAC1C9H,YAAa,OACb3B,aAAc,QAElBqR,KAAM,CACFC,SAAU,MAsLdjP,YAAQ,SAAAC,GAGJ,MAAO,CACHwS,MAHcxS,EAAVwS,QAMR,SAAArS,GACI,OAAOC,YAAmBvB,GAAasB,KAVpC6G,CAYbwL,I,oBChNI3T,GAAW,eACVga,GAGDW,G,YACF,WAAYnZ,GAAQ,IAAD,6BACf,4CAAMA,KAEqDA,MAAnDqY,EAHO,EAGPA,YAAaE,EAHN,EAGMA,eAAgBD,EAHtB,EAGsBA,aAHtB,OAIf,EAAKD,YAAcA,EACnB,EAAKE,eAAiBA,EACtB,EAAKD,aAAeA,EAEpB,EAAKvJ,aAAe,EAAKA,aAAa7H,KAAlB,iBACpB,EAAK8K,SAAW,EAAKA,SAAS9K,KAAd,iBAChB,EAAKkQ,aAAe,EAAKA,aAAalQ,KAAlB,iBAEpB,EAAKvH,MAAQ,CACTyZ,QAAQ,aACJ3R,GAAI,KACJmF,MAAO,GACPyM,MAAO,EACP/B,KAAM,IAAIA,KACVlH,MAAO,UACPkJ,KAAM,GACH,EAAKtZ,MAAMoZ,UApBP,E,yEA0Bf,QAAO/V,KAAK1D,MAAMyZ,QAAQ3R,K,mCAGjB1E,EAAOxE,GAChB8E,KAAKI,SAAS,CACV2V,QAAQ,eACD/V,KAAK1D,MAAMyZ,QADX,eAEFrW,EAAQxE,Q,qCAMjB8E,KAAKrD,MAAMwJ,cACXnG,KAAKkV,eAAelV,KAAK1D,MAAMyZ,W,+BAG1B/N,GAEL,GADAA,EAAEgH,iBACEhP,KAAKiP,YACLjP,KAAKiV,aAAajV,KAAK1D,MAAMyZ,aAC1B,CACH,IAAI3R,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBvE,KAAKgV,YAAL,eACOhV,KAAK1D,MAAMyZ,QADlB,CAEI3R,QAIRpE,KAAKrD,MAAMwJ,gB,+BAGL,IAAD,OACL,OACI,kBAACiJ,GAAA,EAAD,CACIpJ,KAAMhG,KAAKrD,MAAMqJ,KACjBE,QAASlG,KAAKrD,MAAMwJ,YACpBmJ,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAavM,GAAG,qBAERhD,KAAKiP,YACC,eACA,kBAGNjP,KAAKiP,aACF,kBAACvK,GAAA,EAAD,CAASwO,oBAAqBzI,IAAM7O,MAAM,kBACzC,kBAACmF,EAAA,EAAD,CACImE,IAAI,SACJP,aAAW,SACX/F,MAAM,UACNO,QAASa,KAAK+T,cAEd,uBAAG3Z,UAAU,kBAAb,qBAKhB,0BAAMuU,SAAU3O,KAAK2O,UACjB,kBAACa,GAAA,EAAD,KACI,kBAAC5C,GAAA,EAAD,KACI,kBAACpM,GAAA,EAAD,CACIgU,UAAQ,EACR9T,WAAS,EACThB,MAAM,oBACNsD,GAAG,OACH9H,MAAO8E,KAAK1D,MAAMyZ,QAAQxM,MAC1B/J,SAAU,SAACwI,GACP,EAAK0D,aAAa,QAAS1D,EAAElH,OAAO5F,WAGhD,6BACA,kBAAC0R,GAAA,EAAD,KACI,kBAAC8C,GAAA,EAAD,CAAYC,QAAQ,OAEZ3P,KAAKiP,YACC,QACA,kBAGd,kBAACW,GAAA,EAAD,CACIlP,WAAS,EACTsC,GAAG,OACH9H,MAAO8E,KAAK1D,MAAMyZ,QAAQC,MAC1BxW,SAAU,SAACwI,GACP,EAAK0D,aAAa,QAASxL,SAAS8H,EAAElH,OAAO5F,MAAO,SAGhE,6BACA,kBAAC0R,GAAA,EAAD,KACI,kBAAC8C,GAAA,EAAD,CAAYC,QAAQ,OAApB,gBACA,kBAACC,GAAA,EAAD,CACIlP,WAAS,EACTsC,GAAG,OACH9H,MAAO8E,KAAK1D,MAAMyZ,QAAQE,KAC1BzW,SAAU,SAACwI,GACP,EAAK0D,aAAa,OAAQxL,SAAS8H,EAAElH,OAAO5F,MAAO,SAG/D,6BACA,6BACA,kBAAC0R,GAAA,EAAD,KACI,kBAAC,gBAAD,CACIhO,MAAOoB,KAAK1D,MAAMyZ,QAAQhJ,MAC1BjT,MAAM,QACN4a,OAAQjB,GACRkB,cAAe,GACfnV,SAAU,SAACtE,GACP,EAAKwQ,aAAa,QAASxQ,EAAMmI,UAKjD,kBAAC2M,GAAA,EAAD,KACI,kBAAC/Q,EAAA,EAAD,CAAQE,QAASa,KAAKrD,MAAMwJ,YAAavH,MAAM,aAA/C,UAGA,kBAACK,EAAA,EAAD,CAAQtE,KAAK,SAASiE,MAAM,WAA5B,e,GAjJEpE,aA2JX6B,eAAQ,WACnB,MAAO,IAEP,SAAAI,GACI,OAAOC,YAAmBvB,GAAasB,IAJhCJ,CAKRyZ,ICnKD3a,GAAW,eACVga,GA8FDe,G,YACF,WAAYvZ,GAAQ,IAAD,uBACf,4CAAMA,KACDwZ,aAAe,EAAKA,aAAatS,KAAlB,iBACpB,EAAKuS,WAAa,EAAKA,WAAWvS,KAAhB,iBAHH,MAKgB,EAAKlH,MAA5BmY,EALO,EAKPA,SAAUC,EALH,EAKGA,SALH,OAMf,EAAKD,SAAWA,EAChB,EAAKC,SAAWA,EAEhB,EAAKzY,MAAQ,CACT+Z,eAAe,EACfC,qBAAqB,EACrBC,cAAe,IAZJ,E,0EAgBNR,GACT/V,KAAKI,SAAS,CACViW,eAAe,EACfE,cAAc,eAAMR,O,mCAKxB/V,KAAKI,SAAS,CACViW,eAAe,EACfC,qBAAqB,M,qCAIdP,GACX,IAAKA,EAAQE,KAAM,OAAO,KADN,IAGZnZ,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAAC0Z,GAAA,EAAD,CACI5X,MAC+B,MAA3BoB,KAAKyW,SAASV,GACR,UACA,YAEVpX,QAAQ,cACRzD,MAAO8E,KAAKyW,SAASV,GACrB3b,UAAW0C,EAAQ4Z,Q,+BAKtBX,GACL,OAAIA,EAAQC,OAASD,EAAQE,KAAa,IAEjC,IAAMF,EAAQC,MAASD,EAAQE,O,uCAG1B,IAAD,OACb,IAAKjW,KAAKrD,MAAMuZ,WAAalW,KAAKrD,MAAMuZ,SAAShV,OAAQ,OAAO,KADnD,IAGLpE,EAAYkD,KAAKrD,MAAjBG,QAER,OAAOkD,KAAKrD,MAAMuZ,SAASpR,IAAI,SAACiR,EAAS/Q,GACrC,OACI,kBAAC2R,GAAA,EAAD,CACI5L,UAAU,KACVtG,IAAI,EACJS,IAAK6Q,EAAQ3R,GACbvK,MAAO,CAAC6Q,gBAAiB,IAAI1F,GAC7B4R,cAAY,EACZC,eAAa,GAEb,kBAAC,IAAD,CACIzc,UAAW0C,EAAQvB,KACnBub,QAAM,EACNjd,MAAO,CAAEuI,gBAAiB2T,EAAQhJ,QAElC,kBAACjO,EAAA,EAAD,CACI1E,UAAW0C,EAAQgC,YACnBK,QAAS,kBAAM,EAAKgX,aAAaJ,KAEjC,kBAAC5Q,GAAA,EAAD,CACIC,aAAc2Q,EAAQC,MACtBpX,MAAM,YACN9B,QAAS,CAAEia,MAAOja,EAAQia,QAE1B,kBAACrY,EAAA,EAAD,CAAYtE,UAAW0C,EAAQlB,OAC1Bma,EAAQxM,SAIrB,yBAAKnP,UAAW0C,EAAQka,SACpB,kBAACjW,EAAA,EAAD,CACImE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACNxE,UAAW0C,EAAQma,YACnB9X,QAAS,WAAQ,EAAK4V,SAASgB,EAAQ3R,MAEvC,uBAAGhK,UAAU,kBAAb,2BAGR,yBAAKA,UAAW0C,EAAQoa,UACpB,kBAACnW,EAAA,EAAD,CACImE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACNO,QAAS,WAAQ,EAAK2V,SAASiB,EAAQ3R,MAEvC,uBAAGhK,UAAU,kBAAb,wBAGP,EAAK+c,eAAepB,S,wCAOtB,IAAD,OACNjZ,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAAC4H,GAAA,EAAD,CAASwO,oBAAqBzI,IAAM7O,MAAM,mBACtC,kBAACoG,GAAA,EAAD,CACIrD,QAAQ,WACRC,MAAM,UACNxE,UAAW0C,EAAQ+H,IACnB1F,QAAS,WACL,EAAKiB,SAAS,CACVkW,qBAAqB,MAG7B,uBAAGlc,UAAU,iBAAiBP,MAAO,CAAC8B,YAAa,SAAnD,cATJ,kB,8CAiBR,OAAOqE,KAAK1D,MAAMga,qBAAuB,kBAAC,GAAD,CACrCtQ,KAAMhG,KAAK1D,MAAMga,oBACjBnQ,YAAanG,KAAKoW,e,+CAKtB,OAAOpW,KAAK1D,MAAM+Z,eAAiB,kBAAC,GAAD,CAC/BrQ,KAAMhG,KAAK1D,MAAM+Z,cACjBN,QAAS/V,KAAK1D,MAAMia,cACpBpQ,YAAanG,KAAKoW,e,+BAKtB,OACI,6BACKpW,KAAKoX,iBACLpX,KAAK4V,kBACL5V,KAAKqX,wBACLrX,KAAKsX,8B,GAhKC9c,aAsKR8I,OACXnB,YAlQW,SAAApH,GAAK,MAAK,CACrBQ,KAAM,CACFzB,MAAO,OACP2B,SAAU,IACVC,WAAY,OACZC,YAAa,OACb3B,aAAc,OACdsH,aAAc,QACd+G,SAAU,WACVzJ,MAAO,WAGXzC,OAAQ,CACJN,OAAQd,EAAMwI,QAAQ,IAG1B6P,aAAc,CACVzX,YAAaZ,EAAMwI,QAAQ,IAG/BsB,IAAK,CACDwD,SAAU,QACVkD,OAAQxQ,EAAMwI,QAAQ,GACtBiI,MAAOzQ,EAAMwI,QAAQ,IAGzBgU,MAAO,CACH3Y,MAAO,QAGXE,YAAa,CACT5E,QAAS,gBAGb0B,MAAO,CACHgD,MAAO,OACP4Y,WAAY,OACZtd,QAAS,eACTyB,YAAa,MACb8b,OAAQ,WAGZV,MAAO,CACHW,KAAM,EACNlM,OAAQ,GACRiM,OAAQ,WAGZT,QAAS,CACL9c,QAAS,eACTmO,SAAU,WACVsP,KAAM,IACND,IAAK,IACLnM,OAAQ,IACR1P,OAAQ,MACR+b,aAAc,MACdC,YAAa,qBACb/F,cAAe,UAGnBoF,SAAU,CACNhd,QAAS,eACTmO,SAAU,WACVmD,MAAO,IACPkM,IAAK,IACLnM,OAAQ,IACR1P,OAAQ,MACRic,YAAa,MACbC,WAAY,kBAGhBd,YAAa,CACTpb,OAAQ,OAGZ6a,IAAK,CACDrO,SAAU,WACVkD,OAAQ,IACRC,MAAO,IACPmM,KAAM,KAGVK,kBAAmB,CACf5V,gBAAiB,WAGrB6V,oBAAqB,CACjB7V,gBAAiB,cA4KrB/F,YAAQ,SAAAC,GAGJ,MAAO,CACH4Z,SAHiB5Z,EAAb4Z,WAMR,SAAAzZ,GACI,OAAOC,YAAmBvB,GAAasB,KAVpC6G,CAYb4S,IC5PIgC,G,YACF,WAAYvb,GAAQ,IAAD,8BACf,4CAAMA,KAED+O,aAAe,EAAKA,aAAa7H,KAAlB,iBAEpB,EAAKvH,MAAQ,CACT6b,MAAO,GACPC,YAAa,EACbC,OAAQ,GACRC,WAAY,CACR,CACIlU,GAAI,EACJmU,MAAO,aAEX,CACInU,GAAI,EACJmU,MAAO,aAEX,CACInU,GAAI,EACJmU,MAAO,WAEX,CACInU,GAAI,EACJmU,MAAO,cAEX,CACInU,GAAI,EACJmU,MAAO,WA5BJ,E,0EAkCN1X,EAAOhC,GAAO,IAAD,OACtBmB,KAAKI,SAAL,eACKvB,EAAOgC,EAAMC,OAAO5F,OACtB,WACC,EAAKkF,SAAS,CACViY,OAAQ,EAAKH,gB,gCAKd,IACCC,EAAUnY,KAAK1D,MAAf6b,MAER,OAAQnY,KAAK1D,MAAM8b,aACf,KAAK,EAAG,OAAOD,EAAMK,cACrB,KAAK,EAAG,OAAOL,EAAMM,cACrB,KAAK,EAAG,OAAON,EAAMO,MAAM,IAAIC,UAAUC,KAAK,IAC9C,KAAK,EAAG,OAAO5Y,KAAK6Y,MAAMV,GAC1B,KAAK,EAAG,OAAOnY,KAAK8Y,MAAMX,GAC1B,QAAS,MAAO,M,4BAIlBY,GACF,IAEI/T,EAAQ,SAAAgU,GAAC,MAFD,uDAEWC,QAAQD,IAE/B,OAAOD,EAAIL,MAAM,IAAI5T,IADL,SAAAkU,GAAC,OAAIhU,EAAMgU,IAAM,EAFpB,uDAE+BhU,EAAMgU,IAAMA,IACpBJ,KAAK,M,4BAGvCT,GAMF,IALA,IAAIe,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/LC,EAAe,CAAC,mBAAoB,QAAS,YAAa,cAAe,UAAW,IAAK,YAAa,YAAa,UAAW,MAAO,gBAAiB,YAAa,YAAa,UAAW,QAAS,cAAe,cAAe,gBAAiB,UAAW,QAAS,IAAK,UAAW,YAAa,YAAa,cAAe,gBAAiB,cAAe,oBAAqB,kBAAmB,gBAAiB,cAAe,YAAa,cAAe,gBAAiB,kBAAmB,oBAAqB,uBAE7fC,EAAU,GAELzR,EAAI,EAAGA,EAAIwQ,EAAMjX,OAAQyG,IAC9B,IAAK,IAAI0R,EAAI,EAAGA,EAAI,GAAIA,IACpB,GAAIlB,EAAMxQ,GAAG8Q,gBAAkBS,EAAQG,GAAI,CACvCD,GAAWD,EAAaE,GACxBD,GAAW,eACX,MAKZ,OAAOA,I,wCAGQ,IAAD,OACNtc,EAAYkD,KAAKrD,MAAjBG,QAER,OAAO,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQuO,KAAMlR,UAAW,IAC7C,kBAACqG,GAAA,EAAD,CACIwC,GAAG,qBACHtD,MAAM,QACNoQ,WAAS,EACTD,WAAS,EACTE,KAAK,IACLuJ,QAAQ,IACRpe,MAAO8E,KAAK1D,MAAM6b,MAClB3Y,SAAU,SAACwI,GAAD,OAAO,EAAK0D,aAAa1D,EAAG,UACtCnM,OAAO,c,8CAKM,IAAD,OACZiB,EAAYkD,KAAKrD,MAAjBG,QAER,OAAO,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQyc,WAAYpf,UAAW,GACnD,kBAACqG,GAAA,EAAD,CACIwC,GAAG,mBACH+E,QAAM,EACN7M,MAAO8E,KAAK1D,MAAM8b,YAClB5Y,SAAU,SAACwI,GAAD,OAAO,EAAK0D,aAAa1D,EAAG,gBACtCwR,YAAa,CACTC,UAAW,CACPrf,UAAW0C,EAAQ4c,OAG3BC,WAAW,wBACX9d,OAAO,UAENmE,KAAK1D,MAAMgc,WAAWxT,IAAI,SAAAyD,GAAM,OAC7B,kBAACC,GAAA,EAAD,CAAUtD,IAAKqD,EAAOnE,GAAIlJ,MAAOqN,EAAOnE,IACnCmE,EAAOgQ,a,yCAOR,IACRzb,EAAYkD,KAAKrD,MAAjBG,QAER,OAAO,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQuO,KAAMlR,UAAW,IAC7C,kBAACqG,GAAA,EAAD,CACIwC,GAAG,qBACHtD,MAAM,SACNoQ,WAAS,EACTD,WAAS,EACTE,KAAK,IACLuJ,QAAQ,IACRpe,MAAO8E,KAAK1D,MAAM+b,OAClBxc,OAAO,SACPqM,WAAY,CACR0R,UAAU,Q,wCAMP,IACP9c,EAAYkD,KAAKrD,MAAjBG,QAER,OAAO,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQ+c,SAAU1f,UAAW,GACjD,uBAAGC,UAAU,kBAAb,0B,+BAOJ,OACI,6BACK4F,KAAK8Z,kBACL9Z,KAAK+Z,kBACL/Z,KAAKga,wBACLha,KAAK+Z,kBACL/Z,KAAKia,wB,GAtKAzf,aA4KP2H,eAjNA,SAAApH,GAAK,MAAK,CACrBsQ,KAAK,eACEtQ,EAAMmf,OAAOC,UADhB,CAEAtI,WAAY9W,EAAMwI,QAAQ,GAC1B6W,cAAerf,EAAMwI,QAAQ,GAC7BzJ,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb0M,SAAU,aAGdkR,WAAY,CACR1H,WAAY9W,EAAMwI,QAAQ,GAC1B6W,cAAerf,EAAMwI,QAAQ,GAC7BzJ,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb0M,SAAU,WACVrO,aAAc,GACdD,UAAW,IAGf8f,SAAU,CACNzX,gBAAiB,cACjBtI,MAAO,OACP4B,WAAY,OACZC,YAAa,OACb0M,SAAU,WACVrO,aAAc,GACdD,UAAW,IAGf2f,KAAM,CACF5f,MAAO,OAgLAqI,CAAmB+V,IC/K5BmC,G,YACF,WAAY1d,GAAQ,IAAD,8BACf,4CAAMA,KAED+O,aAAe,EAAKA,aAAa7H,KAAlB,iBACpB,EAAKwD,cAAgB,EAAKA,cAAcxD,KAAnB,iBAErB,EAAKvH,MAAQ,CACTsB,KAAM,GACN6J,iBAAiB,GAGrB,EAAK6S,YAAc,CACf,CACI3C,KAAM,qDACNnM,MAAO,sDAEX,CACImM,KAAM,2BACNnM,MAAO,4BAEX,CACImM,KAAM,UACNnM,MAAO,WAEX,CACImM,KAAM,yCACNnM,MAAO,0CAEX,CACImM,KAAM,qDACNnM,MAAO,sDAEX,CACImM,KAAM,kEACNnM,MAAO,oEAEX,CACImM,KAAM,mCACNnM,MAAO,oCAEX,CACImM,KAAM,6BACNnM,MAAO,8BAEX,CACImM,KAAM,mCACNnM,MAAO,oCAEX,CACImM,KAAM,iBACNnM,MAAO,mBAlDA,E,0EAuDN3K,EAAOhC,GAChBmB,KAAKI,SAAL,eACKvB,EAAOgC,EAAMC,OAAO5F,U,sCAIb0C,IACD,IAAI2c,cACVC,MAAMrW,IAAI,aAAcvG,GAC7B6c,UAAUC,UAAUC,UAAU/c,GAC9BoC,KAAKI,SAAS,CACVqH,iBAAiB,M,0CAIJ,IAAD,OACR3K,EAAYkD,KAAKrD,MAAjBG,QAER,OAAO,yBAAK1C,UAAW0C,EAAQ8d,oBAEvB5a,KAAKsa,YAAYxV,IAAI,SAAC0F,EAAMxF,GACxB,IAAI6V,EAAa,UAAMrQ,EAAKmN,KAAX,YAAmB,EAAKrb,MAAMsB,KAA9B,YAAsC4M,EAAKgB,OAC5D,OAAO,kBAAC,IAAD,CAAMpR,UAAW0C,EAAQuO,KAAMlR,UAAW,EAAG+K,IAAKF,GACrD,kBAACtG,EAAA,EAAD,CAAY4L,UAAU,IAAIlQ,UAAW0C,EAAQc,MAErCid,GAGR,yBAAKzgB,UAAW0C,EAAQge,YACpB,kBAACpW,GAAA,EAAD,CAASwO,oBAAqBzI,IAAM7O,MAAM,qBACtC,kBAACmF,EAAA,EAAD,CAAYnC,MAAM,YAAY+F,aAAW,OAAOxF,QAAS,WACrD,EAAK4b,gBAAgBF,KAGjB,uBAAGzgB,UAAU,kBAAb,iB,sCAchC4F,KAAKI,SAAS,CACVqH,iBAAiB,M,+BAIf,IAAD,OACG3K,EAAYkD,KAAKrD,MAAjBG,QACR,OACI,6BACI,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQuO,KAAMlR,UAAW,IACtC,kBAACuE,EAAA,EAAD,CAAY4L,UAAU,KAAtB,wEAGA,kBAAC9J,GAAA,EAAD,CACIwC,GAAG,OACHtD,MAAM,OACNtF,UAAW0C,EAAQke,UACnB9f,MAAO8E,KAAK1D,MAAMsB,KAClB4B,SAAU,SAACwI,GAAD,OAAO,EAAK0D,aAAa1D,EAAG,SACtCnM,OAAO,SACPof,WAAY,CACRC,aAAc,UAIzBlb,KAAKmb,oBACN,kBAAC,GAAD,CACInV,KAAMhG,KAAK1D,MAAMmL,gBACjBtB,YAAanG,KAAKqH,cAClBzJ,KAAK,8B,GArIFpD,aA4IR2H,eAzKA,SAAApH,GAAK,MAAK,CACrBsQ,KAAK,eACEtQ,EAAMmf,OAAOC,UADhB,CAEAtI,WAAY9W,EAAMwI,QAAQ,GAC1B6W,cAAerf,EAAMwI,QAAQ,GAC7BzJ,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,GACdqO,SAAU,aAEdyS,WAAY,CACR5gB,QAAS,eACT4d,YAAa,MACbzP,SAAU,WACVmD,MAAO,IACPkM,IAAK,IACLnM,OAAQ,IACRuG,cAAe,QAEnBlU,KAAM,CACF1D,QAAS,gBAEb0gB,mBAAoB,CAChBQ,UAAW,MACXC,UAAW,UAgJJlZ,CAAmBkY,ICtGnBiB,G,YApEX,WAAY3e,GAAQ,IAAD,8BACf,4CAAMA,KAED+O,aAAe,EAAKA,aAAa7H,KAAlB,iBAEpB,EAAKvH,MAAQ,CACTkR,QAAS,GANE,E,0EAUNxF,EAAG9M,GACZ8E,KAAKI,SAAS,CACVoN,QAAStS,M,mCAKb,OACI,kBAACtB,EAAA,EAAD,CAAO2hB,QAAM,EAAC1hB,MAAO,CAAEC,MAAO,IAAK4B,WAAY,OAAQC,YAAa,OAAQ3B,aAAa,SACrF,kBAACuT,GAAA,EAAD,CACIrS,MAAO8E,KAAK1D,MAAMkR,QAClBhO,SAAUQ,KAAK0L,aACf/M,QAAQ,YACR+O,eAAe,YACfC,UAAU,aAEV,kBAACG,GAAA,EAAD,CACIrH,KACI,uBAAGrM,UAAU,kBAAb,aAEJsF,MAAM,YAEV,kBAACoO,GAAA,EAAD,CACIrH,KACI,uBAAGrM,UAAU,kBAAb,eAEJsF,MAAM,aAEV,kBAACoO,GAAA,EAAD,CACIrH,KACI,uBAAGrM,UAAU,kBAAb,eAEJsF,MAAM,QACNqC,UAAQ,Q,yCAQxB,OAAO/B,KAAK1D,MAAMkR,SACd,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,QAAS,OAAO,kBAAC,GAAD,S,+BAKpB,OACI,6BACKxN,KAAKwb,aACLxb,KAAKyb,wB,GA/DDjhB,aCVd,SAASkhB,GAAQC,EAAKC,GAGzB,GAFAD,EAAMzb,SAASyb,EAAK,KACpBC,EAAM1b,SAAS0b,EAAK,KACRD,EACZ,OAAOtX,KAAKC,MAAMD,KAAKE,UAAYqX,EAAMD,EAAM,IAAOA,EAGnD,SAASE,KACZ,MAAO,OAASH,GAAQ,EAAG,KAAO,KAAOA,GAAQ,EAAG,KAAO,KAAOA,GAAQ,EAAG,KAAO,IAGzE,IC0CTI,G,YACF,WAAYnf,GAAQ,IAAD,8BACf,4CAAMA,KAEDL,MAAQ,CACT0Q,OAAQ,CACJ+O,iBAAkB,GAClBC,IAAK,EACLC,IAAK,GACLC,gBAAiB,EACjBC,UAAW,EACXC,cAAe,CACX,MAXG,E,iFAkBfpc,KAAKqc,oB,wCAGU,IACPvf,EAAYkD,KAAKrD,MAAjBG,QAER,OAAO,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQ+c,SAAU1f,UAAW,GACjD,uBAAGC,UAAU,kBAAb,0B,yCAMW4N,EAAGtI,GAAQ,IAAD,OACrBxE,EAAQ8M,EAAElH,OAAO5F,MACrB8E,KAAKI,SAAS,CACV4M,OAAO,eACAhN,KAAK1D,MAAM0Q,OADZ,eAEDtN,EAAQxE,KAEd,WACe,cAAVwE,GACU,KAAVxE,GACJ,EAAKmhB,sB,oCAKT,IAAM/f,EAAQ0D,KAAK1D,MAAM0Q,OAEzB,OAAO1Q,EAAM8f,cAActX,IAAI,SAAC4C,EAAKC,GACjC,OACI,kBAAC,WAAD,CAAUzC,IAAKyC,GACX,2BAEQD,EAAI5C,IAAI,SAACzE,EAAK2E,GACV,OAAO,0BACHE,IAAKF,EACLnL,MACIwG,IAAQH,SAAS5D,EAAM6f,UAAW,IAC5B,CAAEvd,MAAO,OACT,IAINoG,IAAU0C,EAAIxG,OAAS,EACjBb,EACAA,EAAM,SAO5BsH,IAAMrL,EAAM8f,cAAclb,OAAS,EAC7B,KACA,kBAACgC,EAAA,EAAD,W,wCAQtB,IAAM5G,EAAQ0D,KAAK1D,MAAM0Q,OAEzB,GAAK1Q,EAAM4f,gBAAX,CAOA,IALA,IAAInM,EAAO7P,SAAS5D,EAAM4f,gBAAiB,KAAOhc,SAAS5D,EAAMyf,iBAAkB,IAC7Ezf,EAAMyf,iBACNzf,EAAM4f,gBAERI,EAAU,GACL3U,EAAI,EAAGA,EAAIoI,EAAMpI,IACtB2U,EAAQzU,KAAK,IAIjB,IADA,IAAI2F,EAAU,EACL1B,EAAI,EAAGA,EAAIxP,EAAMyf,iBAAkBjQ,IACxCwQ,EAAQ9O,GAAS3F,KAAK6T,GAAQ1b,KAAK1D,MAAM0Q,OAAOgP,IAAKhc,KAAK1D,MAAM0Q,OAAOiP,QACvEzO,IACgB8O,EAAQpb,SACpBsM,EAAU,GAIlBxN,KAAKI,SAAS,CACV4M,OAAO,eACAhN,KAAK1D,MAAM0Q,OADZ,CAEFoP,cAAc,GAAD,OAAME,U,wCAKZ,IAAD,OACNxf,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAAC4H,GAAA,EAAD,CAASwO,oBAAqBzI,IAAM7O,MAAM,aACtC,kBAACoG,GAAA,EAAD,CACIrD,QAAQ,WACRC,MAAM,UACNxE,UAAW0C,EAAQ+H,IACnB1F,QAAS,WACL,EAAKkd,oBAET,uBAAGjiB,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SAApD,aAPJ,gB,+BAgBF,IAAD,OACGmB,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,6BACI,kBAAC,IAAD,CAAM3C,UAAW,EAAGC,UAAW0C,EAAQyf,SACnC,kBAAC/b,GAAA,EAAD,CACIwC,GAAG,mBACHwZ,aAAcxc,KAAK1D,MAAM0Q,OAAO+O,iBAChC3hB,UAAW0C,EAAQke,UACnBnL,WAAS,EACTnQ,MAAM,iCACNf,QAAQ,WACR9C,OAAO,SACP2D,SAAU,SAACwI,GAAQ,EAAKyU,mBAAmBzU,EAAG,uBAElD,kBAACxH,GAAA,EAAD,CACIwC,GAAG,MACHwZ,aAAcxc,KAAK1D,MAAM0Q,OAAOgP,IAChC5hB,UAAW0C,EAAQ4f,WACnB/C,WAAW,UACX9d,OAAO,SACP2D,SAAU,SAACwI,GAAQ,EAAKyU,mBAAmBzU,EAAG,UAElD,kBAACxH,GAAA,EAAD,CACIwC,GAAG,MACHwZ,aAAcxc,KAAK1D,MAAM0Q,OAAOiP,IAChC7hB,UAAW0C,EAAQ6f,WACnBhD,WAAW,UACX9d,OAAO,SACP2D,SAAU,SAACwI,GAAQ,EAAKyU,mBAAmBzU,EAAG,UAElD,kBAACxH,GAAA,EAAD,CACIwC,GAAG,MACHwZ,aAAcxc,KAAK1D,MAAM0Q,OAAOmP,UAChC3c,SAAU,SAACwI,GAAQ,EAAKyU,mBAAmBzU,EAAG,cAC9C5N,UAAW0C,EAAQ4f,WACnB/C,WAAW,mBACX9d,OAAO,WAEX,kBAAC2E,GAAA,EAAD,CACIwC,GAAG,MACHwZ,aAAcxc,KAAK1D,MAAM0Q,OAAOkP,gBAChC9hB,UAAW0C,EAAQ6f,WACnBhD,WAAW,OACX9d,OAAO,SACP2D,SAAU,SAACwI,GAAQ,EAAKyU,mBAAmBzU,EAAG,uBAGrDhI,KAAK+Z,kBACN,kBAAC,IAAD,CAAM5f,UAAW,EAAGC,UAAW0C,EAAQ8f,aAClC5c,KAAK4c,eAET5c,KAAK4V,uB,GA3LEpb,aAiMT2H,eAzOA,SAAApH,GAAK,MAAK,CACrBwhB,QAAS,CACLziB,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,OACd0J,QAAS,YAEbkZ,YAAa,CACT9iB,MAAO,OACP2B,SAAU,IACVxB,UAAW,UACXyB,WAAY,OACZC,YAAa,OACb3B,aAAc,OACd0J,QAAS,aAEbmW,SAAU,CACNzX,gBAAiB,cACjBtI,MAAO,OACP4B,WAAY,OACZC,YAAa,OACb0M,SAAU,WACVrO,aAAc,GACdD,UAAW,IAEf2iB,WAAY,CACR5iB,MAAO,QACP6B,YAAa,QAEjBghB,WAAY,CACR7iB,MAAO,SAEX+K,IAAK,CACDwD,SAAU,QACVkD,OAAQxQ,EAAMwI,QAAQ,GACtBiI,MAAOzQ,EAAMwI,QAAQ,MAqMdpB,CAAmB2Z,IC7M5Be,G,YACF,WAAYlgB,GAAQ,IAAD,8BACf,4CAAMA,KAEDmgB,YAAc,EAAKA,YAAYjZ,KAAjB,iBAEnB,EAAKvH,MAAQ,CACTyQ,MAAO8O,MANI,E,2EAWf7b,KAAKI,SAAS,CACV2M,MAAO8O,S,+BAIL,IAAD,OACG/e,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,6BACI,kBAACkF,GAAA,EAAD,CACIrD,QAAQ,WACRgG,aAAW,OACXvK,UAAW0C,EAAQX,OACnBgD,QAAS,kBAAM,EAAK2d,eACpBle,MAAM,aAEN,uBAAGxE,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SAApD,iBAPJ,aAYA,kBAAC,IAAD,CAAMxB,UAAW,GAAIC,UAAW0C,EAAQigB,WACpC,yBACI3iB,UAAW0C,EAAQigB,UACnBljB,MAAO,CAAEuI,gBAAiBpC,KAAK1D,MAAMyQ,OACrC5N,QAASa,KAAK8c,oB,GAtCftiB,aA8CR2H,eA9EA,SAAApH,GAAK,MAAK,CACrBiiB,SAAU,CACNljB,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,OACd0J,QAAS,YAEbqZ,UAAW,CACPjjB,MAAO,OACP2B,SAAU,IACV0P,UAAW,IACXlR,UAAW,SACXyB,WAAY,OACZC,YAAa,OACbshB,mBAAoB,OACpBxF,OAAQ,WAEZoC,SAAU,CACNzX,gBAAiB,cACjBtI,MAAO,OACP4B,WAAY,OACZC,YAAa,OACb0M,SAAU,WACVrO,aAAc,GACdD,UAAW,IAEfoC,OAAQ,CACJnC,aAAce,EAAMwI,QAAQ,MAkDrBpB,CAAmB0a,I,UC5C5BK,G,YACF,WAAYvgB,GAAQ,IAAD,8BACf,4CAAMA,KAgBV8Z,SAAW,WAAO,IACNA,EAAa,EAAKna,MAAM4gB,KAAxBzG,SACR,EAAKrW,SAAS,CACV8c,KAAK,eACE,EAAK5gB,MAAM4gB,KADd,CAEAzG,SAAUA,EAAW,EACrBlN,MAAO,MAEZ,WACKkN,GAAY,MACZzY,cAAc,EAAKiG,OACnB,EAAK7D,SAAS,CACV8c,KAAK,eACE,EAAK5gB,MAAM4gB,KADd,CAEA3T,MAAyB,IAAlBmS,GAAQ,EAAG,GAAW,QAAU,QACvCjF,SAAU,UA7B1B,EAAKxS,MAAQ,KAEb,EAAK3H,MAAQ,CACT4gB,KAAM,CACF3T,MAAO,GACPkN,SAAU,IARH,E,iFAcfzW,KAAKmd,e,mCA0B4B,IAA7Bnd,KAAK1D,MAAM4gB,KAAKzG,SAChBzW,KAAKiE,MAAQlG,YAAYiC,KAAKyW,SAAU,KAExCzY,cAAcgC,KAAKiE,OACnBjE,KAAKI,SAAS,CACV8c,KAAK,eACEld,KAAK1D,MAAM4gB,KADd,CAEAzG,SAAU,MAGlBzW,KAAKiE,MAAQlG,YAAYiC,KAAKyW,SAAU,O,+BAItC,IAAD,OACG3Z,EAAYkD,KAAKrD,MAAjBG,QAER,OAAO,kBAAC,WAAD,KACH,kBAACkF,GAAA,EAAD,CACIrD,QAAQ,WACRgG,aAAW,OACXvK,UAAW0C,EAAQX,OACnBgD,QAAS,kBAAM,EAAKge,cACpBve,MAAM,aAEN,uBAAGxE,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SAApD,aAPJ,QAYA,kBAAC,IAAD,CACIxB,UAAW,GACXC,UAAW0C,EAAQsgB,SACnBxe,MAAM,UACN/E,MAC8B,UAA1BmG,KAAK1D,MAAM4gB,KAAK3T,MACV,CAAEnH,gBAAiB,QAASxD,MAAO,SACnC,CAAEwD,gBAAiB,QAASxD,MAAO,UAIzCoB,KAAK1D,MAAM4gB,KAAKzG,SAAW,EACrB,kBAAC4G,GAAA,EAAD,CACEjjB,UAAW0C,EAAQ2Z,SACnB7X,MAAM,YACND,QAAQ,cACRO,KAAM,GACNhE,MAAO8E,KAAK1D,MAAM4gB,KAAKzG,WAGzB,4BAAKzW,KAAK1D,MAAM4gB,KAAK3T,a,GA3F5B/O,aAkGJ2H,eAnIA,SAAApH,GAAK,MAAK,CACrB8e,SAAU,CACNzX,gBAAiB,cACjBtI,MAAO,OACP4B,WAAY,OACZC,YAAa,OACb0M,SAAU,WACVrO,aAAc,GACdD,UAAW,IAEfqjB,SAAU,CACN9b,aAAc,OACdxH,MAAO,IACPuH,OAAQ,IACR3F,WAAY,OACZC,YAAa,OACb1B,UAAW,SACX6X,cAAe,SACfwL,WAAY,QACZL,mBAAoB,OACpB/iB,QAAS,OACTkR,eAAgB,SAChBjE,WAAY,UAEhBhL,OAAQ,CACJnC,aAAce,EAAMwI,QAAQ,IAEhCkT,SAAU,CACN1c,UAAW,OACXC,aAAc,UAsGPmI,CAAmB+a,ICxF5BK,G,YACF,WAAY5gB,GAAQ,IAAD,8BACf,4CAAMA,KAEDL,MAAQ,CACTihB,KAAM,CACFC,cAAe,EACfC,MAAO,KANA,E,iFAYfzd,KAAK0d,kB,wCAIU,IACP5gB,EAAYkD,KAAKrD,MAAjBG,QAER,OAAO,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQ+c,SAAU1f,UAAW,GACjD,uBAAGC,UAAU,kBAAb,0B,wCAMW,IAAD,OACN0C,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAACkF,GAAA,EAAD,CACIrD,QAAQ,WACRC,MAAM,UACNxE,UAAW0C,EAAQ+H,IACnB1F,QAAS,WACL,EAAKue,kBAET,uBAAGtjB,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SAApD,gBAPJ,U,gCAeEgiB,GACN,OAAQA,GACJ,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,QAAS,U,sCAMb,IADA,IAAIjW,EAAM,GACDC,EAAI,EAAGA,EAAI3H,KAAK1D,MAAMihB,KAAKC,cAAe7V,IAC/CD,EAAIG,KAAK6T,GAAQ,EAAG,IAGxB1b,KAAKI,SAAS,CACVmd,KAAK,eACEvd,KAAK1D,MAAMihB,KADd,CAEAE,MAAM,GAAD,OAAM/V,S,kCAKV,IAAD,OACR,OAAO1H,KAAK1D,MAAMihB,KAAKE,MAAM3Y,IAAI,SAAC6Y,EAAM3Y,GACpC,OAAO,yBACHzK,IAAI,OACJH,UAAU,WACVC,IAAK,EAAKujB,UAAUD,GACpBzY,IAAKF,Q,+BAKP,IAAD,OACGlI,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAM3C,UAAW,EAAGC,UAAW0C,EAAQyf,SACnC,kBAAC/b,GAAA,EAAD,CACIwC,GAAG,gBACHwZ,aAAcxc,KAAK1D,MAAMihB,KAAKC,cAC9BpjB,UAAW0C,EAAQke,UACnBnL,WAAS,EACTnQ,MAAM,0BACNf,QAAQ,WACR9C,OAAO,SACP2D,SAAU,SAACwI,GACP,EAAK5H,SAAS,CACVmd,KAAK,eACE,EAAKjhB,MAAMihB,KADd,CAEAC,cAAexV,EAAElH,OAAO5F,SAE7B,WAAQ,EAAKwiB,sBAI3B1d,KAAK+Z,kBACN,kBAAC,IAAD,CAAM5f,UAAW,EAAGC,UAAW0C,EAAQ+gB,WAClC7d,KAAK6d,aAET7d,KAAK4V,uB,GA/GHpb,aAqHJ2H,eAhKA,SAAApH,GAAK,MAAK,CACrBwhB,QAAS,CACLziB,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,OACd0J,QAAS,YAEbmW,SAAU,CACNzX,gBAAiB,cACjBtI,MAAO,OACP4B,WAAY,OACZC,YAAa,OACb0M,SAAU,WACVrO,aAAc,GACdD,UAAW,IAEfoC,OAAQ,CACJnC,aAAce,EAAMwI,QAAQ,IAGhCua,SAAU,CACNjiB,OAAQd,EAAMwI,QAAQ,GACtBtH,SAAU,OACVmG,gBAAiB,QACjBxD,MAAO,SAEXiG,IAAK,CACDwD,SAAU,QACVkD,OAAQxQ,EAAMwI,QAAQ,GACtBiI,MAAOzQ,EAAMwI,QAAQ,IAEzBsa,UAAW,CACP/jB,MAAO,OACP2B,SAAU,IACVxB,UAAW,SACXyB,WAAY,OACZC,YAAa,OACb3B,aAAc,OACd0J,QAAS,eAyHFvB,CAAmBob,ICrF5BQ,G,YACF,WAAYphB,GAAQ,IAAD,8BACf,4CAAMA,KAEDqhB,gBAAkB,EAAKA,gBAAgBna,KAArB,iBAEvB,EAAKI,MAAQ,KAEb,EAAK3H,MAAQ,CACTkR,QAAS,GARE,E,6EAYHpJ,GACZpE,KAAKI,SAAS,CACVoN,QAASpJ,M,sCAKb,OAAQpE,KAAK1D,MAAMkR,SACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,QAAS,OAAO,kBAAC,GAAD,S,oCAIT,IAAD,OACF1Q,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,6BACI,yBAAK1C,UAAW0C,EAAQmhB,UACpB,kBAAC5Y,GAAA,EAAD,CACIC,OAAQ,kBAACC,EAAA,EAAD,WACR7F,MAAM,UACNd,MAAM,UACND,QAAgC,IAAvBqB,KAAK1D,MAAMkR,QAAgB,UAAY,WAChDrO,QAAS,kBAAM,EAAK6e,gBAAgB,IACpC5jB,UAAW0C,EAAQmI,OAEvB,kBAACI,GAAA,EAAD,CACIC,OAAQ,kBAACC,EAAA,EAAD,WACR7F,MAAM,QACNd,MAAM,YACND,QAAgC,IAAvBqB,KAAK1D,MAAMkR,QAAgB,UAAY,WAChDrO,QAAS,kBAAM,EAAK6e,gBAAgB,IACpC5jB,UAAW0C,EAAQmI,OAEvB,kBAACI,GAAA,EAAD,CACIC,OAAQ,kBAACC,EAAA,EAAD,WACR7F,MAAM,eACNf,QAAgC,IAAvBqB,KAAK1D,MAAMkR,QAAgB,UAAY,WAChDrO,QAAS,kBAAM,EAAK6e,gBAAgB,IACpC5jB,UAAW0C,EAAQmI,OAEvB,kBAACI,GAAA,EAAD,CACIC,OAAQ,kBAACC,EAAA,EAAD,WACR7F,MAAM,cACNf,QAAgC,IAAvBqB,KAAK1D,MAAMkR,QAAgB,UAAY,WAChDrO,QAAS,kBAAM,EAAK6e,gBAAgB,IACpC5jB,UAAW0C,EAAQmI,QAG1BjF,KAAKkL,mB,+BAMd,OACI,6BACKlL,KAAKke,mB,GA1EG1jB,aAoFV2H,eA7JA,SAAApH,GAAK,MAAK,CACrBkjB,SAAU,CACN/jB,QAAS,OACTkR,eAAgB,SAChB+S,SAAU,OACVrkB,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,QAElBiL,KAAM,CACFpJ,OAAQd,EAAMwI,QAAQ,IAE1BgZ,QAAS,CACLziB,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,OACd0J,QAAS,YAEbmW,SAAU,CACNzX,gBAAiB,cACjBtI,MAAO,OACP4B,WAAY,OACZC,YAAa,OACb0M,SAAU,WACVrO,aAAc,GACdD,UAAW,IAEfqjB,SAAU,CACN9b,aAAc,OACdxH,MAAO,IACPuH,OAAQ,IACR3F,WAAY,OACZC,YAAa,OACb1B,UAAW,SACX6X,cAAe,SACfwL,WAAY,QACZL,mBAAoB,OACpB/iB,QAAS,OACTkR,eAAgB,SAChBjE,WAAY,UAEhBhL,OAAQ,CACJnC,aAAce,EAAMwI,QAAQ,IAEhCkT,SAAU,CACN1c,UAAW,OACXC,aAAc,QAGlB8jB,SAAU,CACNjiB,OAAQd,EAAMwI,QAAQ,GACtBtH,SAAU,OACVmG,gBAAiB,QACjBxD,MAAO,SAEXiG,IAAK,CACDwD,SAAU,QACVkD,OAAQxQ,EAAMwI,QAAQ,GACtBiI,MAAOzQ,EAAMwI,QAAQ,IAEzBsa,UAAW,CACP/jB,MAAO,OACP2B,SAAU,IACVxB,UAAW,UACXyB,WAAY,OACZC,YAAa,OACb3B,aAAc,OACd0J,QAAS,eAwFFvB,CAAmB4b,I,+DCvEnB5b,mBAtFA,SAAApH,GAAK,MAAK,CACvBQ,KAAM,CACJrB,QAAS,OACTJ,MAAO,QACP+B,OAAQ,QAEVyJ,OAAQ,CACNxL,MAAO,GACPuH,OAAQ,GACR1F,YAAa,EACb1B,UAAW,SACXC,QAAS,eACTojB,WAAY,QAEdc,QAAS,CACPlkB,QAAS,OACTmkB,cAAe,UAEjB9B,QAAS,CACP+B,KAAM,YAERC,MAAO,CACLzkB,MAAO,KAET0kB,SAAU,CACRtkB,QAAS,OACTiN,WAAY,SACZ2Q,YAAa/c,EAAMwI,QAAQ,GAC3B6W,cAAerf,EAAMwI,QAAQ,IAE/Bkb,SAAU,CACRpd,OAAQ,GACRvH,MAAO,GACP8E,MAAO7D,EAAM8B,QAAQ2F,QAAQF,MAE/Boc,SAAU,CACR9f,MAAO7D,EAAM8B,QAAQwF,UAAUC,MAEjCqc,WAAY,CACV/f,MAAO,MA+CuB,CAAEggB,WAAW,GAAhCzc,CA3Cf,SAA0BxF,GAAQ,IACxBG,EAAmBH,EAAnBG,QAER,OAF2BH,EAAV5B,MAGf,kBAAC,IAAD,CAAMX,UAAW0C,EAAQvB,KAAMpB,UAAW,IACxC,yBAAKC,UAAW0C,EAAQshB,SACtB,kBAACtf,EAAA,EAAD,CAAa1E,UAAW0C,EAAQyf,SAC9B,kBAAChX,EAAA,EAAD,CACEnL,UAAW0C,EAAQwI,OACnBzL,MAAO,CAAEuI,gBAAiBzF,EAAMkiB,KAAK9R,QAGnCpQ,EAAMkiB,KAAKC,KAAK,IAGpB,wBAAIjlB,MAAO,CAAEK,QAAS,iBACnByC,EAAMkiB,KAAKC,KAAKC,MAAM,IAEzB,uBAAGpgB,QAAQ,YAAYC,MAAM,iBAC1BjC,EAAMkiB,KAAKG,mBAGhB,yBAAK5kB,UAAW0C,EAAQ0hB,UACtB,kBAACzd,EAAA,EAAD,CAAY4D,aAAW,OAAOxF,QAAS,WAAOxC,EAAMsiB,OAAOtiB,EAAMkiB,KAAKza,MACpE,kBAAC,KAAD,CAAehK,UAAW0C,EAAQ2hB,YAEpC,kBAAC1d,EAAA,EAAD,CAAY4D,aAAW,QACrB,kBAAC,KAAD,CAAUvK,UAAW0C,EAAQ4hB,YAE/B,kBAAC3d,EAAA,EAAD,CAAY4D,aAAW,SAASxF,QAAS,kBAAMxC,EAAMuiB,SAASviB,EAAMkiB,KAAKza,MACvE,kBAAC,KAAD,CAAYhK,UAAW0C,EAAQ6hB,mBClDrCQ,G,iLACQ,IACEriB,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAAC8I,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAMhG,KAAKrD,MAAMqJ,KACjBC,iBAAkBjG,KAAKrD,MAAMsJ,iBAAmBjG,KAAKrD,MAAMsJ,iBAAmB,IAC9EC,QAASlG,KAAKrD,MAAMwJ,aAEpB,kBAACC,GAAA,EAAD,CACIhM,UAAWiM,IAAWvJ,EAAQ+J,OAC9BN,mBAAiB,kBACjBC,QACI,0BAAMxD,GAAG,kBAAkB5I,UAAW0C,EAAQ0J,SAC1C,uBAAGpM,UAAWiM,IAAWvJ,EAAQ2J,KAAM3J,EAAQ4J,YAAa,mBAA5D,iBAGC1G,KAAKrD,MAAMiB,KAAKsD,OAASlB,KAAKrD,MAAMiB,KAAO,SAGpDmG,OAAQ,CACJ,kBAAChD,EAAA,EAAD,CACImE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACNxE,UAAW0C,EAAQ6J,MACnBxH,QAASa,KAAKrD,MAAMwJ,aAEpB,uBAAG/L,UAAU,kBAAb,kB,GAjCRI,aA4CL2H,eAtEA,SAAApH,GAAK,MAAK,CACrBuL,QAAS,CACLlE,gBAAiBwE,KAAM,MAE3BC,MAAO,CACHzE,gBAAiBrH,EAAM8B,QAAQgK,MAAMC,MAEzCC,KAAM,CACF3E,gBAAiBrH,EAAM8B,QAAQ2F,QAAQsE,MAE3CE,QAAS,CACL5E,gBAAiB6E,KAAM,MAE3BR,KAAM,CACFxK,SAAU,IAEdyK,YAAa,CACTQ,QAAS,GACTvL,YAAaZ,EAAMwI,WAEvBiD,QAAS,CACLtM,QAAS,OACTiN,WAAY,YAgDLhF,CAAmBgd,IC7D5BC,G,YACF,WAAYziB,GAAQ,IAAD,8BACf,4CAAMA,KAEDL,MAAQ,GAHE,E,sEASf,OACI,kBAAC8S,GAAA,EAAD,CACIpJ,KAAMhG,KAAKrD,MAAM0iB,YACjBnZ,QAASlG,KAAKrD,MAAM2iB,mBACpBhQ,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAavM,GAAG,qBAAqB,eAAiBhD,KAAKrD,MAAM4iB,SAAW,KAC5E,kBAACrc,EAAA,EAAD,CAASvE,QAAQ,WAEbqB,KAAKrD,MAAM6iB,QAAQ1a,IAAI,SAAC2a,EAAGza,GACvB,OACI,kBAAC,WAAD,CAAUE,IAAKF,GACX,yBAAKnL,MAAO,CAAE6J,QAAS,KACnB,uBAAG7J,MAAO,CAAEK,QAAS,WACjB,sCAEY8K,EAAQ,EAFpB,aAE0Bya,EAAEC,gBAIhC,uBACItlB,UAAU,iBACVP,MACI,CACIK,QAAS,SACT0E,MAAO6gB,EAAEE,UAAY,QAAU,MAC/BjkB,WAAY,IAGnB+jB,EAAEE,UAAY,WAAa,SAEhC,2CAAiBF,EAAEG,YAEdH,EAAEE,UAEG,KADA,8CAAoBF,EAAEI,gBAKpC,kBAAC3c,EAAA,EAAD,CAASvE,QAAQ,cAKjC,kBAACM,EAAA,EAAD,CACIL,MAAM,UACNO,QAASa,KAAKrD,MAAM2iB,oBAFxB,qB,GAtDM9kB,aAiEP6B,eAAQ,WACnB,MAAO,IAEP,SAAAI,GACI,OAAOC,YAAmB,GAAID,IAJvBJ,CAKR+iB,ICxFA,SAASU,GAAYjiB,GACxB,MAAO,CACHlD,KAAM,cACNkD,QAID,SAASkiB,GAASliB,GACrB,MAAO,CACHlD,KAAM,WACNkD,QCFR,IA+BMmiB,G,YACF,WAAYrjB,GAAQ,IAAD,8BACf,4CAAMA,KAEDL,MAAQ,CACT2jB,KAAM,CACF7b,GAAI,EACJ0a,KAAM,GACNE,iBAAkB,GAClBjS,MAAO,OACPmT,KAAM,GACNC,UAAW,CACP,CACI/b,GAAI,EACJyK,KAAM,GACNuR,QAAS,CACL,CACIvR,KAAM,GACNwR,SAAS,GAEb,CACIxR,KAAM,GACNwR,SAAS,GAEb,CACIxR,KAAM,GACNwR,SAAS,GAEb,CACIxR,KAAM,GACNwR,SAAS,OAM7BC,UAAW,GAnCA,E,iFAwCf,IAAMlc,EAAKqR,KAAE8K,WAEbvgB,KAAKI,SAAS,CACV6f,KAAM,CACF7b,GAAIqR,KAAE8K,WACNzB,KAAM,GACNE,iBAAkB,GAClBjS,MAAO,OACPmT,KAAM,GACNC,UAAW,CACP,CACI/b,KACAyK,KAAM,GACNuR,QAAS,CACL,CACIvR,KAAM,GACNwR,SAAS,GAEb,CACIxR,KAAM,GACNwR,SAAS,GAEb,CACIxR,KAAM,GACNwR,SAAS,GAEb,CACIxR,KAAM,GACNwR,SAAS,OAM7BC,UAAWlc,M,6CAKyBA,GAAK,IAAhBlJ,EAAe,EAAzB4F,OAAU5F,MAC7B8E,KAAKI,SAAS,CACV6f,KAAK,eACEjgB,KAAK1D,MAAM2jB,KADd,CAEAE,UAAU,aACHngB,KAAK1D,MAAM2jB,KAAKE,UAAUrb,IAAI,SAAC0b,GAC9B,OAAGA,EAAEpc,KAAOA,EAAWoc,EAChB,eACAA,EADP,CAEI3R,KAAM3T,a,2CAQY8J,GAAQ,IAAD,OAAlB9J,EAAkB,EAA5B4F,OAAU5F,MACrBkJ,EAAKpE,KAAK1D,MAAMgkB,UAEtBtgB,KAAKI,SAAS,CACV6f,KAAK,eACEjgB,KAAK1D,MAAM2jB,KADd,CAEAE,UAAU,aACHngB,KAAK1D,MAAM2jB,KAAKE,UAAUrb,IAAI,SAAC0b,GAC9B,OAAGA,EAAEpc,KAAOA,EAAWoc,EAChB,eACAA,EADP,CAEIJ,QAAQ,aACD3K,KAAEC,KAAK,EAAKpZ,MAAM2jB,KAAKE,UAAW,CAAC/b,OAAKgc,QAAQtb,IAAI,SAAC2b,EAAG9Y,GACvD,OAAGA,IAAM3C,EAAcyb,EAChB,eACAA,EADP,CAEI5R,KAAM3T,kB,qCAW1B,IAAD,OACH4B,EAAYkD,KAAKrD,MAAjBG,QACAqjB,EAAcngB,KAAK1D,MAAM2jB,KAAzBE,UACAG,EAActgB,KAAK1D,MAAnBgkB,UACFI,EAAkBjL,KAAEC,KAAKyK,EAAW,CAAE/b,GAAIkc,IACxCF,EAAYM,EAAZN,QAGR,OACI,kBAAC,IAAD,CAAMjmB,UAAW,EAAGC,UAAW0C,EAAQyf,SACnC,kBAAC/b,GAAA,EAAD,CACIgc,aAAckE,EAAgB7R,KAC9BzU,UAAW0C,EAAQke,UACnBnL,WAAS,EACTnQ,MAAM,WACNf,QAAQ,WACR9C,OAAO,SACP2D,SAAU,SAACwI,GAAQ,EAAK2Y,qBAAqB3Y,EAAGsY,MAEpD,kBAAC9f,GAAA,EAAD,CACIgc,aAAc4D,EAAQ,GAAGvR,KACzBzU,UAAW0C,EAAQ4f,WACnB/C,WAAW,eACX9d,OAAO,SACP2D,SAAU,SAACwI,GAAQ,EAAK4Y,mBAAmB5Y,EAAG,MAElD,kBAACxH,GAAA,EAAD,CACIgc,aAAc4D,EAAQ,GAAGvR,KACzBzU,UAAW0C,EAAQ4f,WACnB/C,WAAW,gBACX9d,OAAO,SACP2D,SAAU,SAACwI,GAAQ,EAAK4Y,mBAAmB5Y,EAAG,MAElD,kBAACxH,GAAA,EAAD,CACIgc,aAAc4D,EAAQ,GAAGvR,KACzBzU,UAAW0C,EAAQ4f,WACnB/C,WAAW,eACX9d,OAAO,SACP2D,SAAU,SAACwI,GAAQ,EAAK4Y,mBAAmB5Y,EAAG,MAElD,kBAACxH,GAAA,EAAD,CACIwC,GAAG,MACHwZ,aAAc4D,EAAQ,GAAGvR,KACzBzU,UAAW0C,EAAQ4f,WACnB/C,WAAW,gBACX9d,OAAO,SACP2D,SAAU,SAACwI,GAAQ,EAAK4Y,mBAAmB5Y,EAAG,S,+BAQ1D,OACI,6BACKhI,KAAK6gB,oB,GApLCrmB,aA0LR2H,eAzNA,SAAApH,GAAK,MAAK,CACrBwhB,QAAS,CACLziB,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,OACd0J,QAAS,YAEbkZ,YAAa,CACT9iB,MAAO,OACP2B,SAAU,IACVxB,UAAW,UACXyB,WAAY,OACZC,YAAa,OACb3B,aAAc,OACd0J,QAAS,aAEbgZ,WAAY,CACR5iB,MAAO,QACP6B,YAAa,QAEjBghB,WAAY,CACR7iB,MAAO,SAEX+K,IAAK,CACDwD,SAAU,QACVkD,OAAQxQ,EAAMwI,QAAQ,GACtBiI,MAAOzQ,EAAMwI,QAAQ,MA8LdpB,CAAmB6d,ICtM5B7kB,GAAW,eACV2lB,GAuBDC,G,YACF,WAAYpkB,GAAQ,IAAD,uBACf,4CAAMA,KACDL,MAAQ,CACT0kB,YAAa,QACbC,OAAQ,GACRC,OAAQ,GACRC,kBAAmB,GACnBC,aAAc,EACdC,YAAY,EACZC,cAAe,GACfhR,cAAc,EACdiR,oBAAoB,EACpBC,aAAc,GACdC,UAAW,GACXpC,aAAa,EACbqC,gBAAiB,IAfN,MAkBmB,EAAK/kB,MAA/BmjB,EAlBO,EAkBPA,YAAaC,EAlBN,EAkBMA,SAlBN,OAmBf,EAAKD,YAAcA,EACnB,EAAKC,SAAWA,EAEhB,EAAK4B,WAAa,EAAKA,WAAW9d,KAAhB,iBAClB,EAAKqM,oBAAsB,EAAKA,oBAAoBrM,KAAzB,iBAC3B,EAAKyb,mBAAqB,EAAKA,mBAAmBzb,KAAxB,iBAC1B,EAAK+d,iBAAmB,EAAKA,iBAAiB/d,KAAtB,iBACxB,EAAKsM,iBAAmB,EAAKA,iBAAiBtM,KAAtB,iBA1BT,E,kFA+Bf7D,KAAKI,SAAS,CACVif,aAAa,EACb6B,OAAQ,GACRC,kBAAmB,GACnBC,aAAc,EACdC,YAAY,EACZC,cAAe,O,4CAKnBthB,KAAKI,SAAS,CACVkQ,cAAc,EACdiR,oBAAoB,M,wCAKxB,OAAOvhB,KAAK1D,MAAM6kB,kBAAkBnhB,KAAK1D,MAAM8kB,gB,yCAGhCS,GACf,OAAOpM,KAAEqM,QAAQD,EAAe/c,IAAI,SAACid,GACjC,OAAO,eACAA,EADP,CAEI3B,QAAS3K,KAAEqM,QAAQC,EAAS3B,gB,uCAKvBhc,GACbpE,KAAK8f,YAAY,CAAE1b,OAEnBpE,KAAKI,SAAS,CACVshB,gBAAiBjM,KAAEC,KAAK1V,KAAKrD,MAAMokB,OAAQ,CAAC3c,OAC5Cmd,oBAAoB,M,yCAKxBvhB,KAAK+f,SAAS/f,KAAK1D,MAAMolB,iBAEzB1hB,KAAKI,SAAS,CACVmhB,oBAAoB,M,iCAIjBnd,GACP,IAAMwD,EAAM6N,KAAEC,KAAK1V,KAAKrD,MAAMokB,OAAQ,CAAE3c,GAAIA,IAE5CpE,KAAKI,SAAS,CACV4gB,YAAa,WACbE,OAAQtZ,EACRuZ,kBAAmBnhB,KAAKgiB,mBAAmBpa,EAAIuY,WAC/CiB,aAAc,EACdC,YAAY,EACZC,cAAe,O,4CAIA,IAAD,OAClB,OAAKthB,KAAKrD,MAAMokB,QAAW/gB,KAAKrD,MAAMokB,OAAO7f,OAGzC,kBAAC2J,GAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASzH,QAAS,IAElCvD,KAAKrD,MAAMokB,OAAOjc,IAAI,SAAC0F,GACnB,OACI,kBAACK,GAAA,EAAD,CAAM3F,IAAKsF,EAAKpG,GAAIoG,MAAI,GACpB,kBAACyX,GAAD,CACIpD,KAAI,eAAOrU,GACXyU,OAAQ,EAAK0C,WACbzC,SAAU,EAAK0C,uBAXiB,O,mCAqBnDM,GAAM,IAAD,OACdliB,KAAKI,SAAS,CACVkQ,cAAc,EACdgR,cAAc,GAAD,oBACNthB,KAAK1D,MAAMglB,eADL,CAET,CACI5B,aAAc1f,KAAK1D,MAAM6kB,kBAAkBnhB,KAAK1D,MAAM8kB,cAAcvS,KACpE+Q,WAAYsC,EAAIrT,KAChBgR,cAAepK,KAAEC,KAAK1V,KAAK1D,MAAM6kB,kBAAkBnhB,KAAK1D,MAAM8kB,cAAchB,QAAS,CAAEC,SAAS,IAAQxR,KACxG8Q,UAAWuC,EAAI7B,WAGvBmB,aAAcU,EAAI7B,QAAU,WAAa,eACzCoB,UAAWS,EAAI7B,QAAU,UAAY,SACtC,WACK,EAAK/jB,MAAM8kB,aAAe,EAAI,EAAK9kB,MAAM6kB,kBAAkBjgB,OAC3D,EAAKd,SAAS,CACVihB,YAAY,EACZhC,aAAa,IAGjB,EAAKjf,SAAS,CACVghB,aAAc,EAAK9kB,MAAM8kB,aAAe,Q,mCAO1C,IAAD,OACDtkB,EAAYkD,KAAKrD,MAAjBG,QAER,GAAGkD,KAAK1D,MAAM6lB,QAAS,OAAO,kBAAC,GAAD,MAE9B,IAAKniB,KAAK1D,MAAM4kB,OAAO9c,GACnB,OACI,yBAAKvK,MAAO,CAAEC,MAAO,MAAO4B,WAAY,OAAQC,YAAa,SACxDqE,KAAKoiB,uBAKlB,IAAM5B,EAAIxgB,KAAKqiB,kBACf,OACI,kBAAC,WAAD,KACI,kBAACzoB,EAAA,EAAD,CAAOQ,UAAW0C,EAAQuO,KAAMlR,UAAW,GACvC,4BAAKqmB,EAAE3R,OAEX,kBAAChE,GAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASzH,QAAS,IAElCid,EAAEJ,QAAQtb,IAAI,SAACod,EAAKld,GAChB,OACI,kBAAC6F,GAAA,EAAD,CAAM3F,IAAKF,EAAOwF,MAAI,GAClB,kBAACvL,EAAA,EAAD,CACIN,QAAQ,YACRvE,UAAW0C,EAAQsjB,QACnBjhB,QAAS,kBAAM,EAAKmjB,aAAaJ,KAG7BA,EAAIrT,a,uCAgBxC,MAAgC,YAAzB7O,KAAK1D,MAAMmlB,UACZ,kBAAC,GAAD,CACEzb,KAAMhG,KAAK1D,MAAMgU,aACjBnK,YAAanG,KAAKkQ,oBAClBtS,KAAMoC,KAAK1D,MAAMklB,aACjBvb,iBAAkB,OAEpB,kBAAC,GAAD,CACED,KAAMhG,KAAK1D,MAAMgU,aACjBnK,YAAanG,KAAKkQ,oBAClBtS,KAAMoC,KAAK1D,MAAMklB,aACjBvb,iBAAkB,S,iDAIF,IAChBnJ,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAAC8I,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAMhG,KAAK1D,MAAMilB,mBACjBtb,iBAAkB,IAClBC,QAASlG,KAAKkQ,oBACdwB,aAAc,CACV,mBAAoB,cAExBlL,QAAS,0BAAMxD,GAAG,cAAT,gBACTe,OAAQ,CACJ,kBAAC9E,EAAA,EAAD,CAAQiG,IAAI,OAAOtG,MAAM,YAAYM,KAAK,QAAQC,QAASa,KAAKmQ,kBAAhE,QAGA,kBAACpP,EAAA,EAAD,CACImE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACNxE,UAAW0C,EAAQ6J,MACnBxH,QAASa,KAAKkQ,qBAEd,uBAAG9V,UAAU,kBAAb,e,sCAQhB,OAAK4F,KAAK1D,MAAM+kB,WAET,kBAAC,GAAD,CACHhC,YAAarf,KAAK1D,MAAM+iB,YACxBC,mBAAoBtf,KAAKsf,mBACzBC,SAAUvf,KAAK1D,MAAM4kB,OAAOpC,KAC5BU,QAASxf,KAAK1D,MAAMglB,gBANW,O,wCAUpB,IAAD,OACNxkB,EAAYkD,KAAKrD,MAAjBG,QAER,OACI,kBAAC4H,GAAA,EAAD,CAASwO,oBAAqBzI,IAAM7O,MAAM,gBACtC,kBAACoG,GAAA,EAAD,CACIrD,QAAQ,WACRC,MAAM,UACNxE,UAAW0C,EAAQ+H,IACnB1F,QAAS,WACL,EAAKiB,SAAS,CACV+hB,SAAS,MAGjB,uBAAG/nB,UAAU,iBAAiBP,MAAO,CAAC8B,YAAa,SAAnD,cATJ,e,+BAiBR,OACI,6BACKqE,KAAKuiB,aACLviB,KAAKwiB,iBACLxiB,KAAKyiB,gBACLziB,KAAK0iB,2BACL1iB,KAAK4V,uB,GArRDpb,aA2RN8I,OACXnB,YAhTW,SAAApH,GAAK,MAAK,CACrBsQ,KAAK,eACEtQ,EAAMmf,OAAOC,UADhB,CAEAtI,WAAY9W,EAAMwI,QAAQ,GAC1B6W,cAAerf,EAAMwI,QAAQ,GAC7B9H,SAAU,MACVE,YAAa,OACbD,WAAY,OACZ1B,aAAc,KAElBomB,QAAS,CACL3I,OAAQ,WAEZ5S,IAAK,CACDwD,SAAU,QACVkD,OAAQxQ,EAAMwI,QAAQ,GACtBiI,MAAOzQ,EAAMwI,QAAQ,OAiSzBlH,YAAQ,SAAAC,GAGJ,MAAO,CACHykB,OAHezkB,EAAXykB,SAMR,SAAAtkB,GACI,OAAOC,YAAmBvB,GAAasB,KAVpC6G,CAYbyd,IC/UI1lB,GAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,IACVC,SAAU,IACVxB,UAAW,SACXyB,WAAY,OACZC,YAAa,QAEjBG,OAAQ,CACJ5B,QAAS,eACT2B,OAAQ,QACRE,UAAW,cAEfH,MAAO,CACHK,SAAU,IAEdC,IAAK,CACDlC,aAAc,MA6BPqC,eAAQ,SAAAC,GACnB,MAAO,IAEP,SAAAG,GACI,OAAOC,YAAmB,GAAID,IAJvBJ,CAzBD,SAACM,GACX,IAAMG,EAAUzB,KADK,EAEG0B,mBAAS,IAFZ,mBAEdC,EAFc,KAERC,EAFQ,KAcrB,OAVAK,oBAAU,WACNE,MAAM,oCAAqC,CACvCC,KAAM,YAELC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAAAG,GACFZ,EAAQY,MAEjB,IAGC,6BACI,kBAAC,IAAD,CAAMzD,UAAW0C,EAAQvB,MACrB,kBAACuD,EAAA,EAAD,KACK9B,OCrCf3B,GAAYC,YAAW,SAAAP,GAAK,MAAK,CACnCsQ,KAAM,CACFvR,MAAO,QACP4B,WAAY,OACZC,YAAa,QAEjBgnB,KAAM,CACFvgB,gBAAiBrH,EAAM8B,QAAQ2G,WAAWC,OAE9C7H,MAAO,CACHC,OAAQ,OAIVgC,GAAO,CACT,CACI+kB,UAAW,aACXhnB,MAAO,aACP2B,IAAK,0CAET,CACIqlB,UAAW,SACXhnB,MAAO,cACP2B,IAAK,0CAET,CACIqlB,UAAW,gBACXhnB,MAAO,iBACP2B,IAAK,6CAET,CACIqlB,UAAW,MACXhnB,MAAO,cACP2B,IAAK,0CAIPslB,GAAO,SAAC,GAAc,IAAZrY,EAAW,EAAXA,KACZ,OACI,kBAACG,EAAA,EAAD,CACIxL,QAAS,WACL2jB,OAAO9c,KAAKwE,EAAKjN,OAGrB,kBAAC4T,GAAA,EAAD,KACI,kBAAC5L,EAAA,EAAD,KACI,uBAAGnL,UAAU,kBACRoQ,EAAKoY,aAIlB,kBAAChY,EAAA,EAAD,CACIpI,QAASgI,EAAK5O,QAElB,kBAAC0V,GAAA,EAAD,KACI,kBAACvQ,EAAA,EAAD,CAAYgiB,KAAK,MAAMpe,aAAW,SAASxF,QAAS,WAChD2jB,OAAO9c,KAAKwE,EAAKjN,OAEjB,uBAAGnD,UAAU,kBAAb,mBAmCL4oB,GA1BD,WACV,IAAMlmB,EAAUzB,KAEhB,OACI,6BACI,kBAACzB,EAAA,EAAD,CAAOQ,UAAW0C,EAAQuO,KAAMlR,UAAW,GACvC,kBAACuE,EAAA,EAAD,CAAYC,QAAQ,KAAKvE,UAAW0C,EAAQlB,OAA5C,qCAIJ,kBAAChC,EAAA,EAAD,CAAOQ,UAAW0C,EAAQuO,KAAMlR,UAAW,GACvC,kBAACkQ,GAAA,EAAD,KAEQxM,GAAKiH,IAAI,SAAC0F,GACN,OACI,kBAAC,GAAD,CAAMtF,IAAKsF,EAAK5O,MAAO4O,KAAMA,UCxEvDrP,GAAW,eACVC,GAGD6nB,G,YACF,WAAYtmB,GAAQ,IAAD,0BAGPlC,GAFR,4CAAMkC,KAEuBA,MAArBlC,YAHO,OAIf,EAAKA,YAAcA,EAJJ,E,sEAQf,OAAQuF,KAAKrD,MAAMH,QAAQwkB,aACvB,IAAM,cACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,WACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,aACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,OACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,OACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,SACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,QACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,MACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,QACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,WACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,SACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,aACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,QACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,SACF,OAAQ,kBAAC,GAAD,MACZ,QACI,OAAQ,kBAAC,GAAD,W,GAvCCxmB,aA4CV6B,eAAQ,SAAAC,GAGnB,MAAO,CACHE,QAHgBF,EAAZE,UAMR,SAAAC,GACI,OAAOC,YAAmBvB,GAAasB,IARhCJ,CASR4mB,IClDD9nB,GAAW,eACVC,GAsFD8nB,G,YACF,WAAYvmB,GAAQ,IAAD,6BACf,4CAAMA,KAEqDA,MAAnDlC,EAHO,EAGPA,YAAaI,EAHN,EAGMA,cAAeD,EAHrB,EAGqBA,cAHrB,OAIf,EAAKH,YAAcA,EACnB,EAAKI,cAAgBA,EACrB,EAAKD,cAAgBA,EANN,E,wEASRG,GACP,OACI,uBAAGX,UAAU,kBACY,QAApBW,EAAMgQ,UAAsB,uBAAyB,yB,qCAKnDtQ,EAAagM,EAAM7I,GAAO,IAAD,OACpC,OACI,kBAAC+M,EAAA,EAAD,CACIxL,QAAS,WACL,EAAK1E,YAAYA,IAErB0B,QAAM,GAEN,kBAACgnB,EAAA,EAAD,KACI,uBAAG/oB,UAAU,kBACRqM,IAGT,kBAACmE,EAAA,EAAD,CAAcpI,QAAS5E,O,+BAKzB,IAAD,SACsBoC,KAAKrD,MAAxBG,EADH,EACGA,QAAS/B,EADZ,EACYA,MAEjB,OACI,yBAAKX,UAAW0C,EAAQuO,MACpB,kBAAC+X,EAAA,EAAD,CACI/a,SAAS,WACTjO,UAAWiM,IAAWvJ,EAAQumB,OAAQrjB,KAAKrD,MAAMH,QAAQ8mB,cAAgBxmB,EAAQymB,cAEjF,kBAACC,EAAA,EAAD,CAASC,gBAAiBzjB,KAAKrD,MAAMH,QAAQ8mB,cACzC,kBAACviB,EAAA,EAAD,CACInC,MAAM,UACN+F,aAAW,cACXxF,QAAS,kBAAM,EAAKtE,iBACpBT,UAAWiM,IAAWvJ,EAAQ4mB,WAAY1jB,KAAKrD,MAAMH,QAAQ8mB,cAAgBxmB,EAAQ6mB,OAErF,uBAAGvpB,UAAU,kBAAb,SAKJ,kBAACsE,EAAA,EAAD,CAAYtE,UAAWiM,IAAWvJ,EAAQyM,MAAOzM,EAAQ8mB,MAAOzkB,QAAS,kBAAM,EAAKvE,iBAAiB+D,QAAQ,KAAKC,MAAM,UAAUilB,QAAM,GAAxI,qBAGA,kBAAC9iB,EAAA,EAAD,CAAY5B,QAAS,kBAAM,EAAKvE,kBAExB,uBAAGR,UAAU,iBAAiBP,MAAO,CAAE+E,MAAO,uBAEtCoB,KAAKrD,MAAMH,QAAQsnB,aACb,oBACA,wBAMtB,kBAACve,EAAA,EAAD,CACInL,UAAW0C,EAAQwI,OACnBnG,QAAS,WACL2jB,OAAO9c,KAAK,wCAAyC,YAGzD,yBACIzL,IAAI,0BACJF,IAAK0pB,SAKrB,kBAACC,EAAA,EAAD,CACIrlB,QAAQ,YACR7B,QAAS,CACL2G,MAAO4C,IAAWvJ,EAAQmnB,aAAcjkB,KAAKrD,MAAMH,QAAQ8mB,cAAgBxmB,EAAQonB,mBAEvFle,KAAMhG,KAAKrD,MAAMH,QAAQ8mB,cAEzB,yBAAKlpB,UAAW0C,EAAQyW,SACpB,kBAACxS,EAAA,EAAD,CAAY5B,QAAS,kBAAM,EAAKtE,kBAC3BmF,KAAKmkB,WAAWppB,KAGzB,kBAACmI,EAAA,EAAD,MACA,kBAACkhB,EAAA,EAAD,KAEQpkB,KAAKqkB,eAAe,cAAe,OAAQ,QAG3CrkB,KAAKqkB,eAAe,WAAY,WAAY,YAEhD,kBAACnhB,EAAA,EAAD,MAEIlD,KAAKqkB,eAAe,OAAQ,WAAY,cAGxCrkB,KAAKqkB,eAAe,QAAS,QAAS,SAGtCrkB,KAAKqkB,eAAe,WAAY,qBAAsB,YAE1D,kBAACnhB,EAAA,EAAD,MAEIlD,KAAKqkB,eAAe,OAAQ,cAAe,QAG3CrkB,KAAKqkB,eAAe,aAAc,UAAW,cAG7CrkB,KAAKqkB,eAAe,SAAU,UAAW,UAGzCrkB,KAAKqkB,eAAe,aAAc,UAAW,cAEjD,kBAACnhB,EAAA,EAAD,MAEIlD,KAAKqkB,eAAe,SAAU,eAAgB,UAG9CrkB,KAAKqkB,eAAe,QAAS,cAAe,aAKhD,kBAACnhB,EAAA,EAAD,MAEIlD,KAAKqkB,eAAe,QAAS,kBAAmB,SAGhDrkB,KAAKqkB,eAAe,SAAU,UAAW,YAIrD,0BAAMjqB,UAAW0C,EAAQyf,SACrB,yBAAKniB,UAAW0C,EAAQyW,UACvBvT,KAAKrD,MAAMH,QAAQsnB,aAAe,kBAAC,EAAD,MAAqB,KACxD,6BACA,kBAACrZ,EAAA,EAAD,CAAMhG,IAAI,EAAM5K,MAAO,CAAE6Q,gBAAiB,MACtC,kBAAC,GAAD,a,GAxJJ4Z,IAAM9pB,WAqKX8I,OACXnB,YAvPW,SAAApH,GAAK,MAAK,CACrBsQ,KAAM,CACFC,SAAU,EACViZ,OAAQ,EACRC,SAAU,SACVnc,SAAU,WACVnO,QAAS,QAEb0pB,KAAM,CACFtY,SAAU,GAEd+X,OAAQ,CACJkB,OAAQxpB,EAAMwpB,OAAOE,OAAS,EAC9Bpc,SAAU,OACVqc,WAAY3pB,EAAM4pB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ9pB,EAAM4pB,YAAYE,OAAOC,MACjCC,SAAUhqB,EAAM4pB,YAAYI,SAASC,iBAG7CzB,YAAa,CACT7nB,WAtBY,IAuBZ5B,MAAM,eAAD,OAvBO,IAuBP,OACL4qB,WAAY3pB,EAAM4pB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ9pB,EAAM4pB,YAAYE,OAAOC,MACjCC,SAAUhqB,EAAM4pB,YAAYI,SAASE,kBAG7CvB,WAAY,CACRhoB,WAAY,GACZC,YAAa,IAEjBgoB,KAAM,CACFzpB,QAAS,QAEb+pB,YAAa,CACT5b,SAAU,WACV6c,OAAQ,QACRC,WAAY,SACZrrB,MAxCY,IAyCZ4qB,WAAY3pB,EAAM4pB,YAAYC,OAAO,QAAS,CAC1CC,OAAQ9pB,EAAM4pB,YAAYE,OAAOC,MACjCC,SAAUhqB,EAAM4pB,YAAYI,SAASE,kBAG7Cf,iBAAiB,aACbkB,UAAW,SACXV,WAAY3pB,EAAM4pB,YAAYC,OAAO,QAAS,CAC1CC,OAAQ9pB,EAAM4pB,YAAYE,OAAOC,MACjCC,SAAUhqB,EAAM4pB,YAAYI,SAASC,gBAEzClrB,MAAOiB,EAAMwI,QAAQ,IACpBxI,EAAMsqB,YAAYC,GAAG,MAAQ,CAC1BxrB,MAAOiB,EAAMwI,QAAQ,KAG7BgQ,QAAQ,aACJrZ,QAAS,OACTiN,WAAY,SACZiE,eAAgB,WAChB1H,QAAS,SACN3I,EAAMmf,OAAO3G,SAEpBgJ,QAAS,CACLpR,UAAW,QACXG,SAAU,EACVlJ,gBAAiBrH,EAAM8B,QAAQ2G,WAAW+hB,QAC1C7hB,QAAS3I,EAAMwI,QAAQ,IAE3BgG,MAAO,CACHkO,OAAQ,WAEZnS,OAAQ,CACJzJ,OAAQ,GACR4b,OAAQ,WAEZ+N,UAAW,CACP1rB,MAAO,GACPuH,OAAQ,MA0KO,CAAEud,WAAW,IAChCviB,YAAQ,SAAAC,GAGJ,MAAO,CACHE,QAHgBF,EAAZE,UAMR,SAAAC,GACI,OAAOC,YAAmBvB,GAAasB,KAVpC6G,CAYb4f,I,UChRIuC,G,mLAGF,OAAOC,aAAe,eAAI1lB,KAAKrD,MAAMH,QAAQzB,U,+BAI7C,OACE,kBAAC4qB,EAAA,EAAD,CAAe5qB,MAAOiF,KAAK4lB,YACzB,yBAAKxrB,UAAU,OACb,kBAAC,GAAD,Y,GAVQI,aAiBH6B,eAAQ,SAAAC,GAGrB,MAAO,CACHE,QAHgBF,EAAZE,UAMR,SAAAC,GACI,OAAOC,YAAmB,GAAID,IARrBJ,CASVopB,ICtCCI,GAAcC,QACW,cAA7BhD,OAAOiD,SAASC,UAEe,UAA7BlD,OAAOiD,SAASC,UAEhBlD,OAAOiD,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvB1L,UAAU2L,cACPC,SAASF,GACTzoB,KAAK,SAAA4oB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlqB,QACfme,UAAU2L,cAAcO,WAK1B3d,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB2d,MAAM,SAAA/f,GACLmC,QAAQnC,MAAM,4CAA6CA,KC/EjE,IAqBerK,GArBD,CACVwkB,YAAa,cACbsC,cAAc,EACdQ,cAAc,EAEd/oB,MAAO,CACH8B,QAAS,CACLlC,KAAM,QACN6H,QAAS,CACLF,KAAM,WAEVD,UAAW,CACPC,KAAM,YAGdukB,WAAY,CACRC,iBAAiB,KCyBdtqB,OAtCf,SAAiBF,EAAOyH,GACtB,GAAqB,qBAAVzH,EACT,OAAOyqB,GAET,OAAQhjB,EAAOpJ,MACb,IAAK,cACH,OAAO,eACF2B,EADL,CAEE0kB,YAAajd,EAAOrJ,OAExB,IAAK,gBACH,OAAO,eACF4B,EADL,CAEEwnB,cAAexnB,EAAMwnB,eAEzB,IAAK,gBACH,OAAO,eACFxnB,EADL,CAEEgnB,cAAehnB,EAAMgnB,eAOzB,IAAK,wBACH,OAAO,eACFhnB,EADL,CAEEvB,MAAM,eACDuB,EAAMvB,MADN,GAEA0a,KAAEuR,IAAI1qB,EAAN,gBAAsByH,EAAO9I,MAAQ8I,EAAO7I,UAGrD,QACE,OAAOoB,ICnBEC,OAhBf,SAAcD,EAAOyH,GACjB,GAAqB,qBAAVzH,EACP,OAAOyqB,GAEX,OAAQhjB,EAAOpJ,MACX,IAAK,cACD,OAAO,eACA2B,EADP,CAEIuC,KAAMkF,EAAOlF,OAErB,QACI,OAAOvC,ICyEJ2Q,GArBL,CACN,CACI7I,GAAI,EACJ6iB,IAAK,GACLla,MAAO,OACPC,OAAQ,GAEZ,CACI5I,GAAI,EACJ6iB,IAAK,GACLla,MAAO,QACPC,OAAQ,GAEZ,CACI5I,GAAI,EACJ6iB,IAAK,GACLla,MAAO,SACPC,OAAQ,ICrEDC,OAXf,SAAa3Q,EAAOyH,GAChB,MAAqB,qBAAVzH,EACAyqB,IAEHhjB,EAAOpJ,KAEA2B,ICqCJ4qB,GA7CC,CACZ,CACI9iB,GAAI,EACJ4J,SAAU,WACViE,UAAU,EACV9E,MAAO,CACH,CACI/I,GAAI,EACJyK,KAAM,OACNvB,WAAW,EACXwB,MAAO,GACPC,WAAY,GAEhB,CACI3K,GAAI,GACJyK,KAAM,QACNvB,WAAW,EACXwB,MAAO,gBACPC,WAAY,GAEhB,CACI3K,GAAI,GACJyK,KAAM,MACNvB,WAAW,EACXwB,MAAO,GACPC,WAAY,KAIxB,CACI3K,GAAI,EACJ4J,SAAU,SACViE,UAAU,EACV9E,MAAO,CACH,CACI/I,GAAI,GACJyK,KAAM,aACNvB,WAAW,EACXwB,MAAO,GACPC,WAAY,M,oBC2FboY,OA/Hf,WAAgE,IAA3C7qB,EAA0C,uDAAlC8qB,KAAWL,IAAehjB,EAAQ,uCAC3D,OAAQA,EAAOpJ,MACX,IAAK,gBACD,OAAO2B,EAEX,IAAK,WAAa,IACNuB,EAASkG,EAATlG,KAER,OAAIA,GAAQA,EAAKwpB,eAAe,OAASxpB,EAAKwpB,eAAe,QAClDD,KAAW9qB,EAAMwI,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAOvG,EAAKuG,GACV,eACAoG,EADP,CAEI2C,MAAM,GAAD,oBACE3C,EAAK2C,OADP,gBAEMtP,EAAK+Q,UAKbpE,KAKZlO,EAEX,IAAK,WAAa,IACNuB,EAASkG,EAATlG,KAER,OAAIA,EACM,GAAN,oBACOvB,GADP,gBAGWuB,KAKRvB,EAEX,IAAK,cAAgB,IACTuB,EAASkG,EAATlG,KAER,OAAIA,GAAQA,EAAKwpB,eAAe,MACrBD,KAAW9qB,EAAM8Q,OAAO,SAAC5C,GAC5B,OAAIA,EAAKpG,KAAOvG,EAAKuG,MAOtB9H,EAEX,IAAK,YAAc,IACPuB,EAASkG,EAATlG,KAER,OAAIA,GAAQA,EAAKwpB,eAAe,MACrBD,KAAW9qB,EAAMwI,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAOvG,EAAKuG,GACV,eACAoG,EADP,GAEO3M,GAGJ,eAAI2M,MAIZlO,EAEX,IAAK,cAAgB,IACTuB,EAASkG,EAATlG,KAER,OAAIA,GAAQA,EAAKwpB,eAAe,OAASxpB,EAAKwpB,eAAe,QAClDD,KAAW9qB,EAAMwI,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAOvG,EAAKuG,GACV,eACAoG,EADP,CAEI2C,MAAO3C,EAAK2C,MAAMC,OAAO,SAACS,GACtB,OAAIA,EAAKzJ,KAAOvG,EAAK+Q,KAAKxK,OAO3BoG,KAKZlO,EAEX,IAAK,YAAc,IACPuB,EAASkG,EAATlG,KAER,OAAIA,GAAQA,EAAKwpB,eAAe,OAASxpB,EAAKwpB,eAAe,QAClDD,KAAW9qB,EAAMwI,IAAI,SAAC0L,GACzB,OAAIA,EAAKpM,KAAOvG,EAAKuG,GACV,eACAoM,EADP,CAEIrD,MAAOqD,EAAKrD,MAAMrI,IAAI,SAACuI,GACnB,OAAIA,EAAKjJ,KAAOvG,EAAK+Q,KAAKxK,GACf,eACAiJ,EADP,GAEOxP,EAAK+Q,MAGLvB,MAKZmD,KAKZlU,EAEX,QACI,OAAOA,ICnGJ4Z,GA3BA,CACX,CACI9R,GAAI,EACJmF,MAAO,gBACPyM,MAAO,EACP/B,KAAM,IAAIA,KACVlH,MAAO,UACPkJ,KAAM,GAEV,CACI7R,GAAI,EACJmF,MAAO,wBACPyM,MAAO,GACP/B,KAAM,IAAIA,KACVlH,MAAO,UACPkJ,KAAM,IAEV,CACI7R,GAAI,EACJmF,MAAO,UACPyM,MAAO,EACP/B,KAAM,IAAIA,KACVlH,MAAO,UACPkJ,KAAM,MCsECqR,OA1Ff,WAAoE,IAA3ChrB,EAA0C,uDAAlC8qB,KAAWL,IAAehjB,EAAQ,uCAC/D,OAAQA,EAAOpJ,MACX,IAAK,gBACD,OAAO2B,EACX,IAAK,cAAgB,IACTuB,EAASkG,EAATlG,KAER,OAAIA,EACM,GAAN,oBACOvB,GADP,gBAGWuB,KAKRvB,EAEX,IAAK,eAAiB,IACVuB,EAASkG,EAATlG,KAER,OAAIA,GAAQA,EAAKwpB,eAAe,MACrBD,KAAW9qB,EAAMwI,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAOvG,EAAKuG,GACV,eACAoG,EADP,GAEO3M,GAGJ,eACA2M,MAKRlO,EAEX,IAAK,iBAAmB,IACZuB,EAASkG,EAATlG,KAER,OAAIA,GAAQA,EAAKwpB,eAAe,MACrBD,KAAW9qB,EAAM8Q,OAAO,SAAC5C,GAC5B,OAAIA,EAAKpG,KAAOvG,EAAKuG,MAOtB9H,EAEX,IAAK,WAAa,IACNuB,EAASkG,EAATlG,KAER,OAAa,IAATA,GAAe0pB,MAAM1pB,GAYlBvB,EAXI8qB,KAAW9qB,EAAMwI,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAOvG,EACL,eACA2M,EADP,CAEIwL,MAAOxL,EAAKwL,MAAQ,IAGrB,eAAKxL,MAMxB,IAAK,WAAa,IACN3M,EAASkG,EAATlG,KAER,OAAa,IAATA,GAAe0pB,MAAM1pB,GAYlBvB,EAXI8qB,KAAW9qB,EAAMwI,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAOvG,EACL,eACA2M,EADP,CAEIwL,MAAOxL,EAAKwL,MAAQ,IAGrB,eAAKxL,MAMxB,QACI,OAAOlO,ICjEJwS,GAxBH,CACR,CACI1K,GAAI,EACJmF,MAAO,kBACPY,QAAS,mFACT4C,MAAO,UACPkH,KAAM,IAAIA,MAEd,CACI7P,GAAI,EACJmF,MAAO,aACPY,QAAS,IACT4C,MAAO,UACPkH,KAAM,IAAIA,MAEd,CACI7P,GAAI,EACJmF,MAAO,cACPY,QAAS,IACT4C,MAAO,UACPkH,KAAM,IAAIA,OC2CHqT,OA5Df,WAAoE,IAA3ChrB,EAA0C,uDAAlC8qB,KAAWL,IAAehjB,EAAQ,uCAC/D,OAAQA,EAAOpJ,MACX,IAAK,gBACD,OAAO2B,EAEX,IAAK,WAAa,IACNuB,EAASkG,EAATlG,KAER,OAAIA,EACM,GAAN,oBACOvB,GADP,gBAGWuB,KAKRvB,EAGX,IAAK,YAAc,IACPuB,EAASkG,EAATlG,KAER,OAAIA,GAAQA,EAAKwpB,eAAe,MACrBD,KAAW9qB,EAAMwI,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAOvG,EAAKuG,GACV,eACAoG,EADP,GAEO3M,GAGJ,eACA2M,MAKRlO,EAGX,IAAK,cAAgB,IACTuB,EAASkG,EAATlG,KAER,OAAIA,GAAQA,EAAKwpB,eAAe,MACrBD,KAAW9qB,EAAM8Q,OAAO,SAAC5C,GAC5B,OAAIA,EAAKpG,KAAOvG,EAAKuG,MAOtB9H,EAGX,QACI,OAAOA,IC4BJkrB,GAvFO,CAClB,CACIpjB,GAAI,EACJ0a,KAAM,iBACNE,iBAAkB,wDAClBjS,MAAO,OACPmT,KAAM,GACNC,UAAW,CACP,CACI/b,GAAI,EACJyK,KAAM,SACNuR,QAAS,CACL,CACIvR,KAAM,WACNwR,SAAS,GAEb,CACIxR,KAAM,SACNwR,SAAS,GAEb,CACIxR,KAAM,UACNwR,SAAS,GAEb,CACIxR,KAAM,SACNwR,SAAS,KAIrB,CACIjc,GAAI,EACJyK,KAAM,gBACNuR,QAAS,CACL,CACIvR,KAAM,iBACNwR,SAAS,GAEb,CACIxR,KAAM,SACNwR,SAAS,GAEb,CACIxR,KAAM,SACNwR,SAAS,GAEb,CACIxR,KAAM,kBACNwR,SAAS,OAM7B,CACIjc,GAAI,EACJ0a,KAAM,yBACNE,iBAAkB,qDAClBjS,MAAO,OACPmT,KAAM,GACNC,UAAW,CACP,CACI/b,GAAI,EACJyK,KAAM,+CACNuR,QAAS,CACL,CACIvR,KAAM,iBACNwR,SAAS,GAEb,CACIxR,KAAM,QACNwR,SAAS,GAEb,CACIxR,KAAM,uCACNwR,SAAS,GAEb,CACIxR,KAAM,wBACNwR,SAAS,QCpClBU,OAxCf,SAAgBzkB,EAAOyH,GACrB,GAAqB,qBAAVzH,EACT,OAAOyqB,GAET,OAAQhjB,EAAOpJ,MACb,IAAK,MACH,MAAO,GACT,IAAK,cAAgB,IACXkD,EAASkG,EAATlG,KAER,OAAIA,GAAQA,EAAKwpB,eAAe,MACvBD,KAAW9qB,EAAM8Q,OAAO,SAAC5C,GAC9B,OAAIA,EAAKpG,KAAOvG,EAAKuG,MAOlB9H,EAET,IAAK,WAAa,IACRuB,EAASkG,EAATlG,KAER,OAAIA,EACM,GAAN,oBACOvB,GADP,gBAGWuB,KAKRvB,EAET,QACE,OAAOA,IC9BEmrB,eAAgB,CAC3BjrB,WACAD,QACA0Q,OACAY,QACAqI,YACApH,SACAiS,YCLE2G,GAAQC,YAAYC,IAI1BC,IAASC,OACL,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,GAAD,OAEJK,SAASC,eAAe,SfCb,WACb,GAA6C,kBAAmBvN,UAAW,CAGzE,GADkB,IAAIwN,IAAIC,cAAwBpF,OAAOiD,UAC3CoC,SAAWrF,OAAOiD,SAASoC,OAIvC,OAGFrF,OAAOsF,iBAAiB,OAAQ,WAC9B,IAAMjC,EAAK,UAAM+B,cAAN,sBAEPrC,KAiDV,SAAiCM,GAE/B3oB,MAAM2oB,GACHzoB,KAAK,SAAAC,GAGkB,MAApBA,EAAS0qB,SACuD,IAAhE1qB,EAAS2qB,QAAQC,IAAI,gBAAgBtP,QAAQ,cAG7CwB,UAAU2L,cAAcoC,MAAM9qB,KAAK,SAAA4oB,GACjCA,EAAamC,aAAa/qB,KAAK,WAC7BolB,OAAOiD,SAAS2C,aAKpBxC,GAAgBC,KAGnBS,MAAM,WACL5d,QAAQC,IACN,mEArEA0f,CAAwBxC,GAIxB1L,UAAU2L,cAAcoC,MAAM9qB,KAAK,WACjCsL,QAAQC,IACN,+GAMJid,GAAgBC,Me1BxByC,K","file":"static/js/main.75a8ff8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.9577f6bf.jpg\";","import React, { Component } from 'react';\r\nimport logo from '../logo.svg';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nclass ExtendedHeader extends Component {\r\n    render() {\r\n        const style = {\r\n            width: \"90%\",\r\n            marginTop: -25,\r\n            marginBottom: 40,\r\n            textAlign: 'center',\r\n            display: 'inline-block',\r\n        };\r\n        return (\r\n            <Paper\r\n                style={style}\r\n                elevation={10}\r\n            >\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <h1 className=\"App-title\">Project // NEON /</h1>\r\n                    <p>Version 0.8.9 // BY: Mihajlo Marjanović</p>\r\n                    <p>Built with React.js & Redux.js & Material UI</p>\r\n                </header>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExtendedHeader;","export function page_change(page) {\r\n    return {\r\n        type: \"PAGE_CHANGE\",\r\n        page\r\n    }\r\n}\r\n\r\nexport function toggle_header() {\r\n    return {\r\n        type: \"TOGGLE_HEADER\",\r\n    }\r\n}\r\n\r\nexport function toggle_drawer() {\r\n    return {\r\n        type: \"TOGGLE_DRAWER\",\r\n    }\r\n}\r\n\r\nexport function togge_theme(theme) {\r\n    return {\r\n        type: \"TOGGLE_THEME\",\r\n        theme\r\n    }\r\n}\r\n\r\nexport function change_theme_property(prop, value) {\r\n    return {\r\n        type: \"CHANGE_THEME_PROPERTY\",\r\n        prop,\r\n        value\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport moment from 'moment'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { FluentRevealEffect } from \"fluent-reveal-effect\";\r\n\r\nimport * as GeneralActions from \"../../Actions/GeneralActions\";\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 275,\r\n        maxWidth: 435,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: 10,\r\n    },\r\n    title: {\r\n        margin: 7\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    cardTitle: {\r\n        fontSize: 14,\r\n        textAlign: 'left'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        margin: 3,\r\n    },\r\n    actions: {\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nconst WelcomePage = (props) => {\r\n    const { page_change, toggle_header, toggle_drawer, change_theme_property, General: { theme: { palette: { type: themeType } } } } = props;\r\n\r\n    const classes = useStyles();\r\n    const [fact, setFact] = useState('');\r\n    const [currentTime, setCurrentTime] = useState(moment().format('MM/DD/YYYY HH:mm:ss'));\r\n\r\n    useEffect(() => {\r\n        let url = `http://numbersapi.com/${moment().format('M/D')}/date`;\r\n        fetch(url, {\r\n            mode: 'no-cors'\r\n        })\r\n            .then((response) => response.text())\r\n            .then(data => {\r\n                setFact(data)\r\n            })\r\n    }, [])\r\n\r\n    // console.log(themeType)\r\n    useEffect(() => {\r\n        var timeInt = setInterval(() => {\r\n            return setCurrentTime(moment().format('MM/DD/YYYY HH:mm:ss'));\r\n        }, 1000)\r\n\r\n        return () => clearInterval(timeInt);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        FluentRevealEffect.applyEffect(\".effect-group-container\", {\r\n            clickEffect: true,\r\n            lightColor: \"rgb(0,0,0)\",\r\n            gradientSize: 80,\r\n            isContainer: true,\r\n            children: {\r\n                borderSelector: \".btn-border\",\r\n                elementSelector: \".btn\",\r\n                lightColor: \"rgb(0,0,0)\",\r\n                gradientSize: 150\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant='h4' color=\"secondary\" className={classes.title}>\r\n                WELCOME, {props.User.name} !\r\n            </Typography>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography className={classes.cardTitle} color=\"secondary\" gutterBottom>\r\n                        On this day\r\n                    </Typography>\r\n                    {fact}\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\" onClick={() => { page_change('Facts') }}>See more fun facts</Button>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography className={classes.cardTitle} color=\"secondary\" gutterBottom>\r\n                        Current time\r\n                    </Typography>\r\n                    {currentTime}\r\n                </CardContent>\r\n            </Card>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography variant='h6'>\r\n                        Feel free to explore NEON\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.actions}>\r\n                    <Button variant=\"contained\" size=\"small\" color={\"primary\"} className={classes.button}\r\n                        onClick={() => { toggle_drawer() }}\r\n                    >\r\n                        <i className=\"material-icons\">\r\n                            menu_open\r\n                        </i>\r\n                        Open Menu\r\n                     </Button>\r\n                    <Button variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.button}\r\n                        onClick={() => { toggle_header() }}\r\n                    >\r\n                        <i className=\"material-icons\">\r\n                            info\r\n                        </i>\r\n                        See Details\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"small\" className={classes.button}\r\n                        onClick={() => { page_change('UserPage') }}\r\n                    >\r\n                        <i className=\"material-icons\">\r\n                            settings_input_component\r\n                        </i>\r\n                        Change Settings\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={themeType === 'dark'}\r\n                                onChange={() => change_theme_property('palette.type', themeType === 'dark' ? 'light' : 'dark')}\r\n                                value=\"theme\"\r\n                                className={classes.switch}\r\n                            />\r\n                        }\r\n                        label=\"Switch to the dark side?\"\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <div className=\"effect-group-container\">\r\n                        <div className=\"btn-border\">\r\n                            <button className=\"btn\">REVEAL</button>\r\n                        </div>\r\n                        <div className=\"btn-border\">\r\n                            <button className=\"btn\">REVEAL</button>\r\n                        </div>\r\n                        <div className=\"btn-border\">\r\n                            <button className=\"btn\">REVEAL</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(state => {\r\n    const { User, General } = state;\r\n\r\n    return {\r\n        User,\r\n        General\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(WelcomePage);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Paper,\r\n    TextField,\r\n    Button,\r\n    Fab,\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    IconButton\r\n} from '@material-ui/core';\r\n\r\nconst styles = theme => {\r\n    // console.log(theme)\r\n    return {\r\n        paperStyle: {\r\n            width: \"380px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"10%\"\r\n        },\r\n        operationsDiv: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.palette.secondary.main,\r\n            color: \"white\"\r\n        },\r\n        operationsButtons: {\r\n            fontSize: \"30px\",\r\n            color: \"white\"\r\n        },\r\n        numbersDiv: {\r\n            backgroundColor: theme.palette.grey,\r\n            // color: grey400,\r\n        },\r\n        flatButton: {\r\n            height: \"60px\",\r\n            width: \"50px\",\r\n            borderRadius: \"100%\",\r\n            fontSize: '32px'\r\n        },\r\n        actionButton: {\r\n            marginLeft: 17,\r\n            backgroundColor: theme.palette.primary.main,\r\n            fontSize: \"20px\",\r\n        },\r\n        inputStyle: {\r\n            fontSize: 32,\r\n            textAlign: \"right\",\r\n            width: \"70%\",\r\n        },\r\n        iconButtons: {\r\n            display: \"inline-block\",\r\n        }\r\n    }\r\n}\r\n\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fN: \"\",\r\n            operation: \"\",\r\n            sN: \"\",\r\n            first: true,\r\n        }\r\n    }\r\n\r\n    result() {\r\n        if (!this.state.first && this.state.sN) {\r\n            let fNum = parseInt(this.state.fN, 10);\r\n            let sNum = parseInt(this.state.sN, 10);\r\n            switch (this.state.operation) {\r\n                case \"+\":\r\n                    this.setState({\r\n                        fN: fNum + sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"-\":\r\n                    this.setState({\r\n                        fN: fNum - sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"×\":\r\n                    this.setState({\r\n                        fN: fNum * sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"÷\":\r\n                    this.setState({\r\n                        fN: fNum / sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                default:\r\n                    return\r\n            }\r\n        }\r\n    }\r\n\r\n    addNum(num) {\r\n        if (this.state.first) {\r\n            this.setState({\r\n                fN: this.state.fN.toString() + num\r\n            })\r\n        } else {\r\n            this.setState({\r\n                sN: this.state.sN.toString() + num\r\n            })\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.setState({\r\n            fN: \"\",\r\n            operation: \"\",\r\n            sN: \"\",\r\n            first: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        const {fN, first, sN, operation} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Paper className={classes.paperStyle} elevation={8}>\r\n                    <TextField\r\n                        placeholder=\"insert number\"\r\n                        value={first ? fN : sN}\r\n                        type=\"number\"\r\n                        autoFocus\r\n                        variant='outlined'\r\n                        className={classes.inputStyle}\r\n                        label={first ? fN : fN + operation + sN}\r\n                        onInput={\r\n                            (event) => {\r\n                                first ?\r\n                                    this.setState({\r\n                                        fN: event.target.value\r\n                                    })\r\n                                    :\r\n                                    this.setState({\r\n                                        sN: event.target.value\r\n                                    })\r\n                            }\r\n                        }\r\n                    />\r\n                    <IconButton className={classes.iconButtons} name={\"del\"} label=\"del\" onClick={\r\n                        (event) => {\r\n                            let fNum = \"\" + fN;\r\n                            let sNum = \"\" + sN;\r\n                            if (first) {\r\n                                if (fNum !== \"\") {\r\n                                    this.setState({\r\n                                        fN: fNum.substring(0, fNum.length - 1)\r\n                                    })\r\n                                }\r\n                            } else {\r\n                                if (sNum !== \"\") {\r\n                                    this.setState({\r\n                                        sN: sNum.substring(0, sNum.length - 1)\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                    }>\r\n                        <i className=\"material-icons\">\r\n                            backspace\r\n                        </i>\r\n                    </IconButton>\r\n                    <IconButton className={classes.iconButtons} onClick={() => { this.clearAll() }}>\r\n                        <i className=\"material-icons\">\r\n                            clear\r\n                        </i>\r\n                    </IconButton>\r\n                    <br />\r\n                    <Paper elevation={4} className={classes.operationsDiv}>\r\n                        <Button\r\n                            style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }}\r\n                            label=\"+\"\r\n                            className={classes.operationsButtons}\r\n                            onClick={\r\n                                (event) => {\r\n                                    this.setState({\r\n                                        operation: \"+\",\r\n                                        first: false,\r\n                                    })\r\n                                }\r\n                            }> + </Button>\r\n                        <Button\r\n                            style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }}\r\n                            value={\"-\"}\r\n                            label=\"-\"\r\n                            className={classes.operationsButtons}\r\n                            onClick={\r\n                                (event) => {\r\n                                    this.setState({\r\n                                        operation: \"-\",\r\n                                        first: false,\r\n                                    })\r\n                                }\r\n                            }> - </Button>\r\n                        <Button\r\n                            style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }}\r\n                            value={\"×\"}\r\n                            label=\"×\"\r\n                            className={classes.operationsButtons}\r\n                            onClick={\r\n                                (event) => {\r\n                                    this.setState({\r\n                                        operation: \"×\",\r\n                                        first: false,\r\n                                    })\r\n                                }\r\n                            }> × </Button>\r\n                        <Button\r\n                            style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }}\r\n                            value={\"÷\"}\r\n                            label=\"÷\"\r\n                            className={classes.operationsButtons}\r\n                            onClick={\r\n                                (event) => {\r\n                                    this.setState({\r\n                                        operation: \"÷\",\r\n                                        first: false,\r\n                                    })\r\n                                }\r\n                            }> ÷ </Button>\r\n                    </Paper>\r\n                    <Table className={classes.numbersDiv}>\r\n                        <TableBody>\r\n                            <TableRow >\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"7\" onClick={() => {\r\n                                        this.addNum(7)\r\n                                    }}> 7 </Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"8\" onClick={() => {\r\n                                        this.addNum(8)\r\n                                    }}> 8</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"9\" onClick={() => {\r\n                                        this.addNum(9)\r\n                                    }}> 9</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"4\" onClick={() => {\r\n                                        this.addNum(4)\r\n                                    }}> 4</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"5\" onClick={() => {\r\n                                        this.addNum(5)\r\n                                    }}> 5</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"6\" onClick={() => {\r\n                                        this.addNum(6)\r\n                                    }}> 6</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"1\" onClick={() => {\r\n                                        this.addNum(1)\r\n                                    }}> 1</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"2\" onClick={() => {\r\n                                        this.addNum(2)\r\n                                    }}> 2</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"3\" onClick={() => {\r\n                                        this.addNum(3)\r\n                                    }}> 3</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\".\" onClick={() => {\r\n                                        this.addNum(\".\")\r\n                                    }} disabled={true}> .</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"0\" onClick={() => {\r\n                                        this.addNum(0)\r\n                                    }}> 0</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Fab className={classes.actionButton} elevation={4} onClick={() => {\r\n                                        this.result()\r\n                                    }}>\r\n                                        =\r\n                                    </Fab>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Calculator);\r\n","export function name_change(name) {\r\n    return { \r\n        type: \"NAME_CHANGE\",\r\n        name\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { CompactPicker, SliderPicker } from 'react-color';\r\n\r\nimport * as UserActions from \"../.././Actions/UserActions\";\r\nimport * as GeneralActions from \"../.././Actions/GeneralActions\";\r\n\r\nconst MainActions = {\r\n    ...UserActions,\r\n    ...GeneralActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    UserPaper: {\r\n        margin: theme.spacing(2),\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        padding: 20\r\n    },\r\n\r\n    textInput: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    section: {\r\n        margin: theme.spacing(3)\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    }\r\n});\r\n\r\nclass UserPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { name_change } = this.props\r\n        this.name_change = name_change\r\n\r\n        this.state = {\r\n            userName: \"\",\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, General: { theme: { palette: { type: themeType, primary: { main: primaryColor }, secondary: { main: secondaryColor } } } } } = this.props;\r\n\r\n        return (\r\n            <Paper elevation={10} className={classes.UserPaper}>\r\n                <TextField\r\n                    id=\"userName-changer\"\r\n                    variant=\"outlined\"\r\n                    label=\"Your name\"\r\n                    className={classes.textInput}\r\n                    value={this.props.User.name}\r\n                    onChange={(event) => {\r\n                        this.name_change(event.target.value)\r\n                    }}\r\n                />\r\n                <Divider variant=\"middle\" />\r\n                <div className={classes.section}>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={themeType === 'dark'}\r\n                            onChange={() => this.props.change_theme_property('palette.type', themeType === 'dark' ? 'light' : 'dark')}\r\n                            value=\"theme\"\r\n                            className={classes.switch}\r\n                        />\r\n                    }\r\n                    label=\"Switch to the dark side?\"\r\n                />\r\n                </div>\r\n                <div className={classes.section}>\r\n                    <Typography variant='subtitle1' color=\"primary\">\r\n                        Change PRIMARY color\r\n                    </Typography>\r\n                    <CompactPicker\r\n                        color={primaryColor}\r\n                        onChangeComplete={(value) => this.props.change_theme_property('palette.primary.main', value.hex)}\r\n                    />\r\n                </div>\r\n                <div className={classes.section}>\r\n                    <Typography variant='subtitle1' color=\"secondary\">\r\n                        Change SECONDARY color\r\n                    </Typography>\r\n                    <SliderPicker\r\n                        color={secondaryColor}\r\n                        onChangeComplete={(value) => this.props.change_theme_property('palette.secondary.main', value.hex)}\r\n                    />\r\n                </div>\r\n                <Divider variant=\"middle\" />\r\n                <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\r\n                    Delete your stats\r\n                    <i className=\"material-icons\" style={{ marginLeft: \"7px\" }}>\r\n                        delete_forever\r\n                    </i>\r\n                </Button>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { User, General } = state;\r\n\r\n        return {\r\n            User,\r\n            General\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(UserPage);","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport moment from 'moment';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    chip: {\r\n        display: \"block\",\r\n        marginTop: theme.spacing(1),\r\n    }\r\n});\r\n\r\nclass Stopwatch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateDisplay = this.updateDisplay.bind(this);\r\n\r\n        this.state = {\r\n            display: \"00:00:00\",\r\n            flags: [],\r\n            action: \"pause\",\r\n            time: null\r\n        }\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.initial();\r\n    }\r\n\r\n    renderDisplay() {\r\n        return (\r\n            <h1>\r\n                {this.state.display}\r\n            </h1>\r\n        )\r\n    }\r\n\r\n    updateDisplay() {\r\n        this.setState({\r\n            time: moment(this.state.time.add(1, \"second\"))\r\n        }, () => {\r\n            this.setState({\r\n                display: moment(this.state.time).format(\"HH:mm:ss\")\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    initial() {\r\n        this.setState({\r\n            display: \"00:00:00\",\r\n            flags: [],\r\n            action: \"pause\",\r\n            time: null\r\n        });\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    setFlag() {\r\n        this.setState({\r\n            flags: [\r\n                ...this.state.flags,\r\n                {\r\n                    ID: Math.floor(Math.random() * 1000),\r\n                    time: this.state.display\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    renderControls() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fade in={true}>\r\n                <div>\r\n                    <Tooltip title={this.state.action === \"start\" ? \"Put a flag\" : \"Reset\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                            onClick={() => {\r\n                                this.state.action === \"start\"\r\n                                    ? this.setFlag()\r\n                                    : this.initial()\r\n                            }}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                {this.state.action === \"start\" ? \"outlined_flag\" : \"restore\"}\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        color=\"primary\"\r\n                        className={classes.fab}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n                                time: this.state.display === \"00:00:00\"\r\n                                    ? moment(\"00:00:00\", \"HH:mm:ss\")\r\n                                    : this.state.time\r\n                            }, () => {\r\n                                if (this.state.action === \"start\") {\r\n                                    this.timer = setInterval(this.updateDisplay, 1000);\r\n                                } else {\r\n                                    clearInterval(this.timer);\r\n                                }\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                            {this.state.action === \"start\" ? \"pause\" : \"play_arrow\"}\r\n                        </i>\r\n                        {this.state.action === \"start\" ? \"Pause\" : \"Start\"}\r\n                    </Fab>\r\n\r\n                    <Tooltip title={\"Pin to Home\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                add_location\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n    renderFlags() {\r\n        const { flags } = this.state;\r\n        if (!flags || !flags.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    flags.map((flag, index) => {\r\n                        return (\r\n                            <div\r\n                                className={classes.chip}\r\n                                key={flag.ID}\r\n                            >\r\n                                <Badge\r\n                                    badgeContent={index + 1}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    <Chip\r\n                                        avatar={\r\n                                            <Avatar>\r\n                                                <i className=\"material-icons\">\r\n                                                    flag\r\n                                                </i>\r\n                                            </Avatar>\r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        label={flag.time}\r\n\r\n                                    />\r\n                                </Badge>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderDisplay()}\r\n                {this.renderControls()}\r\n                {this.renderFlags()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Stopwatch);","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nclass Success extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.props.open}\r\n                autoHideDuration={this.props.autoHideDuration ? this.props.autoHideDuration : 3000}\r\n                onClose={this.props.handleClose}\r\n            >\r\n                <SnackbarContent\r\n                    className={classNames(classes.success)}\r\n                    aria-describedby=\"client-snackbar\"\r\n                    message={\r\n                        <span id=\"client-snackbar\" className={classes.message}>\r\n                            <i className={classNames(classes.icon, classes.iconVariant, \"material-icons\")}>\r\n                                check_circle_outline\r\n                            </i>\r\n                            {this.props.text.length ? this.props.text : \"Copied to clipboard!\"}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.props.handleClose}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                close\r\n                            </i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Success);","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport Success from '../../../Components/SnackBars/SnackSuccess';\r\n\r\nimport moment from 'moment';\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    chip: {\r\n        display: \"block\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    InputFields: {\r\n        margin: 7,\r\n    }\r\n});\r\n\r\nclass Countdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateDisplay = this.updateDisplay.bind(this);\r\n        this.handleSBClose = this.handleSBClose.bind(this);\r\n\r\n        this.state = {\r\n            display: \"00:00:00\",\r\n            action: \"pause\",\r\n            time: {\r\n                h: 0,\r\n                m: 0,\r\n                s: 20\r\n            },\r\n            snackBarSuccess: false\r\n        }\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.initial();\r\n    }\r\n\r\n    handleInputChange(label, value) {\r\n        this.setState({\r\n            time: {\r\n                ...this.state.time,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    makeOptionsArr(label) {\r\n        if (label === \"h\") {\r\n            let arr = [];\r\n            for (let i = 0; i < 24; i++) {\r\n                let obj = {\r\n                    value: i,\r\n                    label: i,\r\n                }\r\n                arr.push(obj);\r\n            }\r\n\r\n            return arr;\r\n        }\r\n\r\n        let arr = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            let obj = {\r\n                value: i,\r\n                label: i,\r\n            }\r\n            arr.push(obj);\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    renderDisplay() {\r\n        const { classes } = this.props;\r\n        if (this.state.display === \"00:00:00\") {\r\n            return (\r\n                <div className={classes.InputFields}>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Hours\"\r\n                        value={this.state.time.h}\r\n                        onChange={(e) => this.handleInputChange('h', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">H</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"h\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Minutes\"\r\n                        value={this.state.time.m}\r\n                        onChange={(e) => this.handleInputChange('m', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">M</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"m\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Seconds\"\r\n                        value={this.state.time.s}\r\n                        onChange={(e) => this.handleInputChange('s', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">S</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"s\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <h1>\r\n                {moment(this.state.display).format(\"HH:mm:ss\")}\r\n            </h1>\r\n        )\r\n    }\r\n\r\n    updateDisplay() {\r\n        if (this.state.display.format(\"HH:mm:ss\") === \"00:00:00\") {\r\n            clearInterval(this.timer)\r\n            this.initial();\r\n            this.setState({\r\n                snackBarSuccess: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                display: this.state.display.subtract(1, \"second\")\r\n            })\r\n        }\r\n    }\r\n\r\n    initial() {\r\n        this.setState({\r\n            display: \"00:00:00\",\r\n            action: \"pause\",\r\n            time: {\r\n                h: 0,\r\n                m: 0,\r\n                s: 20\r\n            }\r\n        });\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    handleStartPause() {\r\n        if (this.state.display === \"00:00:00\") {\r\n            const { time } = this.state;\r\n            this.setState({\r\n                display: moment(`${time.h}:${time.m}:${time.s}`, \"HH:mm:ss\"),\r\n            });\r\n            this.timer = setInterval(this.updateDisplay, 1000);\r\n            return;\r\n        }\r\n\r\n        if (this.state.action === \"pause\") {\r\n            clearInterval(this.timer);\r\n            return;\r\n        } else {\r\n            this.timer = setInterval(this.updateDisplay, 1000);\r\n            return;\r\n        }\r\n\r\n        /* this.setState({\r\n            action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n            time: this.state.display === \"00:00:00\"\r\n                ? moment(\"00:00:00\", \"HH:mm:ss\")\r\n                : this.state.time\r\n        }, () => {\r\n            if (this.state.action === \"start\") {\r\n                this.timer = setInterval(this.updateDisplay, 1000);\r\n            } else {\r\n                clearInterval(this.timer);\r\n            }\r\n        }) */\r\n    }\r\n\r\n    renderControls() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fade in={true}>\r\n                <div>\r\n                    <Tooltip title={\"Reset\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                            onClick={() => {\r\n                                this.initial()\r\n                            }}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                {\"restore\"}\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        color=\"primary\"\r\n                        className={classes.fab}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n                            }, () => {\r\n                                this.handleStartPause()\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                            {this.state.action === \"start\" ? \"pause\" : \"play_arrow\"}\r\n                        </i>\r\n                        {this.state.action === \"start\" ? \"Pause\" : \"Start\"}\r\n                    </Fab>\r\n\r\n                    <Tooltip title={\"Pin to Home\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                add_location\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n    renderFlags() {\r\n        const { flags } = this.state;\r\n        if (!flags || !flags.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    flags.map((flag, index) => {\r\n                        return (\r\n                            <div\r\n                                className={classes.chip}\r\n                                key={flag.ID}\r\n                            >\r\n                                <Badge\r\n                                    badgeContent={index + 1}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    <Chip\r\n                                        avatar={\r\n                                            <Avatar>\r\n                                                <i className=\"material-icons\">\r\n                                                    flag\r\n                                                </i>\r\n                                            </Avatar>\r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        label={flag.time}\r\n                                    />\r\n                                </Badge>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSBClose() {\r\n        this.setState({\r\n            snackBarSuccess: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderDisplay()}\r\n                {this.renderControls()}\r\n                {this.renderFlags()}\r\n                <Success\r\n                    open={this.state.snackBarSuccess}\r\n                    handleClose={this.handleSBClose}\r\n                    text={\"Countdown finished!\"}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Countdown);","import React, { Component, Fragment } from 'react';\r\n\r\nimport DatePicker from 'material-ui/DatePicker';\r\nimport _ from \"lodash\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Stopwatch from \"./Components/StopWatch.js\";\r\nimport Countdown from \"./Components/Countdown.js\";\r\n\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport * as moment from 'moment';\r\n\r\nimport {\r\n    cyan500,\r\n    pinkA200,\r\n} from 'material-ui/styles/colors';\r\n\r\nconst styles = theme => ({\r\n    Menu: {\r\n        width: '100%',\r\n        maxWidth: 240,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginRight: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    Content: {\r\n        width: '100%',\r\n        maxWidth: 300,\r\n        backgroundColor: theme.palette.background.paper,\r\n        minHeight: 100,\r\n        height: \"auto\",\r\n        padding: 75,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n    fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        marginRight: \"10px\"\r\n    },\r\n\r\n    Avatar: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        marginRight: 10,\r\n    },\r\n\r\n    newRow: {\r\n        display: 'block'\r\n    }\r\n});\r\n\r\nclass Time extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            compare: {\r\n                date1: moment().unix() * 1000,\r\n                date2: moment().unix() * 1000,\r\n            },\r\n            Menu: [\r\n                {\r\n                    ID: 1,\r\n                    Title: \"Compare dates\",\r\n                    Icon: \"compare_arrows\"\r\n                },\r\n                {\r\n                    ID: 2,\r\n                    Title: \"Stopwatch\",\r\n                    Icon: \"timer\"\r\n                },\r\n                {\r\n                    ID: 3,\r\n                    Title: \"Countdown\",\r\n                    Icon: \"timelapse\"\r\n                },\r\n            ],\r\n            Current: 2\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.inter = setInterval(this.updateNowInState, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.inter)\r\n    }\r\n\r\n\r\n    updateNowInState = () => {\r\n        this.setState({\r\n            now: moment()\r\n        })\r\n    }\r\n\r\n\r\n    handleDateChange = (date, key) => {\r\n        console.log(date.unix() * 1000, key)\r\n        this.setState({\r\n            compare: {\r\n                ...this.state.compare,\r\n                [key]: date.unix() * 1000\r\n            }\r\n        })\r\n    }\r\n\r\n    compareTime() {\r\n        const { classes } = this.props;\r\n        const { date1, date2 } = this.state.compare;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className={classes.newRow}>\r\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            format=\"MM/DD/YYYY\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"First date\"\r\n                            value={date1}\r\n                            onChange={(date) => this.handleDateChange(date, 'date1')}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                            style={{ display: 'block' }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n                <div className={classes.newRow}>\r\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            format=\"MM/DD/YYYY\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Second date\"\r\n                            value={date2}\r\n                            onChange={(date) => this.handleDateChange(date, 'date2')}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n                <div className={classes.newRow}>\r\n                    <Paper elevation={1} style={{ display: 'block' }}>\r\n                        <p>{moment(date1).diff(moment(date2), 'days')}</p>\r\n                    </Paper>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n\r\n    renderContentInner() {\r\n        clearInterval(this.inter);\r\n\r\n        const { classes } = this.props;\r\n\r\n        switch (this.state.Current) {\r\n            case 1: return this.compareTime();\r\n            case 2: return <Paper className={classes.Content} elevation={10}><Stopwatch /></Paper>;\r\n            case 3: return <Paper className={classes.Content} elevation={10}><Countdown /></Paper>;\r\n            default: return <Paper className={classes.Content} elevation={10}><Stopwatch /></Paper>;\r\n        }\r\n    }\r\n\r\n    renderContent() {\r\n        return (\r\n            this.renderContentInner()\r\n        );\r\n    }\r\n\r\n    renderMenu() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper elevation={3} className={classes.Menu}>\r\n                <List component=\"nav\" dense>\r\n                    {\r\n                        this.state.Menu.map((item, index) => {\r\n                            return (\r\n                                <Zoom in={true}\r\n                                    key={item.ID}\r\n                                    style={{ transitionDelay: index * 100 }}\r\n                                >\r\n                                    <div>\r\n                                        <ListItem\r\n                                            dense\r\n                                            button\r\n                                            onClick={() => {\r\n                                                this.setState({\r\n                                                    Current: item.ID\r\n                                                })\r\n                                            }}\r\n                                        >\r\n                                            <Avatar className={classes.Avatar}>\r\n                                                <i className=\"material-icons\">\r\n                                                    {item.Icon}\r\n                                                </i>\r\n                                            </Avatar>\r\n                                            <ListItemText primary={item.Title} />\r\n                                        </ListItem>\r\n                                        {\r\n                                            !(this.state.Menu.length - 1 === index)\r\n                                                ? <Divider variant=\"inset\" />\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </Zoom>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={10}\r\n                    className={\"\"}\r\n                    alignItems={\"center\"}\r\n                    direction={\"row\"}\r\n                    justify={\"center\"}\r\n                    style={{ marginTop: 50 }}\r\n                >\r\n                    {this.renderMenu()}\r\n                    <Fade in={true} style={{ transitionDelay: 100 }}>\r\n                        {this.renderContent()}\r\n                    </Fade>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Time);","import React, { Component, Fragment } from 'react';\r\n\r\n//import Paper from '@material-ui/core/Paper';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n\r\n//import Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nclass Arrays extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: null,\r\n            divisedBy: 1,\r\n        };\r\n    }\r\n\r\n    handleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    };\r\n\r\n    returnEven() {\r\n        let arr = []\r\n        for (let i = 1; i < 100; i++) {\r\n            if (i % 2 === 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnOdd() {\r\n        let arr = []\r\n        for (let i = 1; i < 100; i++) {\r\n            if (i % 2 !== 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnFibonacci() {\r\n        let arr = [0, 1]\r\n        for (let i = 0; i <= 20; i++) {\r\n            arr.push(arr[i] + arr[i + 1])\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    isPrime(n) {\r\n        if (n === 2)\r\n            return true;\r\n        if (n === 3)\r\n            return true;\r\n        if (n % 2 === 0)\r\n            return false;\r\n        if (n % 3 === 0)\r\n            return false;\r\n\r\n        let i = 5;\r\n        let w = 2;\r\n\r\n        while (i * i <= n) {\r\n            if (n % i === 0) {\r\n                return false;\r\n            }\r\n            i += w;\r\n            w = 6 - w;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    returnPrime() {\r\n        let arr = []\r\n        for (let i = 2; i < 100; i++) {\r\n            if (this.isPrime(i)) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnDivisible() {\r\n        let arr = []\r\n        for (let i = 1; i <= 100; i++) {\r\n            if (i % this.state.divisedBy === 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    renderNumbers(arr, newRow = 10) {\r\n\r\n        if (!arr || !arr.length) return null;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    arr.map((num, index) => {\r\n                        if (index % newRow === 0 && index !== 0) {\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <span>{num + \", \"}</span>\r\n                                    <br />\r\n                                </Fragment>\r\n                            )\r\n                        } else {\r\n                            return num + \",\";\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { expanded } = this.state;\r\n\r\n        const style = {\r\n            panel: {\r\n                width: \"50%\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n            },\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <ExpansionPanel expanded={expanded === 'panel1'} style={style.panel} onChange={this.handleChange('panel1')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Even numbers between 1 and 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnEven())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel2'} style={style.panel} onChange={this.handleChange('panel2')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Odd numbers between 1 and 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnOdd(), 5)}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel3'} style={style.panel} onChange={this.handleChange('panel3')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        First 20 Fibonacci numbers\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnFibonacci())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel4'} style={style.panel} onChange={this.handleChange('panel4')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Prime numbers from 1 to 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnPrime())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel5'} style={style.panel} onChange={this.handleChange('panel5')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Numbers divisible by {this.state.divisedBy === 1 ? \"...\" : this.state.divisedBy}\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnDivisible())}\r\n                    </ExpansionPanelDetails>\r\n                    <Divider />\r\n                    <ExpansionPanelActions>\r\n                        <FormControl>\r\n                            {\"Show me numbers divisible by: \"}\r\n                            <Select\r\n                                value={this.state.divisedBy}\r\n                                onChange={(event) => this.setState({ divisedBy: event.target.value })}\r\n                            >\r\n                                <MenuItem value={3}>3</MenuItem>\r\n                                <MenuItem value={4}>4</MenuItem>\r\n                                <MenuItem value={5}>5</MenuItem>\r\n                                <MenuItem value={6}>6</MenuItem>\r\n                                <MenuItem value={7}>7</MenuItem>\r\n                                <MenuItem value={8}>8</MenuItem>\r\n                                <MenuItem value={9}>9</MenuItem>\r\n                                <MenuItem value={10}>10</MenuItem>\r\n                                <MenuItem value={15}>15</MenuItem>\r\n                                <MenuItem value={25}>25</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </ExpansionPanelActions>\r\n                </ExpansionPanel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Arrays;","import React, { Component } from 'react';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                backgroundColor: this.props.Color,\r\n                height: \"400px\",\r\n                width: \"200px\"\r\n            }}>\r\n                <h1>{this.props.Number}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Card from \"./Card\";\r\n//import url from \"../.././Pictures/Uno_cards/blue_0.png\";\r\n\r\nclass Uno extends Component {\r\n    render() {\r\n        //var url = \"\";\r\n        console.log(this.props.Uno)\r\n        return (\r\n            <div>\r\n                <h1>Ovo je Uno</h1>\r\n                {\r\n                    this.props.Uno.map((item) => {\r\n                        return (\r\n                            <Card \r\n                                {...item}\r\n                                onClick={()=> {\r\n                                    \r\n                                }}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => {\r\n    const { Uno } = state;\r\n\r\n    return {\r\n        Uno,\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Uno);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        maxWidth: 720,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        contentAlign: \"center\"\r\n    },\r\n\r\n    padding: {\r\n        padding: `0 ${theme.spacing(2)}px`,\r\n    }\r\n});\r\n\r\nclass Lists extends Component {\r\n\r\n    renderBadgeNumber(item) {\r\n        var unCompleted = item.Todos.filter((task)=> {\r\n            if(!task.Completed) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n\r\n        return unCompleted.length;\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <Tabs\r\n                    value={this.props.current}\r\n                    onChange={(event, value) => {\r\n                        this.props.changeCurrent(value)\r\n                    }}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"secondary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {\r\n                        this.props.Todo.map((item) => {\r\n                            return (\r\n                                <Tab\r\n                                    label={\r\n                                        <Badge \r\n                                        className={classes.padding} \r\n                                        color=\"secondary\" \r\n                                        badgeContent={this.renderBadgeNumber(item)}>\r\n                                            {item.ListName}\r\n                                        </Badge>\r\n                                    }\r\n                                    key={item.ID}\r\n                                    value={item.ID}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </Tabs>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nLists.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Todo } = state;\r\n\r\n        return {\r\n            Todo,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators({}, dispatch);\r\n        })\r\n)(Lists);","export function new_task(data) {\r\n    return {\r\n        type: 'NEW_TASK',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function new_list(data) {\r\n    return {\r\n        type: 'NEW_LIST',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_list(data) {\r\n    return {\r\n        type: 'DELETE_LIST',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_task(data) {\r\n    return {\r\n        type: 'DELETE_TASK',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function edit_task(data) {\r\n    return {\r\n        type: 'EDIT_TASK',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_list(data) {\r\n    return {\r\n        type: 'EDIT_LIST',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nclass TaskView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_task } = this.props;\r\n        this.new_task = new_task;\r\n\r\n        this.handleTaskEdit = this.handleTaskEdit.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            Task: {\r\n                ID: \"\",\r\n                Text: \"\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 2,\r\n                ...this.props.Task\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Task.ID ? true : false;\r\n    }\r\n\r\n    handleTaskEdit(label, value) {\r\n        this.setState({\r\n            ...this.state,\r\n            Task: {\r\n                ...this.state.Task,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        var ID = Math.floor(Math.random() * 1000),\r\n            Task = {};\r\n\r\n        if (this.isEditing()) {\r\n            Task = {\r\n                ...this.state.Task,\r\n            }\r\n            this.props.edit_task({\r\n                ID: this.props.listID,\r\n                Task\r\n            })\r\n        } else {\r\n            Task = {\r\n                ...this.state.Task,\r\n                ID\r\n            }\r\n            this.props.new_task({\r\n                ID: this.props.listID,\r\n                Task\r\n            })\r\n        }\r\n\r\n        this.props.handleModalClose()\r\n    }\r\n\r\n    render() {\r\n        const { Task } = this.state;\r\n        return (\r\n            <Dialog\r\n                open={this.props.showTaskModal}\r\n                onClose={this.props.handleModalClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">{\"Edit task #\" + Task.ID}</DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={Task.Completed}\r\n                                    onChange={() => this.handleTaskEdit(\"Completed\", !Task.Completed)}\r\n                                    value={\"?\"}\r\n                                />\r\n                            }\r\n                            label={\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"text\">Name</InputLabel>\r\n                                    <Input\r\n                                        autoFocus\r\n                                        fullWidth\r\n                                        id=\"text\"\r\n                                        value={Task.Text}\r\n                                        onChange={(e) => {\r\n                                            this.handleTaskEdit(\"Text\", e.target.value)\r\n                                        }} />\r\n                                </FormControl>\r\n                            }\r\n                        />\r\n                        <br />\r\n                        <div>\r\n                            Importance level:\r\n                            <IconButton\r\n                                color={Task.Importance === 1 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 1)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    low_priority\r\n                                </i>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                color={Task.Importance === 2 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 2)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    code\r\n                                </i>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                color={Task.Importance === 3 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 3)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    priority_high\r\n                                </i>\r\n                            </IconButton>\r\n                        </div>\r\n                        {\r\n                            /*\r\n                            <Button variant=\"flat\" color=\"primary\">\r\n                                Move to list\r\n                            <i className=\"material-icons\">send</i>\r\n                            </Button>\r\n                            */\r\n                        }\r\n                        <br />\r\n                        <FormControl>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                label=\"Notes\"\r\n                                fullWidth\r\n                                multiline\r\n                                rows=\"3\"\r\n                                value={Task.Notes}\r\n                                onChange={(e) => {\r\n                                    this.handleTaskEdit(\"Notes\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleModalClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(TaskView);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n//import Chip from '@material-ui/core/Chip';\r\n\r\nimport { Theme } from '@material-ui/core/'\r\n\r\nimport TaskView from './TaskView';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 420,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    },\r\n\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    listItemCompleted: {\r\n        textDecoration: \"line-through\",\r\n        color: theme.palette.text.primary\r\n    },\r\n\r\n    arrow: {\r\n        paddingTop: \"15px\",\r\n        verticalAlign: \"center\"\r\n    },\r\n\r\n    avatar: {\r\n        margin: 10,\r\n    },\r\n\r\n    highImportance: {\r\n        color: '#fff',\r\n        backgroundColor: '#f44336'\r\n    },\r\n\r\n    normalImportance: {\r\n        color: '#fff',\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n\r\n    lowImportance: {\r\n        color: '#000',\r\n        backgroundColor: '#4caf50',\r\n    },\r\n\r\n    close: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n\r\n    buttonDelete: {\r\n        color: '#fff',\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    textColor: {\r\n        color: theme.palette.text.primary\r\n    }\r\n});\r\n\r\nclass CurrentList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { delete_task, edit_task, new_task } = this.props;\r\n        this.delete_task = delete_task;\r\n        this.edit_task = edit_task;\r\n        this.new_task = new_task;\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n        this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n\r\n        this.state = {\r\n            showCompleted: true,\r\n            showUncompleted: true,\r\n            showTaskModal: false,\r\n            showSnackbar: false,\r\n            Task: {\r\n                Importance: 2\r\n            },\r\n            lastDeleted: {}\r\n        }\r\n    }\r\n\r\n    findById(list, ID, flag) {\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].ID === ID) {\r\n                if (!flag) {\r\n                    return list[i].Todos;\r\n                } else {\r\n                    return list[i];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleUndoDelete() {\r\n        this.handleSnackbarClose()\r\n        this.new_task({\r\n            ID: this.props.currentList,\r\n            Task: this.state.lastDeleted\r\n        })\r\n    }\r\n\r\n    handleSnackbarClose() {\r\n        this.setState({\r\n            showSnackbar: false\r\n        })\r\n    }\r\n\r\n    handleModalClose() {\r\n        this.setState({\r\n            showTaskModal: false\r\n        })\r\n    }\r\n\r\n    handleChange(label) {\r\n        let value = this.state[label];\r\n        this.setState({\r\n            [label]: !value\r\n        })\r\n    }\r\n\r\n    handleTaskEdit(label, value) {\r\n        this.setState({\r\n            ...this.state,\r\n            Task: {\r\n                ...this.state.Task,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    filterTasks(flag, tasks = this.findById(this.props.Todo, this.props.currentList, false)) {\r\n        return tasks.filter((task) => {\r\n            if (flag) {\r\n                return !task.Completed;\r\n            }\r\n            return task.Completed;\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.handleModalClose()\r\n        const data = {\r\n            ID: this.props.currentList,\r\n            Task: this.state.Task\r\n        }\r\n        this.edit_task(data)\r\n    }\r\n\r\n    renderItemImportance(item) {\r\n        const { classes } = this.props;\r\n        const { Importance } = item;\r\n        switch (Importance) {\r\n            case 1: return <Avatar className={classes.lowImportance}>\r\n                <i className=\"material-icons\">low_priority</i>\r\n            </Avatar>\r\n            case 2: return <Avatar className={classes.normalImportance}>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n            </Avatar>\r\n            case 3: return <Avatar className={classes.highImportance}>\r\n                <i className=\"material-icons\">priority_high</i>\r\n            </Avatar>\r\n            default: return <Avatar className={classes.normalImportance}>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n            </Avatar>\r\n        }\r\n    }\r\n\r\n    renderItems(item) {\r\n        const { classes } = this.props;\r\n\r\n        return <ListItem\r\n            key={item.ID}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={(e) => {\r\n                if(e.target.localName !== 'div') return;\r\n                \r\n                this.setState({\r\n                    showTaskModal: true,\r\n                    Task: {\r\n                        ...this.state.Task,\r\n                        ...item\r\n                    }\r\n                })\r\n            }}\r\n            className={classes.listItem}\r\n        >\r\n            <ListItemAvatar>\r\n                {this.renderItemImportance(item)}\r\n            </ListItemAvatar>\r\n            <Checkbox\r\n                checked={item.Completed}\r\n                onChange={() => {\r\n                    const data = {\r\n                        ID: this.props.currentList,\r\n                        Task: {\r\n                            ...item,\r\n                            Completed: !item.Completed\r\n                        }\r\n                    }\r\n                    this.edit_task(data)\r\n                }}\r\n            />\r\n            <ListItemText\r\n                className={item.Completed ? classes.listItemCompleted : classes.textColor}\r\n                primary={item.Text}\r\n                // primaryTypographyProps={classes.textColor}\r\n                secondary={item.Notes\r\n                    ? <i className=\"material-icons\">notes</i>\r\n                    : null\r\n                }\r\n            />\r\n            <ListItemSecondaryAction>\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showTaskModal: true,\r\n                            Task: {\r\n                                ...this.state.Task,\r\n                                ...item\r\n                            }\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\">\r\n                        edit\r\n                    </i>\r\n                </IconButton>\r\n                <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showSnackbar: true,\r\n                            lastDeleted: {\r\n                                ...item\r\n                            }\r\n                        })\r\n                        const data = {\r\n                            ID: this.props.currentList,\r\n                            Task: item\r\n                        }\r\n                        this.delete_task(data)\r\n                    }}>\r\n                    <i className=\"material-icons\">\r\n                        delete_forever\r\n                    </i>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <List className={classes.root}>\r\n                <ListSubheader onClick={() => this.handleChange(\"showUncompleted\")}>\r\n                    <IconButton onClick={() => this.handleChange(\"showUncompleted\")}>\r\n                        <i className={\"material-icons\"}>\r\n                            {!this.state.showUncompleted ? \"keyboard_arrow_down\" : \"keyboard_arrow_up\"}\r\n                        </i>\r\n                    </IconButton>\r\n                    Uncompleted\r\n                </ListSubheader>\r\n                {\r\n                    this.state.showUncompleted && this.filterTasks(true).map((item) => {\r\n                        return (\r\n                            this.renderItems(item)\r\n                        )\r\n                    })\r\n                }\r\n                <ListSubheader onClick={() => this.handleChange(\"showCompleted\")}>\r\n                    <IconButton onClick={() => this.handleChange(\"showCompleted\")}>\r\n                        <i className={\"material-icons\"}>\r\n                            {!this.state.showCompleted ? \"keyboard_arrow_down\" : \"keyboard_arrow_up\"}\r\n                        </i>\r\n                    </IconButton>\r\n                    Completed\r\n                </ListSubheader>\r\n                {\r\n                    this.state.showCompleted && this.filterTasks(false).map((item) => {\r\n                        return (\r\n                            this.renderItems(item)\r\n                        )\r\n                    })\r\n                }\r\n                <Divider />\r\n                {\r\n                    this.state.showTaskModal\r\n                        ? <TaskView\r\n                            Task={this.state.Task}\r\n                            showTaskModal={this.state.showTaskModal}\r\n                            listID={this.props.currentList}\r\n                            handleModalClose={this.handleModalClose}\r\n                        />\r\n                        : null\r\n                }\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={this.state.showSnackbar}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleSnackbarClose}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span id=\"message-id\">Task deleted</span>}\r\n                    action={[\r\n                        <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n                            UNDO\r\n                        </Button>,\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.handleSnackbarClose}\r\n                        >\r\n                            <i className=\"material-icons\">close</i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\nCurrentList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Todo } = state;\r\n\r\n        return {\r\n            Todo,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(CurrentList);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nclass ListEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_list, edit_list } = this.props;\r\n        this.new_list = new_list;\r\n        this.edit_list = edit_list;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            list: {\r\n                ID: \"\",\r\n                ListName: \"\",\r\n                Archived: false,\r\n                Todos: [],\r\n                ...this.props.list\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.list.ID ? true : false;\r\n    }\r\n\r\n    handleChange(label, value) {\r\n        this.setState({\r\n            list: {\r\n                ...this.state.list,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_list(this.state.list)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_list({\r\n                ...this.state.list,\r\n                ID\r\n            });\r\n        }\r\n\r\n        this.props.handleClose();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {\r\n                        this.isEditing()\r\n                            ? \"Edit list\"\r\n                            : \"Add new list\"\r\n                    }\r\n                </DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">Name your list</InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.list.ListName}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"ListName\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(ListEdit);","var User = {\r\n    name: \"GSM\"\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport compose from 'recompose/compose';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\n//import './App.css';\r\nimport Lists from \"./Components/Lists\";\r\nimport CurrentList from \"./Components/CurrentList\";\r\nimport ListEdit from './Components/ListEdit';\r\nimport TaskView from './Components/TaskView';\r\n\r\nimport User from '../../Data/User';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n  ...ToDoActions\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 420,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass ToDo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.exitPopups = this.exitPopups.bind(this);\r\n    this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n    this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n\r\n    const { delete_list, new_list } = this.props;\r\n    this.delete_list = delete_list;\r\n    this.new_list = new_list;\r\n\r\n    this.state = {\r\n      tdl: [...this.props.Todo],\r\n      UserName: User.name,\r\n      CurrentList: 1,\r\n      showNewListPopup: false,\r\n      showNewTaskPopup: false,\r\n      lastDeletedList: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      tdl: [...this.props.Todo]\r\n    })\r\n  }\r\n\r\n\r\n  findById(list, ID, flag) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].ID === ID) {\r\n        if (!flag) {\r\n          return list[i].Todos;\r\n        } else {\r\n          return list[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  newList = (list) => {\r\n    this.setState({\r\n      tdl: [\r\n        ...this.state.tdl,\r\n        list\r\n      ],\r\n      showNewListPopup: false\r\n    })\r\n  }\r\n\r\n  currentList() {\r\n    return this.findById(this.props.Todo, this.state.CurrentList, true);\r\n  }\r\n\r\n  nextCurrent() {\r\n    return this.props.Todo.filter((list) => {\r\n      if (list.ID !== this.state.CurrentList) {\r\n        return true;\r\n      }\r\n      return false;\r\n    })[0].ID\r\n  }\r\n\r\n  handleUndoDelete() {\r\n    this.handleSnackbarClose()\r\n    this.new_list(this.state.lastDeletedList)\r\n  }\r\n\r\n  handleSnackbarClose() {\r\n    this.setState({\r\n      showSnackbar: false\r\n    })\r\n  }\r\n\r\n  exitPopups() {\r\n    this.setState({\r\n      showNewListPopup: false,\r\n      showNewTaskPopup: false,\r\n      showEditListPopup: false\r\n    })\r\n  }\r\n\r\n  renderMoreListOptions() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showNewListPopup: true\r\n            })\r\n          }}>\r\n          New list\r\n          </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"medium\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showEditListPopup: true\r\n            })\r\n          }}>\r\n          Edit list\r\n          </Button>\r\n        <Button\r\n          variant=\"text\"\r\n          color=\"default\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showSnackbar: true,\r\n              CurrentList: this.nextCurrent(),\r\n              lastDeletedList: {\r\n                ...this.currentList()\r\n              }\r\n            })\r\n\r\n            this.delete_list(this.currentList())\r\n\r\n          }}>\r\n          Delete list\r\n          </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Lists\r\n          lists={[...this.state.tdl]}\r\n          current={this.state.CurrentList}\r\n          cancel={this.exitPopups}\r\n          newList={\r\n            () => {\r\n              this.setState({\r\n                showNewListPopup: true\r\n              })\r\n            }\r\n          }\r\n          changeCurrent={\r\n            (ID) => {\r\n              this.setState({\r\n                CurrentList: ID\r\n              })\r\n            }\r\n          }\r\n        />\r\n        <CurrentList\r\n          currentList={this.state.CurrentList}\r\n          toggleItem={this.toggleItem}\r\n          deleteItem={this.deleteItem}\r\n        />\r\n        {\r\n          this.state.showNewTaskPopup\r\n            ? <TaskView\r\n              showTaskModal={this.state.showNewTaskPopup}\r\n              listName={this.currentList().ListName}\r\n              listID={this.state.CurrentList}\r\n              handleModalClose={this.exitPopups}\r\n              newTask={this.newTask}\r\n            />\r\n            : null\r\n        }\r\n        {\r\n          this.state.showNewListPopup\r\n            ? <ListEdit\r\n              open={this.state.showNewListPopup}\r\n              listName={this.currentList().ListName}\r\n              handleClose={this.exitPopups}\r\n            />\r\n            : null\r\n        }\r\n        {\r\n          this.state.showEditListPopup\r\n            ? <ListEdit\r\n              open={this.state.showEditListPopup}\r\n              list={this.currentList()}\r\n              handleClose={this.exitPopups}\r\n            />\r\n            : null\r\n        }\r\n        <Tooltip TransitionComponent={Zoom} title=\"Add new TASK\">\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            className={classes.fab}\r\n            onClick={() => {\r\n              this.setState({\r\n                showNewTaskPopup: true\r\n              })\r\n            }}>\r\n            <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>add_circle_outline</i>\r\n            New task\r\n          </Fab>\r\n        </Tooltip>\r\n        {this.renderMoreListOptions()}\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          open={this.state.showSnackbar}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">List deleted</span>}\r\n          action={[\r\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n              UNDO\r\n            </Button>,\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={this.handleSnackbarClose}\r\n            >\r\n              <i className=\"material-icons\">close</i>\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToDo.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(state => {\r\n    const { Todo } = state;\r\n\r\n    return {\r\n      Todo,\r\n    };\r\n  },\r\n    dispatch => {\r\n      return bindActionCreators(MainActions, dispatch);\r\n    })\r\n)(ToDo);","import React, { Component } from 'react';\r\nimport ReactQuill from 'react-quill';\r\n\r\nclass TextEditor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.modules = {\r\n            toolbar: [\r\n                [{ 'header': [1, 2, false] }],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\r\n                ['link', 'image'],\r\n                ['clean']\r\n            ],\r\n        }\r\n\r\n        this.formats = [\r\n            'header',\r\n            'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n            'list', 'bullet', 'indent',\r\n            'link', 'image'\r\n        ]\r\n        this.state = { text: '' }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(value) {\r\n        this.setState({ text: value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactQuill\r\n                value={this.props.value}\r\n                onChange={this.props.handleChange}\r\n                theme=\"snow\"\r\n                modules={this.modules}\r\n                formats={this.formats}\r\n                style={{\r\n                    height: \"375px\",\r\n                    marginBottom: \"45px\",\r\n                    backgroundColor: 'white',\r\n                    color: 'black'\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextEditor;","var darkColors = [\r\n    \"#ba000d\",\r\n    \"#4a148c\",\r\n    \"#0d47a1\",\r\n    \"#1b5e20\",\r\n    \"#0069c0\",\r\n    \"#ff3d00\",\r\n    \"#4e342e\",\r\n    \"#000000\",\r\n];\r\n\r\nexport default darkColors;","export function new_note(data) {\r\n    return {\r\n        type: 'NEW_NOTE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_note(data) {\r\n    return {\r\n        type: 'EDIT_NOTE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_note(data) {\r\n    return {\r\n        type: 'DELETE_NOTE',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport TextEditor from \"../../Components/TextEditor\";\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { CirclePicker } from 'react-color';\r\nimport darkColors from \"../../Data/Settings/darkPickerColors\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as NotesActions from \"../../Actions/NotesActions\";\r\n\r\nconst MainActions = {\r\n    ...NotesActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    note: {\r\n        width: '100%',\r\n        maxWidth: 530,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    editorSpace: {\r\n        width: '100%',\r\n        maxWidth: 530,\r\n        backgroundColor: theme.palette.background.paper,\r\n        height: 375,\r\n    },\r\n\r\n    avatar: {\r\n        width: 20,\r\n        height: 20,\r\n        marginLeft: 10,\r\n    },\r\n\r\n    Button: {\r\n        display: \"inline-block\"\r\n    },\r\n\r\n    titleInput: {\r\n        // height: 30\r\n    }\r\n});\r\n\r\nclass NotesView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_note, delete_note, edit_note } = this.props;\r\n        this.new_note = new_note;\r\n        this.delete_note = delete_note;\r\n        this.edit_note = edit_note;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            Note: {\r\n                ID: null,\r\n                Title: \"\",\r\n                Content: \"\",\r\n                Color: \"#0d47a1\",\r\n                Date: new Date(),\r\n                ...this.props.Note\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Note.ID ? true : false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!this.props.Note || prevProps.Note.ID === this.props.Note.ID) return null;\r\n        if (!this.props.isNew) {\r\n            return this.setState({\r\n                Note: {\r\n                    ID: null,\r\n                    Title: \"\",\r\n                    Content: \"\",\r\n                    Color: \"#0d47a1\",\r\n                    Date: new Date(),\r\n                    ...this.props.Note\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            return this.setState({\r\n                Note: {\r\n                    ...this.props.Note\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange(newValue) {\r\n        this.setState({\r\n            Note: {\r\n                ...this.state.Note,\r\n                Content: newValue\r\n            }\r\n        })\r\n    }\r\n\r\n    handleValueChange(label, value) {\r\n        this.setState({\r\n            Note: {\r\n                ...this.state.Note,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete() {\r\n        this.delete_note(this.state.Note)\r\n        // this.props.changeCurrentOnAdd()\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_note(this.state.Note)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_note({\r\n                ...this.state.Note,\r\n                ID\r\n            });\r\n            this.props.changeCurrentOnAdd(ID)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <Paper elevation={12} className={classes.note}>\r\n                    <TextField\r\n                        id=\"full-width\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Avatar\r\n                                        style={{ backgroundColor: this.state.Note.Color }}\r\n                                        className={classes.avatar}\r\n                                    >\r\n                                        {this.state.Note.Title[0]}\r\n                                    </Avatar>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        className={classes.titleInput}\r\n                        required\r\n                        placeholder=\"Enter title here...\"\r\n                        fullWidth\r\n                        value={this.state.Note.Title}\r\n                        onChange={(e) => {\r\n                            this.handleValueChange(\"Title\", e.target.value)\r\n                        }}\r\n                    />\r\n                    <TextEditor\r\n                        value={this.state.Note.Content}\r\n                        handleChange={this.handleChange}\r\n                    />\r\n                    <div style={{ display: \"inline-block\" }}>\r\n                        <CirclePicker\r\n                            color={this.state.Note.Color}\r\n                            width=\"260px\"\r\n                            colors={darkColors}\r\n                            circleSpacing={3}\r\n                            onChange={(value) => {\r\n                                this.handleValueChange(\"Color\", value.hex)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.isEditing()\r\n                            ? <Button\r\n                                color=\"secondary\"\r\n                                className={classes.Button}\r\n                                onClick={this.handleDelete}>\r\n                                Delete\r\n                                </Button>\r\n                            : <Button\r\n                                color=\"secondary\"\r\n                                className={classes.Button}\r\n                                onClick={this.props.handleCancel}>\r\n                                Cancel\r\n                                </Button>\r\n                    }\r\n                    <Button className={classes.Button} type=\"submit\" color=\"primary\">\r\n                        Save\r\n                        </Button>\r\n                </Paper>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(() => {\r\n        return {}\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(NotesView);","export function increase(data) {\r\n    return {\r\n        type: 'INCREASE',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function decrease(data) {\r\n    return {\r\n        type: 'DECREASE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function new_counter(data) {\r\n    return {\r\n        type: 'NEW_COUNTER',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_counter(data) {\r\n    return {\r\n        type: 'EDIT_COUNTER',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_counter(data) {\r\n    return {\r\n        type: 'DELETE_COUNTER',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport NotesView from \"./NotesView\";\r\nimport _ from \"lodash\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\n//import { Fab } from '@material-ui/core';\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    notesList: {\r\n        width: '100%',\r\n        maxWidth: 240,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginRight: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst EmptyNote = {\r\n    ID: null,\r\n    Title: \"\",\r\n    Content: \"\",\r\n    Color: \"#0d47a1\",\r\n    Date: new Date(),\r\n}\r\n\r\nclass Notes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.changeCurrentOnAdd = this.changeCurrentOnAdd.bind(this);\r\n\r\n        this.state = {\r\n            currentNote: this.getFirst(),\r\n            isNew: false,\r\n        }\r\n    }\r\n\r\n    /* static getDerivedStateFromProps(props, state) {\r\n        return \r\n    } */\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.Notes === this.props.Notes) return null;\r\n\r\n        if (!this.props.Notes.length) {\r\n            return this.setState({\r\n                currentNote: EmptyNote\r\n            })\r\n        }\r\n\r\n        return this.setState({\r\n            currentNote: this.props.Notes[0]\r\n        })\r\n    }\r\n\r\n\r\n    getFirst(arr = this.props.Notes) {\r\n        if (!arr.length) return EmptyNote;\r\n\r\n        return arr[0]\r\n    }\r\n\r\n    renderNotesList() {\r\n        const { classes, Notes } = this.props;\r\n\r\n        if (!Notes || !Notes.length) return null;\r\n\r\n        return (\r\n            <Paper elevation={5} className={classes.notesList}>\r\n                <List component=\"nav\" dense>\r\n                    {\r\n                        Notes.map((note, index) => {\r\n                            return (\r\n                                <Zoom in={true}\r\n                                    key={note.ID}\r\n                                    style={{ transitionDelay: index * 100 }}\r\n                                >\r\n                                    <div>\r\n                                        <ListItem\r\n                                            dense\r\n                                            button\r\n                                            onClick={() => {\r\n                                                this.setState({\r\n                                                    currentNote: _.find(this.props.Notes, { ID: note.ID })\r\n                                                })\r\n                                            }}\r\n                                        >\r\n                                            <Avatar\r\n                                                style={{\r\n                                                    backgroundColor: note.Color,\r\n                                                    marginRight: 10,\r\n                                                }}\r\n                                            >\r\n                                                {note.Title[0]}\r\n                                            </Avatar>\r\n                                            <ListItemText primary={note.Title} />\r\n                                        </ListItem>\r\n                                        {\r\n                                            !(this.props.Notes.length - 1 === index)\r\n                                                ? <Divider variant=\"inset\" />\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </Zoom>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new NOTE\">\r\n                <Zoom in={true}>\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        style={{ marginRight: '10px' }}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                isNew: true,\r\n                                currentNote: {\r\n                                    ID: null,\r\n                                    Title: \"\",\r\n                                    Content: \"\",\r\n                                    Color: \"#0d47a1\",\r\n                                    Date: new Date()\r\n                                }\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\">add_circle</i>\r\n                    </Fab>\r\n                </Zoom>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    handleCancel() {\r\n        this.setState({\r\n            isNew: false,\r\n            currentNote: this.getFirst()\r\n        })\r\n    }\r\n\r\n    changeCurrentOnAdd(ID) {\r\n        this.setState({\r\n            isNew: false,\r\n        })\r\n    }\r\n\r\n    getNote() {\r\n        return {\r\n            ID: null,\r\n            Title: \"\",\r\n            Content: \"\",\r\n            Color: \"#0d47a1\",\r\n            Date: new Date(),\r\n            ...(this.state.isNew ? { ID: null } : _.find(this.props.Notes, { ID: this.state.currentID }))\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={10}\r\n                    className={\"\"}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    style={{ marginTop: 50 }}\r\n                >\r\n                    {this.renderFabButton()}\r\n                    {this.renderNotesList()}\r\n                    <Zoom in={true} style={{ transitionDelay: 500 }}>\r\n                        <NotesView\r\n                            Note={this.state.currentNote}\r\n                            handleCancel={this.handleCancel}\r\n                            isNew={this.state.isNew}\r\n                            changeCurrentOnAdd={this.changeCurrentOnAdd}\r\n                        />\r\n                    </Zoom>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Notes } = state;\r\n\r\n        return {\r\n            Notes,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Notes);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport { CirclePicker } from 'react-color';\r\nimport darkColors from \"../../Data/Settings/darkPickerColors\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nclass CounterView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_counter, delete_counter, edit_counter } = this.props;\r\n        this.new_counter = new_counter;\r\n        this.delete_counter = delete_counter;\r\n        this.edit_counter = edit_counter;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            Counter: {\r\n                ID: null,\r\n                Title: \"\",\r\n                Value: 0,\r\n                Date: new Date(),\r\n                Color: \"#0d47a1\",\r\n                Goal: 0,\r\n                ...this.props.Counter\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Counter.ID ? true : false;\r\n    }\r\n\r\n    handleChange(label, value) {\r\n        this.setState({\r\n            Counter: {\r\n                ...this.state.Counter,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.handleClose()\r\n        this.delete_counter(this.state.Counter)\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_counter(this.state.Counter)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_counter({\r\n                ...this.state.Counter,\r\n                ID\r\n            });\r\n        }\r\n\r\n        this.props.handleClose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {\r\n                        this.isEditing()\r\n                            ? \"Edit counter\"\r\n                            : \"Add new counter\"\r\n                    }\r\n                    {\r\n                        this.isEditing()\r\n                        && <Tooltip TransitionComponent={Zoom} title=\"DELETE COUNTER\">\r\n                            <IconButton\r\n                                key=\"delete\"\r\n                                aria-label=\"Delete\"\r\n                                color=\"inherit\"\r\n                                onClick={this.handleDelete}\r\n                            >\r\n                                <i className=\"material-icons\">delete_forever</i>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    }\r\n                </DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControl>\r\n                            <TextField\r\n                                required\r\n                                autoFocus\r\n                                label=\"Name your counter\"\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Title}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Title\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">\r\n                                {\r\n                                    this.isEditing()\r\n                                        ? \"Value\"\r\n                                        : \"Starting value\"\r\n                                }\r\n                            </InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Value}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Value\", parseInt(e.target.value, 10))\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">Counter goal</InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Goal}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Goal\", parseInt(e.target.value, 10))\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <br />\r\n                        <FormControl>\r\n                            <CirclePicker\r\n                                color={this.state.Counter.Color}\r\n                                width=\"180px\"\r\n                                colors={darkColors}\r\n                                circleSpacing={17}\r\n                                onChange={(value) => {\r\n                                    this.handleChange(\"Color\", value.hex)\r\n                                }}\r\n                            />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleClose} color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(CounterView);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport CounterView from \"./CounterView\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: '20px',\r\n        borderRadius: '100px',\r\n        position: 'relative',\r\n        color: \"#FFFFFF\"\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n\r\n    white: {\r\n        color: \"#fff\"\r\n    },\r\n\r\n    CardContent: {\r\n        display: 'inline-block',\r\n    },\r\n\r\n    title: {\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        display: \"inline-block\",\r\n        marginRight: \"8px\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    badge: {\r\n        top: -2,\r\n        right: -20,\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    leftDiv: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        left: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        margin: \"1px\",\r\n        paddingRight: \"5px\",\r\n        borderRight: \"1px solid darkgrey\",\r\n        verticalAlign: \"center\"\r\n    },\r\n\r\n    rightDiv: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        right: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        margin: \"1px\",\r\n        paddingLeft: \"5px\",\r\n        borderLeft: \"1px solid grey\"\r\n    },\r\n\r\n    minusButton: {\r\n        margin: \"1px\"\r\n    },\r\n\r\n    bar: {\r\n        position: 'absolute',\r\n        bottom: \"0\",\r\n        right: \"0\",\r\n        left: \"0\",\r\n    },\r\n\r\n    completedProgress: {\r\n        backgroundColor: '#76ff03',\r\n    },\r\n\r\n    uncompletedProgress: {\r\n        backgroundColor: '#f50057',\r\n    },\r\n});\r\n\r\nclass Counters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.counterModal = this.counterModal.bind(this);\r\n        this.exitModals = this.exitModals.bind(this);\r\n\r\n        const { increase, decrease } = this.props;\r\n        this.increase = increase;\r\n        this.decrease = decrease;\r\n\r\n        this.state = {\r\n            showEditModal: false,\r\n            showNewCounterPopup: false,\r\n            CounterToEdit: {}\r\n        }\r\n    }\r\n\r\n    counterModal(Counter) {\r\n        this.setState({\r\n            showEditModal: true,\r\n            CounterToEdit: { ...Counter }\r\n        })\r\n    }\r\n\r\n    exitModals() {\r\n        this.setState({\r\n            showEditModal: false,\r\n            showNewCounterPopup: false\r\n        })\r\n    }\r\n\r\n    renderProgress(Counter) {\r\n        if (!Counter.Goal) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <LinearProgress\r\n                color={\r\n                    this.progress(Counter) === 100\r\n                        ? \"primary\"\r\n                        : \"secondary\"\r\n                }\r\n                variant=\"determinate\"\r\n                value={this.progress(Counter)}\r\n                className={classes.bar}\r\n            />\r\n        )\r\n    }\r\n\r\n    progress(Counter) {\r\n        if (Counter.Value >= Counter.Goal) return 100;\r\n\r\n        return ((100 * Counter.Value) / Counter.Goal);\r\n    }\r\n\r\n    renderCounters() {\r\n        if (!this.props.Counters || !this.props.Counters.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return this.props.Counters.map((Counter, index) => {\r\n            return (\r\n                <Slide\r\n                    direction=\"up\"\r\n                    in={true}\r\n                    key={Counter.ID}\r\n                    style={{transitionDelay: 100*index}}\r\n                    mountOnEnter\r\n                    unmountOnExit\r\n                >\r\n                    <Card\r\n                        className={classes.card}\r\n                        raised\r\n                        style={{ backgroundColor: Counter.Color }}\r\n                    >\r\n                        <CardContent\r\n                            className={classes.CardContent}\r\n                            onClick={() => this.counterModal(Counter)}\r\n                        >\r\n                            <Badge\r\n                                badgeContent={Counter.Value}\r\n                                color=\"secondary\"\r\n                                classes={{ badge: classes.badge }}\r\n                            >\r\n                                <Typography className={classes.title}>\r\n                                    {Counter.Title}\r\n                                </Typography>\r\n                            </Badge>\r\n                        </CardContent>\r\n                        <div className={classes.leftDiv}>\r\n                            <IconButton\r\n                                key=\"close\"\r\n                                aria-label=\"Close\"\r\n                                color=\"inherit\"\r\n                                className={classes.minusButton}\r\n                                onClick={() => { this.decrease(Counter.ID) }}\r\n                            >\r\n                                <i className=\"material-icons\">remove_circle_outline</i>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className={classes.rightDiv}>\r\n                            <IconButton\r\n                                key=\"close\"\r\n                                aria-label=\"Close\"\r\n                                color=\"inherit\"\r\n                                onClick={() => { this.increase(Counter.ID) }}\r\n                            >\r\n                                <i className=\"material-icons\">add_circle_outline</i>\r\n                            </IconButton>\r\n                        </div>\r\n                        {this.renderProgress(Counter)}\r\n                    </Card>\r\n                </Slide>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new COUNTER\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showNewCounterPopup: true\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{marginRight: \"10px\"}}>add_circle</i>\r\n                    New Counter\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    renderNewCounterModal() {\r\n        return this.state.showNewCounterPopup && <CounterView\r\n            open={this.state.showNewCounterPopup}\r\n            handleClose={this.exitModals}\r\n        />\r\n    }\r\n\r\n    renderEditCounterModal() {\r\n        return this.state.showEditModal && <CounterView\r\n            open={this.state.showEditModal}\r\n            Counter={this.state.CounterToEdit}\r\n            handleClose={this.exitModals}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderCounters()}\r\n                {this.renderFabButton()}\r\n                {this.renderNewCounterModal()}\r\n                {this.renderEditCounterModal()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Counters } = state;\r\n\r\n        return {\r\n            Counters,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Counters);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(2),\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n    },\r\n\r\n    convertDiv: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        width: 250,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n\r\n    menu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass Convert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            input: \"\",\r\n            convertorID: 2,\r\n            output: \"\",\r\n            convertors: [\r\n                {\r\n                    ID: 0,\r\n                    Label: \"UPPERCASE\"\r\n                },\r\n                {\r\n                    ID: 1,\r\n                    Label: \"lowercase\"\r\n                },\r\n                {\r\n                    ID: 2,\r\n                    Label: \"Reverse\"\r\n                },\r\n                {\r\n                    ID: 3,\r\n                    Label: \"Morse code\"\r\n                },\r\n                {\r\n                    ID: 4,\r\n                    Label: \"ROT13\"\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange(event, name) {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        }, () => {\r\n            this.setState({\r\n                output: this.Convert()\r\n            })\r\n        });\r\n    };\r\n\r\n    Convert() {\r\n        const { input } = this.state;\r\n\r\n        switch (this.state.convertorID) {\r\n            case 0: return input.toUpperCase();\r\n            case 1: return input.toLowerCase();\r\n            case 2: return input.split(\"\").reverse().join(\"\");\r\n            case 3: return this.Morse(input);\r\n            case 4: return this.ROT13(input);\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    ROT13(str) {\r\n        var input = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n        var output = 'NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm';\r\n        var index = x => input.indexOf(x);\r\n        var translate = x => index(x) > -1 ? output[index(x)] : x;\r\n        return str.split('').map(translate).join('');\r\n    }\r\n\r\n    Morse(input) {\r\n        var letters = [' ', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\r\n        var morseLetters = [\"\\xa0\\xa0\\xa0\\xar\n\r\n        var newText = \"\";\r\n\r\n        for (var i = 0; i < input.length; i++) {\r\n            for (var j = 0; j < 37; j++) {\r\n                if (input[i].toLowerCase() === letters[j]) {\r\n                    newText += morseLetters[j];\r\n                    newText += \"\\xa0\\xa0\\xa0\";\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return newText;\r\n    }\r\n\r\n    renderInputCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.root} elevation={10}>\r\n            <TextField\r\n                id=\"multiline-flexible\"\r\n                label=\"Input\"\r\n                multiline\r\n                fullWidth\r\n                rows=\"4\"\r\n                rowsMax=\"4\"\r\n                value={this.state.input}\r\n                onChange={(e) => this.handleChange(e, 'input')}\r\n                margin=\"normal\"\r\n            />\r\n        </Card>\r\n    }\r\n\r\n    renderConvertTypeCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.convertDiv} elevation={2}>\r\n            <TextField\r\n                id=\"select-convertor\"\r\n                select\r\n                value={this.state.convertorID}\r\n                onChange={(e) => this.handleChange(e, 'convertorID')}\r\n                SelectProps={{\r\n                    MenuProps: {\r\n                        className: classes.menu,\r\n                    },\r\n                }}\r\n                helperText=\"Select convert method\"\r\n                margin=\"normal\"\r\n            >\r\n                {this.state.convertors.map(option => (\r\n                    <MenuItem key={option.ID} value={option.ID}>\r\n                        {option.Label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </Card>\r\n    }\r\n\r\n    renderOutputCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.root} elevation={10}>\r\n            <TextField\r\n                id=\"multiline-flexible\"\r\n                label=\"Output\"\r\n                multiline\r\n                fullWidth\r\n                rows=\"4\"\r\n                rowsMax=\"4\"\r\n                value={this.state.output}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n            />\r\n        </Card>\r\n    }\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderInputCard()}\r\n                {this.renderArrowDown()}\r\n                {this.renderConvertTypeCard()}\r\n                {this.renderArrowDown()}\r\n                {this.renderOutputCard()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Convert);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport Success from '../../../Components/SnackBars/SnackSuccess';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: 10,\r\n        position: 'relative',\r\n    },\r\n    copyButton: {\r\n        display: 'inline-block',\r\n        paddingLeft: \"5px\",\r\n        position: 'absolute',\r\n        right: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        verticalAlign: \"10px\"\r\n    },\r\n    text: {\r\n        display: \"inline-block\"\r\n    },\r\n    decorationsWrapper: {\r\n        maxHeight: \"25%\",\r\n        overflowY: \"auto\",\r\n    }\r\n});\r\n\r\nclass Decorate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSBClose = this.handleSBClose.bind(this);\r\n\r\n        this.state = {\r\n            text: \"\",\r\n            snackBarSuccess: false\r\n        }\r\n\r\n        this.Decorations = [\r\n            {\r\n                left: \"▁ ▂ ▄ ▅ ▆ ▇ █ [\",\r\n                right: \"] █ ▇ ▆ ▅ ▄ ▂ ▁\",\r\n            },\r\n            {\r\n                left: \"•´¯`•. [\",\r\n                right: \"] .•´¯`•\",\r\n            },\r\n            {\r\n                left: \"(-_-) [\",\r\n                right: \"] (-_-)\",\r\n            },\r\n            {\r\n                left: \"▀▄▀▄▀▄ [\",\r\n                right: \"] ▄▀▄▀▄▀\",\r\n            },\r\n            {\r\n                left: \"▌│█║▌║▌║ [\",\r\n                right: \"] ║▌║▌║█│▌\",\r\n            },\r\n            {\r\n                left: \"๑۞๑,¸¸,ø¤º°`°๑۩ [\",\r\n                right: \"] ๑۩ ,¸¸,ø¤º°`°๑۞๑\",\r\n            },\r\n            {\r\n                left: \"↦↦↦↦↦ [\",\r\n                right: \"] ↤↤↤↤↤\",\r\n            },\r\n            {\r\n                left: \"░▒▓█ [\",\r\n                right: \"] █▓▒░\",\r\n            },\r\n            {\r\n                left: \"➶➶➶➶➶ [\",\r\n                right: \"] ➷➷➷➷➷\",\r\n            },\r\n            {\r\n                left: \"★彡 [\",\r\n                right: \"] 彡★\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    handleChange(event, name) {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    copyToClipboard(text) {\r\n        var data = new DataTransfer();\r\n        data.items.add(\"text/plain\", text);\r\n        navigator.clipboard.writeText(text);\r\n        this.setState({\r\n            snackBarSuccess: true\r\n        });\r\n    }\r\n\r\n    renderDecorations() {\r\n        const { classes } = this.props;\r\n\r\n        return <div className={classes.decorationsWrapper}>\r\n            {\r\n                this.Decorations.map((item, index) => {\r\n                    var textToDisplay = `${item.left} ${this.state.text} ${item.right}`;\r\n                    return <Card className={classes.root} elevation={1} key={index}>\r\n                        <Typography component=\"p\" className={classes.text}>\r\n                            {\r\n                                textToDisplay\r\n                            }\r\n                        </Typography>\r\n                        <div className={classes.copyButton}>\r\n                            <Tooltip TransitionComponent={Zoom} title=\"Copy to clipboard\">\r\n                                <IconButton color=\"secondary\" aria-label=\"Copy\" onClick={() => {\r\n                                    this.copyToClipboard(textToDisplay)\r\n                                }}>\r\n                                    {\r\n                                        <i className=\"material-icons\">\r\n                                            send\r\n                                        </i>\r\n                                    }\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Card>\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n\r\n    handleSBClose() {\r\n        this.setState({\r\n            snackBarSuccess: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Card className={classes.root} elevation={10}>\r\n                    <Typography component=\"p\">\r\n                        You can use this to decorate your string with additional characters.\r\n                    </Typography>\r\n                    <TextField\r\n                        id=\"text\"\r\n                        label=\"Text\"\r\n                        className={classes.textField}\r\n                        value={this.state.text}\r\n                        onChange={(e) => this.handleChange(e, 'text')}\r\n                        margin=\"normal\"\r\n                        inputProps={{\r\n                            autoComplete: \"off\"\r\n                        }}\r\n                    />\r\n                </Card>\r\n                {this.renderDecorations()}\r\n                <Success\r\n                    open={this.state.snackBarSuccess}\r\n                    handleClose={this.handleSBClose}\r\n                    text=\"Copied to clipboard!\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Decorate);","import React, { Component } from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n/* myComponents */\r\nimport Convert from \"./Components/Convert\";\r\nimport Decorate from \"./Components/Decorate\";\r\n\r\nclass String extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            current: 0\r\n        }\r\n    }\r\n\r\n    handleChange(e, value) {\r\n        this.setState({\r\n            current: value\r\n        })\r\n    }\r\n\r\n    renderTabs() {\r\n        return (\r\n            <Paper square style={{ width: 500, marginLeft: \"auto\", marginRight: \"auto\", marginBottom:\"20px\" }}>\r\n                <Tabs\r\n                    value={this.state.current}\r\n                    onChange={this.handleChange}\r\n                    variant=\"fullWidth\"\r\n                    indicatorColor=\"secondary\"\r\n                    textColor=\"secondary\"\r\n                >\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">autorenew</i>\r\n                        }\r\n                        label=\"CONVERT\"\r\n                    />\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">text_format</i>\r\n                        }\r\n                        label=\"DECORATE\"\r\n                    />\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">text_fields</i>\r\n                        }\r\n                        label=\"STYLE\"\r\n                        disabled\r\n                    />\r\n                </Tabs>\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n    renderTabContent() {\r\n        switch(this.state.current) {\r\n            case 0: return <Convert/>;\r\n            case 1: return <Decorate/>;\r\n            default: return <Convert/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderTabs()}\r\n                {this.renderTabContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default String;","export function rnd_num(min, max) {\r\n    min = parseInt(min, 10);\r\n    max = parseInt(max, 10);\r\n    if (!(max > min)) return;\r\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n};\r\n\r\nexport function rnd_color() {\r\n    return \"rgb(\" + rnd_num(0, 255) + \", \" + rnd_num(0, 255) + \", \" + rnd_num(0, 255) + \")\";\r\n};\r\n\r\nexport default {\r\n    rnd_num,\r\n    rnd_color\r\n};","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showNumbers: {\r\n        width: \"auto\",\r\n        maxWidth: 700,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    textField1: {\r\n        width: \"145px\",\r\n        marginRight: \"10px\"\r\n    },\r\n    textField2: {\r\n        width: \"145px\",\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass RndNumber extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: {\r\n                NumberOfIntegers: 10,\r\n                Min: 1,\r\n                Max: 10,\r\n                NumberOfColumns: 3,\r\n                Highlight: 2,\r\n                NumbersToShow: [\r\n                    []\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateNumbers()\r\n    }\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    handleNumberChange(e, label) {\r\n        var value = e.target.value;\r\n        this.setState({\r\n            Number: {\r\n                ...this.state.Number,\r\n                [label]: value\r\n            }\r\n        }, () => {\r\n            if (label === \"Highlight\") return;\r\n            if (value === \"\") return;\r\n            this.generateNumbers()\r\n        });\r\n    }\r\n\r\n    showNumbers() {\r\n        const state = this.state.Number;\r\n\r\n        return state.NumbersToShow.map((arr, i) => {\r\n            return (\r\n                <Fragment key={i}>\r\n                    <p>\r\n                        {\r\n                            arr.map((num, index) => {\r\n                                return <span\r\n                                    key={index}\r\n                                    style={\r\n                                        num === parseInt(state.Highlight, 10)\r\n                                            ? { color: \"red\" }\r\n                                            : {}\r\n                                    }\r\n                                >\r\n                                    {\r\n                                        index === arr.length - 1\r\n                                            ? num\r\n                                            : num + \", \"\r\n                                    }\r\n                                </span>;\r\n                            })\r\n                        }\r\n                    </p>\r\n                    {\r\n                        i === state.NumbersToShow.length - 1\r\n                            ? null\r\n                            : <Divider />\r\n                    }\r\n                </Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n    generateNumbers() {\r\n        const state = this.state.Number;\r\n\r\n        if (!state.NumberOfColumns) return;\r\n\r\n        var rows = parseInt(state.NumberOfColumns, 10) >= parseInt(state.NumberOfIntegers, 10)\r\n            ? state.NumberOfIntegers\r\n            : state.NumberOfColumns\r\n\r\n        var mainArr = [];\r\n        for (let i = 0; i < rows; i++) {\r\n            mainArr.push([])\r\n        }\r\n\r\n        var current = 0;\r\n        for (let n = 0; n < state.NumberOfIntegers; n++) {\r\n            mainArr[current].push(rnd_num(this.state.Number.Min, this.state.Number.Max))\r\n            current++\r\n            if (current === mainArr.length) {\r\n                current = 0;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Number: {\r\n                ...this.state.Number,\r\n                NumbersToShow: [...mainArr]\r\n            }\r\n        })\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"RANDOMISE\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.generateNumbers()\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                        autorenew\r\n                    </i>\r\n                    RANDOMISE\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Card elevation={5} className={classes.content}>\r\n                    <TextField\r\n                        id=\"NumberOfIntegers\"\r\n                        defaultValue={this.state.Number.NumberOfIntegers}\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        label=\"Number of integers to generate\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"NumberOfIntegers\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"min\"\r\n                        defaultValue={this.state.Number.Min}\r\n                        className={classes.textField1}\r\n                        helperText=\"Minimum\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Min\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"max\"\r\n                        defaultValue={this.state.Number.Max}\r\n                        className={classes.textField2}\r\n                        helperText=\"Maximum\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Max\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"min\"\r\n                        defaultValue={this.state.Number.Highlight}\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Highlight\") }}\r\n                        className={classes.textField1}\r\n                        helperText=\"Highlight number\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                        id=\"max\"\r\n                        defaultValue={this.state.Number.NumberOfColumns}\r\n                        className={classes.textField2}\r\n                        helperText=\"Rows\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"NumberOfColumns\") }}\r\n                    />\r\n                </Card>\r\n                {this.renderArrowDown()}\r\n                <Card elevation={2} className={classes.showNumbers}>\r\n                    {this.showNumbers()}\r\n                </Card>\r\n                {this.renderFabButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RndNumber);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { rnd_color } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    propsDiv: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showColor: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        minHeight: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        transitionDuration: \"0.4s\",\r\n        cursor: \"pointer\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n});\r\n\r\nclass RndColor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.changeColor = this.changeColor.bind(this);\r\n\r\n        this.state = {\r\n            Color: rnd_color()\r\n        }\r\n    }\r\n\r\n    changeColor() {\r\n        this.setState({\r\n            Color: rnd_color()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"flip\"\r\n                    className={classes.button}\r\n                    onClick={() => this.changeColor()}\r\n                    color=\"secondary\"\r\n                >\r\n                    <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                        flip_to_front\r\n                    </i>\r\n                    New color\r\n        \t    </Fab>\r\n                <Card elevation={15} className={classes.showColor}>\r\n                    <div\r\n                        className={classes.showColor}\r\n                        style={{ backgroundColor: this.state.Color }}\r\n                        onClick={this.changeColor}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RndColor);","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    showCoin: {\r\n        borderRadius: \"100%\",\r\n        width: 300,\r\n        height: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"center\",\r\n        lineHeight: \"258px\",\r\n        transitionDuration: \"0.4s\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    progress: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    },\r\n});\r\n\r\nclass Coin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            Coin: {\r\n                Title: \"\",\r\n                progress: 0\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleFlip();\r\n    }\r\n    \r\n    progress = () => {\r\n        const { progress } = this.state.Coin;\r\n        this.setState({\r\n            Coin: {\r\n                ...this.state.Coin,\r\n                progress: progress + 1,\r\n                Title: \"\",\r\n            }\r\n        }, () => {\r\n            if (progress >= 100) {\r\n                clearInterval(this.timer);\r\n                this.setState({\r\n                    Coin: {\r\n                        ...this.state.Coin,\r\n                        Title: rnd_num(0, 1) === 0 ? \"TAILS\" : \"HEADS\",\r\n                        progress: 0\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    handleFlip() {\r\n        if (this.state.Coin.progress === 0) {\r\n            this.timer = setInterval(this.progress, 10);\r\n        } else {\r\n            clearInterval(this.timer);\r\n            this.setState({\r\n                Coin: {\r\n                    ...this.state.Coin,\r\n                    progress: 0\r\n                }\r\n            });\r\n            this.timer = setInterval(this.progress, 10);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return <Fragment>\r\n            <Fab\r\n                variant=\"extended\"\r\n                aria-label=\"flip\"\r\n                className={classes.button}\r\n                onClick={() => this.handleFlip()}\r\n                color=\"secondary\"\r\n            >\r\n                <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                    autorenew\r\n                </i>\r\n                Flip\r\n        \t</Fab>\r\n            <Card\r\n                elevation={15}\r\n                className={classes.showCoin}\r\n                color=\"primary\"\r\n                style={\r\n                    this.state.Coin.Title === \"HEADS\"\r\n                        ? { backgroundColor: \"black\", color: \"white\" }\r\n                        : { backgroundColor: \"white\", color: \"black\" }\r\n                }\r\n            >\r\n                {\r\n                    this.state.Coin.progress > 0\r\n                        ? <CircularProgress\r\n                            className={classes.progress}\r\n                            color=\"secondary\"\r\n                            variant=\"determinate\"\r\n                            size={60}\r\n                            value={this.state.Coin.progress}\r\n\r\n                        />\r\n                        : <h1>{this.state.Coin.Title}</h1>\r\n                }\r\n            </Card>\r\n        </Fragment>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Coin);","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n\r\n    diceSpan: {\r\n        margin: theme.spacing(2),\r\n        fontSize: \"32px\",\r\n        backgroundColor: \"black\",\r\n        color: \"white\"\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n    showDices: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    }\r\n});\r\n\r\nclass Dice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Dice: {\r\n                NumberOfDices: 6,\r\n                Dices: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateDices()\r\n    }\r\n\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fab\r\n                variant=\"extended\"\r\n                color=\"primary\"\r\n                className={classes.fab}\r\n                onClick={() => {\r\n                    this.generateDices()\r\n                }}>\r\n                <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                    border_outer\r\n                </i>\r\n                Roll\r\n            </Fab>\r\n        )\r\n    }\r\n\r\n    diceInner(dice) {\r\n        switch (dice) {\r\n            case 6: return \"https://png.icons8.com/material/50/000000/6.png\";\r\n            case 1: return \"https://png.icons8.com/material/50/000000/1.png\";\r\n            case 2: return \"https://png.icons8.com/material/50/000000/2.png\";\r\n            case 3: return \"https://png.icons8.com/material/50/000000/3.png\";\r\n            case 4: return \"https://png.icons8.com/material/50/000000/4.png\";\r\n            case 5: return \"https://png.icons8.com/material/50/000000/5.png\";\r\n            default: return;\r\n        }\r\n    }\r\n\r\n    generateDices() {\r\n        var arr = [];\r\n        for (let i = 0; i < this.state.Dice.NumberOfDices; i++) {\r\n            arr.push(rnd_num(1, 6));\r\n        }\r\n\r\n        this.setState({\r\n            Dice: {\r\n                ...this.state.Dice,\r\n                Dices: [...arr]\r\n            }\r\n        })\r\n    }\r\n\r\n    showDices() {\r\n        return this.state.Dice.Dices.map((dice, index) => {\r\n            return <img\r\n                alt=\"dice\"\r\n                className=\"diceSpan\"\r\n                src={this.diceInner(dice)}\r\n                key={index}\r\n            />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Card elevation={5} className={classes.content}>\r\n                    <TextField\r\n                        id=\"NumberOfDices\"\r\n                        defaultValue={this.state.Dice.NumberOfDices}\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        label=\"Number of dices to roll\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                Dice: {\r\n                                    ...this.state.Dice,\r\n                                    NumberOfDices: e.target.value\r\n                                }\r\n                            }, () => { this.generateDices() })\r\n                        }}\r\n                    />\r\n                </Card>\r\n                {this.renderArrowDown()}\r\n                <Card elevation={2} className={classes.showDices}>\r\n                    {this.showDices()}\r\n                </Card>\r\n                {this.renderFabButton()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Dice);","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport RndNumber from \"./Components/Rnd_number\";\r\nimport RndColor from './Components/Rnd_color';\r\nimport Coin from './Components/Coin';\r\nimport Dice from './Components/Dice';\r\n\r\nconst styles = theme => ({\r\n    menuCard: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\"\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    showCoin: {\r\n        borderRadius: \"100%\",\r\n        width: 300,\r\n        height: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"center\",\r\n        lineHeight: \"258px\",\r\n        transitionDuration: \"0.4s\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    progress: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    },\r\n\r\n    diceSpan: {\r\n        margin: theme.spacing(2),\r\n        fontSize: \"32px\",\r\n        backgroundColor: \"black\",\r\n        color: \"white\"\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n    showDices: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    }\r\n});\r\n\r\nclass Randomiser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleMenuClick = this.handleMenuClick.bind(this);\r\n\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            current: 0,\r\n        }\r\n    }\r\n\r\n    handleMenuClick(ID) {\r\n        this.setState({\r\n            current: ID\r\n        });\r\n    }\r\n\r\n    renderContent() {\r\n        switch (this.state.current) {\r\n            case 0: return <RndNumber />;\r\n            case 1: return <RndColor />;\r\n            case 2: return <Coin />;\r\n            case 3: return <Dice />;\r\n            default: return <RndNumber />;\r\n        }\r\n    }\r\n\r\n    renderChips() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.menuCard}>\r\n                    <Chip\r\n                        avatar={<Avatar>NU</Avatar>}\r\n                        label=\"Numbers\"\r\n                        color=\"primary\"\r\n                        variant={this.state.current === 0 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(0)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>CO</Avatar>}\r\n                        label=\"Color\"\r\n                        color=\"secondary\"\r\n                        variant={this.state.current === 1 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(1)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>CF</Avatar>}\r\n                        label=\"Coin flipper\"\r\n                        variant={this.state.current === 2 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(2)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>DR</Avatar>}\r\n                        label=\"Dice roller\"\r\n                        variant={this.state.current === 3 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(3)}\r\n                        className={classes.chip}\r\n                    />\r\n                </div>\r\n                {this.renderContent()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderChips()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRandomiser.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Randomiser);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    display: 'flex',\r\n    width: '300px',\r\n    margin: '10px',\r\n  },\r\n  avatar: {\r\n    width: 25,\r\n    height: 25,\r\n    marginRight: 4,\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    lineHeight: '25px',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 48,\r\n    width: 48,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  editIcon: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  deleteIcon: {\r\n    color: '',\r\n  },\r\n});\r\n\r\nfunction MediaControlCard(props) {\r\n  const { classes, theme } = props;\r\n\r\n  return (\r\n    <Card className={classes.card} elevation={10}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            style={{ backgroundColor: props.quiz.Color }}\r\n          >\r\n            {\r\n              props.quiz.Name[0]\r\n            }\r\n          </Avatar>\r\n          <h5 style={{ display: 'inline-block' }}>\r\n            {props.quiz.Name.slice(1)}\r\n          </h5>\r\n          <p variant=\"subtitle1\" color=\"textSecondary\">\r\n            {props.quiz.ShortDescription}\r\n          </p>\r\n        </CardContent>\r\n        <div className={classes.controls}>\r\n          <IconButton aria-label=\"Play\" onClick={() => {props.onPlay(props.quiz.ID)}}>\r\n            <PlayArrowIcon className={classes.playIcon} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Edit\">\r\n            <EditIcon className={classes.editIcon} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Delete\" onClick={() => props.onDelete(props.quiz.ID)}>\r\n            <DeleteIcon className={classes.deleteIcon} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMediaControlCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MediaControlCard);","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nclass Error extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.props.open}\r\n                autoHideDuration={this.props.autoHideDuration ? this.props.autoHideDuration : 3000}\r\n                onClose={this.props.handleClose}\r\n            >\r\n                <SnackbarContent\r\n                    className={classNames(classes.error)}\r\n                    aria-describedby=\"client-snackbar\"\r\n                    message={\r\n                        <span id=\"client-snackbar\" className={classes.message}>\r\n                            <i className={classNames(classes.icon, classes.iconVariant, \"material-icons\")}>\r\n                            error_outline\r\n                            </i>\r\n                            {this.props.text.length ? this.props.text : \"Wrong\"}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.props.handleClose}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                close\r\n                            </i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Error);","import React, { Component, Fragment } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass Summary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.showSummary}\r\n                onClose={this.props.handleSummaryClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">{\"Summary of -\" + this.props.QuizName + \"-\"}</DialogTitle>\r\n                <Divider variant=\"middle\" />\r\n                {\r\n                    this.props.results.map((r, index) => {\r\n                        return (\r\n                            <Fragment key={index}>\r\n                                <div style={{ padding: 12 }}>\r\n                                    <p style={{ display: 'inline' }}>\r\n                                        <b>\r\n                                            {\r\n                                                `#${index + 1}: ${r.QuestionText}`\r\n                                            }\r\n                                        </b>\r\n                                    </p>\r\n                                    <i\r\n                                        className=\"material-icons\"\r\n                                        style={\r\n                                            { \r\n                                                display: 'inline',\r\n                                                color: r.isCorrect ? 'green' : 'red',\r\n                                                marginLeft: 3\r\n                                         }\r\n                                        }>\r\n                                        {r.isCorrect ? 'done_all' : 'close'}\r\n                                    </i>\r\n                                    <p>Your answer: {r.UserAnswer}</p>\r\n                                    {\r\n                                        !r.isCorrect\r\n                                            ? <p>Correct answer: {r.CorrectAnswer}</p>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n\r\n                                <Divider variant=\"middle\" />\r\n                            </Fragment>\r\n                        )\r\n                    })\r\n                }\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={this.props.handleSummaryClose}\r\n                >\r\n                    Back to menu\r\n                </Button>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Summary);","export function delete_quiz(data) {\r\n    return {\r\n        type: 'DELETE_QUIZ',\r\n        data\r\n    };\r\n};\r\n\r\nexport function new_quiz(data) {\r\n    return {\r\n        type: 'NEW_QUIZ',\r\n        data\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showNumbers: {\r\n        width: \"auto\",\r\n        maxWidth: 700,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    },\r\n    textField1: {\r\n        width: \"145px\",\r\n        marginRight: \"10px\"\r\n    },\r\n    textField2: {\r\n        width: \"145px\",\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass EditQuiz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Quiz: {\r\n                ID: 0,\r\n                Name: '',\r\n                ShortDescription: '',\r\n                Color: '#000',\r\n                Tags: [],\r\n                Questions: [\r\n                    {\r\n                        ID: 0,\r\n                        Text: '',\r\n                        Answers: [\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: true\r\n                            },\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            CurrentID: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const ID = _.uniqueId();\r\n\r\n        this.setState({\r\n            Quiz: {\r\n                ID: _.uniqueId(),\r\n                Name: '',\r\n                ShortDescription: '',\r\n                Color: '#000',\r\n                Tags: [],\r\n                Questions: [\r\n                    {\r\n                        ID,\r\n                        Text: '',\r\n                        Answers: [\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: true\r\n                            },\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            CurrentID: ID,\r\n        })\r\n    }\r\n    \r\n\r\n    handleQuestionChange({ target: { value } }, ID) {\r\n        this.setState({\r\n            Quiz: {\r\n                ...this.state.Quiz,\r\n                Questions: [\r\n                    ...this.state.Quiz.Questions.map((Q) => {\r\n                        if(Q.ID !== ID) return Q;\r\n                        return {\r\n                            ...Q,\r\n                            Text: value\r\n                        }\r\n                    })\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    handleAnswerChange({ target: { value } }, index) {\r\n        const ID = this.state.CurrentID;\r\n\r\n        this.setState({\r\n            Quiz: {\r\n                ...this.state.Quiz,\r\n                Questions: [\r\n                    ...this.state.Quiz.Questions.map((Q) => {\r\n                        if(Q.ID !== ID) return Q;\r\n                        return {\r\n                            ...Q,\r\n                            Answers: [\r\n                                ..._.find(this.state.Quiz.Questions, {ID}).Answers.map((A, i) => {\r\n                                    if(i !== index) return A;\r\n                                    return {\r\n                                        ...A,\r\n                                        Text: value\r\n                                    }\r\n                                })\r\n                            ]\r\n                        }\r\n                    })\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    renderFields() {\r\n        const { classes } = this.props;\r\n        const { Questions } = this.state.Quiz;\r\n        const { CurrentID } = this.state;\r\n        const CurrentQuestion = _.find(Questions, { ID: CurrentID });\r\n        const { Answers } = CurrentQuestion;\r\n\r\n\r\n        return (\r\n            <Card elevation={5} className={classes.content}>\r\n                <TextField\r\n                    defaultValue={CurrentQuestion.Text}\r\n                    className={classes.textField}\r\n                    fullWidth\r\n                    label=\"Question\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleQuestionChange(e, CurrentID) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[0].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"First answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 0) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[1].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Second answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 1) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[2].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Third answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 2) }}\r\n                />\r\n                <TextField\r\n                    id=\"min\"\r\n                    defaultValue={Answers[3].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Fourth answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 3) }}\r\n                />\r\n\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderFields()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(EditQuiz);","import React, { Component, Fragment } from 'react'\r\nimport QuizTile from './QuizTile';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nimport Success from '../../Components/SnackBars/SnackSuccess';\r\nimport Error from '../../Components/SnackBars/SnackError';\r\nimport Summary from './Summary';\r\n\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as QuizActions from \"../../Actions/QuizActions\";\r\n\r\nimport EditQuiz from './EditQuiz';\r\n\r\nconst MainActions = {\r\n    ...QuizActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        maxWidth: '50%',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        marginBottom: 50,\r\n    },\r\n    Answers: {\r\n        cursor: 'pointer',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass Quizes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPage: \"start\", // Think about it\r\n            toEdit: {},\r\n            toPlay: {},\r\n            shuffledQuestions: [],\r\n            nextQuestion: 0,\r\n            isFinished: false,\r\n            answerResults: [],\r\n            showSnackbar: false,\r\n            showDeleteSnackbar: false,\r\n            snackMessage: '',\r\n            snackType: '',\r\n            showSummary: false,\r\n            lastDeletedQuiz: {}\r\n        }\r\n\r\n        const { delete_quiz, new_quiz } = this.props;\r\n        this.delete_quiz = delete_quiz;\r\n        this.new_quiz = new_quiz;\r\n\r\n        this.handlePlay = this.handlePlay.bind(this);\r\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n        this.handleSummaryClose = this.handleSummaryClose.bind(this);\r\n        this.handleDeleteQuiz = this.handleDeleteQuiz.bind(this);\r\n        this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n        //this.handleAnswer = this.handleAnswer.bind(this);\r\n    }\r\n\r\n    handleSummaryClose() {\r\n        this.setState({\r\n            showSummary: false,\r\n            toPlay: {},\r\n            shuffledQuestions: [],\r\n            nextQuestion: 0,\r\n            isFinished: true,\r\n            answerResults: [],\r\n        })\r\n    }\r\n\r\n    handleSnackbarClose() {\r\n        this.setState({\r\n            showSnackbar: false,\r\n            showDeleteSnackbar: false\r\n        })\r\n    }\r\n\r\n    getNextQuestion() {\r\n        return this.state.shuffledQuestions[this.state.nextQuestion];\r\n    }\r\n\r\n    returnShuffledQuiz(QuestionsArray) {\r\n        return _.shuffle(QuestionsArray.map((Question) => {\r\n            return {\r\n                ...Question,\r\n                Answers: _.shuffle(Question.Answers)\r\n            }\r\n        }))\r\n    }\r\n\r\n    handleDeleteQuiz(ID) {\r\n        this.delete_quiz({ ID });\r\n\r\n        this.setState({\r\n            lastDeletedQuiz: _.find(this.props.Quizes, {ID}),\r\n            showDeleteSnackbar: true,\r\n        })\r\n    }\r\n\r\n    handleUndoDelete() {\r\n        this.new_quiz(this.state.lastDeletedQuiz);\r\n\r\n        this.setState({\r\n            showDeleteSnackbar: false,\r\n        })\r\n    }\r\n\r\n    handlePlay(ID) {\r\n        const obj = _.find(this.props.Quizes, { ID: ID })\r\n\r\n        this.setState({\r\n            currentPage: \"QuizPlay\", // Think about it\r\n            toPlay: obj,\r\n            shuffledQuestions: this.returnShuffledQuiz(obj.Questions), // We randomise order of questions and answers\r\n            nextQuestion: 0,\r\n            isFinished: false,\r\n            answerResults: [],\r\n        })\r\n    }\r\n\r\n    renderDefaultQuizes() {\r\n        if (!this.props.Quizes || !this.props.Quizes.length) return null;\r\n\r\n        return (\r\n            <Grid container justify=\"center\" spacing={10}>\r\n                {\r\n                    this.props.Quizes.map((item) => {\r\n                        return (\r\n                            <Grid key={item.ID} item>\r\n                                <QuizTile\r\n                                    quiz={{ ...item }}\r\n                                    onPlay={this.handlePlay}\r\n                                    onDelete={this.handleDeleteQuiz}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    handleAnswer(Ans) {\r\n        this.setState({\r\n            showSnackbar: true,\r\n            answerResults: [\r\n                ...this.state.answerResults,\r\n                {\r\n                    QuestionText: this.state.shuffledQuestions[this.state.nextQuestion].Text,\r\n                    UserAnswer: Ans.Text,\r\n                    CorrectAnswer: _.find(this.state.shuffledQuestions[this.state.nextQuestion].Answers, { Correct: true }).Text,\r\n                    isCorrect: Ans.Correct,\r\n                }\r\n            ],\r\n            snackMessage: Ans.Correct ? 'Correct!' : 'Not correct!',\r\n            snackType: Ans.Correct ? 'Success' : 'Error'\r\n        }, () => {\r\n            if (this.state.nextQuestion + 2 > this.state.shuffledQuestions.length) {\r\n                this.setState({\r\n                    isFinished: true,\r\n                    showSummary: true,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    nextQuestion: this.state.nextQuestion + 1,\r\n\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    renderPage() {\r\n        const { classes } = this.props;\r\n\r\n        if(this.state.newQuiz) return <EditQuiz />;\r\n\r\n        if (!this.state.toPlay.ID) {\r\n            return (\r\n                <div style={{ width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                    {this.renderDefaultQuizes()}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const Q = this.getNextQuestion();\r\n        return (\r\n            <Fragment>\r\n                <Paper className={classes.root} elevation={5}>\r\n                    <h2>{Q.Text}</h2>\r\n                </Paper>\r\n                <Grid container justify=\"center\" spacing={10}>\r\n                    {\r\n                        Q.Answers.map((Ans, index) => {\r\n                            return (\r\n                                <Grid key={index} item>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className={classes.Answers}\r\n                                        onClick={() => this.handleAnswer(Ans)}\r\n                                    >\r\n                                        {\r\n                                            Ans.Text\r\n                                        }\r\n                                    </Button>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n\r\n    }\r\n\r\n    renderSnackBar() {\r\n        //const { classes } = this.props;\r\n\r\n        return this.state.snackType === \"Success\"\r\n            ? <Success\r\n                open={this.state.showSnackbar}\r\n                handleClose={this.handleSnackbarClose}\r\n                text={this.state.snackMessage}\r\n                autoHideDuration={1500}\r\n            />\r\n            : <Error\r\n                open={this.state.showSnackbar}\r\n                handleClose={this.handleSnackbarClose}\r\n                text={this.state.snackMessage}\r\n                autoHideDuration={1500}\r\n            />\r\n    }\r\n\r\n    renderUndoDeleteSnackbar() {\r\n        const { classes } = this.props; \r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.state.showDeleteSnackbar}\r\n                autoHideDuration={6000}\r\n                onClose={this.handleSnackbarClose}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">Quiz deleted</span>}\r\n                action={[\r\n                    <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n                        UNDO\r\n                    </Button>,\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={classes.close}\r\n                        onClick={this.handleSnackbarClose}\r\n                    >\r\n                        <i className=\"material-icons\">close</i>\r\n                    </IconButton>,\r\n                ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderSummary() {\r\n        if (!this.state.isFinished) return null;\r\n\r\n        return <Summary\r\n            showSummary={this.state.showSummary}\r\n            handleSummaryClose={this.handleSummaryClose}\r\n            QuizName={this.state.toPlay.Name}\r\n            results={this.state.answerResults}\r\n        />\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new QUIZ\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            newQuiz: true\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{marginRight: \"10px\"}}>add_circle</i>\r\n                    New Quiz\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderPage()}\r\n                {this.renderSnackBar()}\r\n                {this.renderSummary()}\r\n                {this.renderUndoDeleteSnackbar()}\r\n                {this.renderFabButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Quizes } = state;\r\n\r\n        return {\r\n            Quizes,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Quizes);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 275,\r\n        maxWidth: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nconst Facts = (props) => {\r\n    const classes = useStyles();\r\n    const [fact, setFact] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch('http://numbersapi.com/random/year', {\r\n            mode: 'no-cors'\r\n          })\r\n            .then((response) => response.text())\r\n            .then(data => {\r\n                setFact(data)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    {fact}\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(state => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Facts);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: \"380px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: 10,\r\n    },\r\n}));\r\n\r\nconst data = [\r\n    {\r\n        firstIcon: 'group_work',\r\n        title: 'Mastermind',\r\n        url: 'https://mikacinc.github.io/Mastermind/'\r\n    },\r\n    {\r\n        firstIcon: 'memory',\r\n        title: 'Memory game',\r\n        url: 'https://mikacinc.github.io/MemoryGame/'\r\n    },\r\n    {\r\n        firstIcon: 'location_city',\r\n        title: 'Capital Cities',\r\n        url: 'https://mikacinc.github.io/GlavniGradovi/'\r\n    },\r\n    {\r\n        firstIcon: 'add',\r\n        title: 'Do the math',\r\n        url: 'https://mikacinc.github.io/Izracunaj/'\r\n    },\r\n]\r\n\r\nconst Item = ({ item }) => {\r\n    return (\r\n        <ListItem\r\n            onClick={() => {\r\n                window.open(item.url);\r\n            }}\r\n        >\r\n            <ListItemAvatar>\r\n                <Avatar>\r\n                    <i className=\"material-icons\">\r\n                        {item.firstIcon}\r\n                    </i>\r\n                </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n                primary={item.title}\r\n            />\r\n            <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => {\r\n                    window.open(item.url);\r\n                }}>\r\n                    <i className=\"material-icons\">\r\n                        arrow_right\r\n                    </i>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nconst Games = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.root} elevation={3}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    React versions Coming Soon™\r\n                </Typography>\r\n            </Paper>\r\n            <Paper className={classes.root} elevation={7}>\r\n                <List>\r\n                    {\r\n                        data.map((item) => {\r\n                            return (\r\n                                <Item key={item.title} item={item} />\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Games;","import React, { Component } from 'react';\r\nimport WelcomePage from \"./HomePage/WelcomePage\";\r\nimport Calculator from \"./Calculator\";\r\n//import ToDo from \"./ToDo\";\r\nimport UserPage from \"./UserPage\";\r\nimport Time from \"./Time\";\r\nimport Arrays from \"./Arrays\";\r\nimport Uno from \"./Uno\";\r\nimport ToDo from './ToDo';\r\nimport Notes from './Notes';\r\nimport Counters from './Counters';\r\nimport String from './String';\r\nimport Randomiser from './Randomiser';\r\nimport Quizes from './Quizes';\r\nimport Facts from './Facts';\r\nimport Games from './Games';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as GeneralActions from \".././Actions/GeneralActions\";\r\n\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n}\r\n\r\nclass RenderPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { page_change } = this.props\r\n        this.page_change = page_change\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.General.currentPage) {\r\n            case (\"WelcomePage\"):\r\n                return (<WelcomePage />);\r\n            case (\"UserPage\"):\r\n                return (<UserPage />);\r\n            case (\"Calculator\"):\r\n                return (<Calculator />);\r\n            case (\"ToDo\"):\r\n                return (<ToDo />);\r\n            case (\"Time\"):\r\n                return (<Time />);\r\n            case (\"Arrays\"):\r\n                return (<Arrays />);\r\n            case (\"Facts\"):\r\n                return (<Facts />);\r\n            case (\"Uno\"):\r\n                return (<Uno />);\r\n            case (\"Notes\"):\r\n                return (<Notes />);\r\n            case (\"Counters\"):\r\n                return (<Counters />);\r\n            case (\"String\"):\r\n                return (<String />);\r\n            case (\"Randomiser\"):\r\n                return (<Randomiser />);\r\n            case (\"Games\"):\r\n                return (<Games />);\r\n            case (\"Quizes\"):\r\n                return (<Quizes />);\r\n            default:\r\n                return (<WelcomePage />);\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(state => {\r\n    const { General } = state;\r\n\r\n    return {\r\n        General,\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(RenderPage);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Others\r\nimport ExtendedHeader from '.././Others/Header';\r\nimport Profilna from \"../Pictures/avatar.jpg\";\r\n// Pages\r\nimport RenderPage from \".././Content/index\";\r\n\r\nimport * as GeneralActions from \".././Actions/GeneralActions\";\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        zIndex: 4,\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        display: 'flex',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        position: 'flex',\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        dislay: \"block\",\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        minHeight: \"100vh\",\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n    },\r\n    Title: {\r\n        cursor: 'pointer',\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        cursor: \"pointer\",\r\n    },\r\n    bigAvatar: {\r\n        width: 60,\r\n        height: 60,\r\n    },\r\n});\r\n\r\nclass Shell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { page_change, toggle_drawer, toggle_header } = this.props;\r\n        this.page_change = page_change;\r\n        this.toggle_drawer = toggle_drawer;\r\n        this.toggle_header = toggle_header;\r\n    }\r\n\r\n    renderIcon(theme) {\r\n        return (\r\n            <i className=\"material-icons\">\r\n                {theme.direction === 'rtl' ? \"keyboard_arrow_right\" : \"keyboard_arrow_left\"}\r\n            </i>\r\n        )\r\n    }\r\n\r\n    renderMenuItem(page_change, icon, text) {\r\n        return (\r\n            <ListItem\r\n                onClick={() => {\r\n                    this.page_change(page_change)\r\n                }}\r\n                button\r\n            >\r\n                <ListItemIcon>\r\n                    <i className=\"material-icons\">\r\n                        {icon}\r\n                    </i>\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n            </ListItem>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes, theme } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar\r\n                    position=\"absolute\"\r\n                    className={classNames(classes.appBar, this.props.General.isDrawerOpen && classes.appBarShift)}\r\n                >\r\n                    <Toolbar disableGutters={!this.props.General.isDrawerOpen}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"Open drawer\"\r\n                            onClick={() => this.toggle_drawer()}\r\n                            className={classNames(classes.menuButton, this.props.General.isDrawerOpen && classes.hide)}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                menu\r\n                            </i>\r\n                        </IconButton>\r\n\r\n                        <Typography className={classNames(classes.Title, classes.grow)} onClick={() => this.toggle_header()} variant=\"h5\" color=\"inherit\" noWrap>\r\n                            Project // NEON /\r\n                        </Typography>\r\n                        <IconButton onClick={() => this.toggle_header()}>\r\n                            {\r\n                                <i className=\"material-icons\" style={{ color: \"rgb(255, 255, 255)\" }}>\r\n                                    {\r\n                                        this.props.General.isHeaderOpen\r\n                                            ? \"keyboard_arrow_up\"\r\n                                            : \"keyboard_arrow_down\"\r\n                                    }\r\n                                </i>\r\n                            }\r\n                        </IconButton>\r\n\r\n                        <Avatar\r\n                            className={classes.avatar}\r\n                            onClick={() => {\r\n                                window.open('https://mikacinc.github.io/Portfolio/', '_blank');\r\n                            }}\r\n                        >\r\n                            <img\r\n                                alt=\"Mihajlo Marjanović\"\r\n                                src={Profilna}\r\n                            />\r\n                        </Avatar>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classNames(classes.drawerPaper, !this.props.General.isDrawerOpen && classes.drawerPaperClose),\r\n                    }}\r\n                    open={this.props.General.isDrawerOpen}\r\n                >\r\n                    <div className={classes.toolbar}>\r\n                        <IconButton onClick={() => this.toggle_drawer()}>\r\n                            {this.renderIcon(theme)}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <MenuList>\r\n                        {\r\n                            this.renderMenuItem(\"WelcomePage\", \"home\", \"Home\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"UserPage\", \"settings\", \"Settings\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"ToDo\", \"done_all\", \"To-Do list\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Notes\", \"notes\", \"Notes\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Counters\", \"add_circle_outline\", \"Counters\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Time\", \"access_time\", \"Time\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Calculator\", \"dialpad\", \"Calculator\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"String\", \"message\", \"String\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Randomiser\", \"gesture\", \"Randomiser\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Arrays\", \"linear_scale\", \"Arrays\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Facts\", \"filter_none\", \"Fun Facts\")\r\n                        }\r\n                        {\r\n                            //this.renderMenuItem(\"Uno\", \"sim_card\", \"Uno\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Games\", \"videogame_asset\", \"Games\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Quizes\", \"widgets\", \"Quizes\")\r\n                        }\r\n                    </MenuList>\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    {this.props.General.isHeaderOpen ? <ExtendedHeader /> : null}\r\n                    <br />\r\n                    <Zoom in={true} style={{ transitionDelay: 100 }}>\r\n                        <RenderPage />\r\n                    </Zoom>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nShell.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    connect(state => {\r\n        const { General } = state;\r\n\r\n        return {\r\n            General,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Shell);","import React, { Component } from 'react';\r\nimport './App.css';\r\n// Material UI\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\n//import RaisedButton from 'material-ui/RaisedButton';\r\n//import Avatar from 'material-ui/Avatar';\r\n// Dark theme\r\n/*\r\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\r\nimport darkBaseTheme from 'material-ui/styles/baseThemes/darkBaseTheme';\r\n*/\r\n// Shell\r\nimport Shell from './Shell/Shell'\r\n\r\nimport purple from '@material-ui/core/colors/purple';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass App extends Component {\r\n\r\n  getTheme() {\r\n    return createMuiTheme({...this.props.General.theme});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={this.getTheme()}>\r\n        <div className=\"App\">\r\n          <Shell />\r\n        </div>\r\n      </ThemeProvider >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  const { General } = state;\r\n\r\n  return {\r\n      General,\r\n  };\r\n},\r\n  dispatch => {\r\n      return bindActionCreators({}, dispatch);\r\n  })(App);","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","var General = {\r\n    currentPage: \"WelcomePage\",\r\n    isDrawerOpen: false,\r\n    isHeaderOpen: false,\r\n    // themeType: 'light',\r\n    theme: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#3f51b5'\r\n            },\r\n            secondary: {\r\n                main: '#ff3d00'\r\n            }\r\n        },\r\n        typography: {\r\n            useNextVariants: true,\r\n        },\r\n    }\r\n}\r\n\r\nexport default General;","import initialState from \"../.././Data/General\";\r\nimport _ from 'lodash';\r\n\r\nfunction General(state, action) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState\r\n  }\r\n  switch (action.type) {\r\n    case \"PAGE_CHANGE\":\r\n      return {\r\n        ...state,\r\n        currentPage: action.page\r\n      }\r\n    case \"TOGGLE_HEADER\":\r\n      return {\r\n        ...state,\r\n        isHeaderOpen: !state.isHeaderOpen\r\n      }\r\n    case \"TOGGLE_DRAWER\":\r\n      return {\r\n        ...state,\r\n        isDrawerOpen: !state.isDrawerOpen\r\n      }\r\n    // case \"TOGGLE_THEME\":\r\n    //   return {\r\n    //     ...state,\r\n    //     themeType: action.theme\r\n    //   }\r\n    case \"CHANGE_THEME_PROPERTY\":\r\n      return {\r\n        ...state,\r\n        theme: {\r\n          ...state.theme,\r\n          ..._.set(state, `theme.${action.prop}`, action.value)\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default General;","import initialState from \"../.././Data/User\";\r\n\r\nfunction User(state, action) {\r\n    if (typeof state === 'undefined') {\r\n        return initialState\r\n    }\r\n    switch (action.type) {\r\n        case \"NAME_CHANGE\":\r\n            return {\r\n                ...state,\r\n                name: action.name\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default User;","/*\r\nimport slika from \".././Pictures/Uno_cards/blue_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/red_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/green_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/yellow_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/wild_color_changer.png\";\r\nimport slika from \".././Pictures/Uno_cards/wild_pick_four.png\";\r\n*/\r\n\r\n//import karte from \".././Pictures/Uno_cards\";\r\n\r\n//console.log(karte)\r\n\r\nvar Uno = [\r\n    {\r\n        ID: 1,\r\n        Src: \"\",\r\n        Color: \"blue\",\r\n        Number: 0,\r\n    },\r\n    {\r\n        ID: 2,\r\n        Src: \"\",\r\n        Color: \"green\",\r\n        Number: 1,\r\n    },\r\n    {\r\n        ID: 3,\r\n        Src: \"\",\r\n        Color: \"yellow\",\r\n        Number: 2,\r\n    },\r\n];\r\n\r\nexport default Uno;","import initialState from \"../.././Data/Uno\";\r\n\r\nfunction Uno(state, action) {\r\n    if (typeof state === 'undefined') {\r\n        return initialState;\r\n    }\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default Uno;","var ToDoLists = [\r\n    {\r\n        ID: 1,\r\n        ListName: \"Kupovina\",\r\n        Archived: false,\r\n        Todos: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Hleb\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 2\r\n            },\r\n            {\r\n                ID: 11,\r\n                Text: \"Mleko\",\r\n                Completed: true,\r\n                Notes: \"Kupio ili ne?\",\r\n                Importance: 3\r\n            },\r\n            {\r\n                ID: 12,\r\n                Text: \"Sir\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 1\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        ID: 2,\r\n        ListName: \"Muzika\",\r\n        Archived: false,\r\n        Todos: [\r\n            {\r\n                ID: 44,\r\n                Text: \"LSD-Genius\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 1\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default ToDoLists;","import initialState from '../../Data/ToDo';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction ToDoReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n\r\n        case 'NEW_TASK': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty(\"ID\") && data.hasOwnProperty(\"Task\")) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            Todos: [\r\n                                ...item.Todos, {\r\n                                    ...data.Task\r\n                                }\r\n                            ]\r\n                        }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'NEW_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DELETE_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'EDIT_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {...item};\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case \"DELETE_TASK\": {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID') && data.hasOwnProperty('Task')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            Todos: item.Todos.filter((Todo) => {\r\n                                if (Todo.ID !== data.Task.ID) {\r\n                                    return true;\r\n                                }\r\n                                return false;\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case \"EDIT_TASK\": {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty(\"ID\") && data.hasOwnProperty(\"Task\")) {\r\n                return deepFreeze(state.map((list) => {\r\n                    if (list.ID === data.ID) {\r\n                        return {\r\n                            ...list,\r\n                            Todos: list.Todos.map((task) => {\r\n                                if (task.ID === data.Task.ID) {\r\n                                    return {\r\n                                        ...task,\r\n                                        ...data.Task\r\n                                    }\r\n                                } else {\r\n                                    return task\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return list\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ToDoReducer;","var Counters = [\r\n    {\r\n        ID: 1,\r\n        Title: \"Ključevi\",\r\n        Value: 3,\r\n        Date: new Date(),\r\n        Color: \"#000000\",\r\n        Goal: 6\r\n    },\r\n    {\r\n        ID: 2,\r\n        Title: \"Izgovorenih reči\",\r\n        Value: 23,\r\n        Date: new Date(),\r\n        Color: \"#4a148c\",\r\n        Goal: 50\r\n    },\r\n    {\r\n        ID: 3,\r\n        Title: \"Krugova\",\r\n        Value: 8,\r\n        Date: new Date(),\r\n        Color: \"#ff3d00\",\r\n        Goal: 120\r\n    },\r\n];\r\n\r\nexport default Counters;","import initialState from '../../Data/Counters';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction CountersReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n        case 'NEW_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'EDIT_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {\r\n                        ...item\r\n                    };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DELETE_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'INCREASE': {\r\n            const { data } = action;\r\n\r\n            if (data === 0 || !isNaN(data)) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data) {\r\n                        return {\r\n                            ...item,\r\n                            Value: item.Value + 1\r\n                        };\r\n                    }\r\n                    return { ...item };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DECREASE': {\r\n            const { data } = action;\r\n\r\n            if (data === 0 || !isNaN(data)) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data) {\r\n                        return {\r\n                            ...item,\r\n                            Value: item.Value - 1\r\n                        };\r\n                    }\r\n                    return { ...item };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default CountersReducer;","var Notes = [\r\n    {\r\n        ID: 1,\r\n        Title: \"Faza tranzicije\",\r\n        Content: \"Fazu tranzicije osim privatizacije odlikuje tendencija opšte revitalizacije\",\r\n        Color: \"#4e342e\",\r\n        Date: new Date(),\r\n    },\r\n    {\r\n        ID: 2,\r\n        Title: \"Kampovanje\",\r\n        Content: \"1\",\r\n        Color: \"#0d47a1\",\r\n        Date: new Date(),\r\n    },\r\n    {\r\n        ID: 3,\r\n        Title: \"Vrh planine\",\r\n        Content: \"3\",\r\n        Color: \"#4a148c\",\r\n        Date: new Date(),\r\n    },\r\n]\r\n\r\nexport default Notes;","import initialState from '../../Data/Notes';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction CountersReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n\r\n        case 'NEW_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        case 'EDIT_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {\r\n                        ...item\r\n                    };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        case 'DELETE_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default CountersReducer;","const DefaultQuizes = [\r\n    {\r\n        ID: 1,\r\n        Name: \"Glavni gradovi\",\r\n        ShortDescription: \"Da li znaš koji je glavni grad koje države?\",\r\n        Color: \"#000\",\r\n        Tags: [],\r\n        Questions: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Srbija\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Abu Dabi\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Sofija\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Beograd\",\r\n                        Correct: true\r\n                    },\r\n                    {\r\n                        Text: \"Berlin\",\r\n                        Correct: false\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                ID: 2,\r\n                Text: \"Mađarska\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Vašington\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Berlin\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Tirana\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Budimpešta\",\r\n                        Correct: true\r\n                    },\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        ID: 2,\r\n        Name: \"Građa ćelije\",\r\n        ShortDescription: \"Šta je ćelija i od čega se sastoji?\",\r\n        Color: \"#0f0\",\r\n        Tags: [],\r\n        Questions: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Koju ulogu imaju mitohondrije u ćeliji?\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Prenos signala\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Deoba\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Komunikacija sa drugim ćelijama\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Ćelijsko disanje\",\r\n                        Correct: true\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n]\r\n\r\nexport default DefaultQuizes;","import initialState from \"../.././Data/Quizes\";\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction Quizes(state, action) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState\r\n  }\r\n  switch (action.type) {\r\n    case \"qqq\":\r\n      return {};\r\n    case 'DELETE_QUIZ': {\r\n      const { data } = action;\r\n\r\n      if (data && data.hasOwnProperty('ID')) {\r\n        return deepFreeze(state.filter((item) => {\r\n          if (item.ID !== data.ID) {\r\n            return true;\r\n          }\r\n          return false;\r\n        }));\r\n      }\r\n\r\n      return state;\r\n    }\r\n    case 'NEW_QUIZ': {\r\n      const { data } = action;\r\n\r\n      if (data) {\r\n          return [\r\n              ...state,\r\n              {\r\n                  ...data\r\n              }\r\n          ];\r\n      }\r\n\r\n      return state;\r\n  }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default Quizes;","import {combineReducers} from \"redux\";\r\nimport General from \"./GeneralReducer\";\r\nimport User from \"./UserReducer\";\r\nimport Uno from \"./UnoReducer\";\r\nimport Todo from \"./ToDoReducer\";\r\nimport Counters from \"./CountersReducer\";\r\nimport Notes from \"./NotesReducer\";\r\nimport Quizes from \"./QuizesReducer\";\r\n\r\nexport default combineReducers({\r\n    General,\r\n    User,\r\n    Uno,\r\n    Todo,\r\n    Counters,\r\n    Notes,\r\n    Quizes,\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n// Reducer\r\nimport reducer from \"./Reducers/index\";\r\n// redux\r\nimport { createStore } from 'redux'\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(reducer)\r\n\r\n//console.log(store.getState())\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}