{"version":3,"sources":["logo.svg","Pictures/avatar.jpg","Others/Header.js","Actions/GeneralActions/index.js","Content/HomePage/WelcomePage.js","Content/Calculator/index.js","Actions/UserActions/index.js","Content/UserPage/index.js","Content/Time/Components/StopWatch.js","Components/SnackBars/SnackSuccess.js","Content/Time/Components/Countdown.js","Content/Time/index.js","Content/Arrays/index.js","Content/Uno/Card.js","Content/Uno/index.js","Content/ToDo/Components/Lists.js","Actions/ToDoActions/index.js","Content/ToDo/Components/TaskView.js","Content/ToDo/Components/CurrentList.js","Content/ToDo/Components/ListEdit.js","Data/User.js","Content/ToDo/index.js","Components/TextEditor.js","Data/Settings/darkPickerColors.js","Actions/NotesActions/index.js","Content/Notes/NotesView.js","Actions/CountersActions/index.js","Content/Notes/index.js","Content/Counters/CounterView.js","Content/Counters/index.js","Content/String/Components/Convert.js","Content/String/Components/Decorate.js","Content/String/index.js","lib/Common/index.js","Content/Randomiser/Components/Rnd_number.js","Content/Randomiser/Components/Rnd_color.js","Content/Randomiser/Components/Coin.js","Content/Randomiser/Components/Dice.js","Content/Randomiser/index.js","Content/Quizes/QuizTile.js","Components/SnackBars/SnackError.js","Content/Quizes/Summary.js","Actions/QuizActions/index.js","Content/Quizes/EditQuiz.js","Content/Quizes/index.js","Content/Facts/index.js","Content/Games/index.js","Content/index.js","Shell/Shell.js","App.js","registerServiceWorker.js","Data/General.js","Reducers/GeneralReducer/index.js","Reducers/UserReducer/index.js","Data/Uno.js","Reducers/UnoReducer/index.js","Data/ToDo.js","Reducers/ToDoReducer/index.js","Data/Counters.js","Reducers/CountersReducer/index.js","Data/Notes.js","Reducers/NotesReducer/index.js","Data/Quizes.js","Reducers/QuizesReducer/index.js","Reducers/index.js","index.js"],"names":["module","exports","ExtendedHeader","Paper","style","width","marginTop","marginBottom","textAlign","display","elevation","className","src","logo","alt","Component","page_change","page","type","toggle_header","toggle_drawer","togge_theme","theme","change_theme_property","prop","value","MainActions","GeneralActions","useStyles","makeStyles","card","minWidth","maxWidth","marginLeft","marginRight","title","margin","bullet","transform","cardTitle","fontSize","pos","button","actions","connect","state","User","General","dispatch","bindActionCreators","props","themeType","palette","classes","useState","fact","setFact","moment","format","currentTime","setCurrentTime","useEffect","url","fetch","mode","then","response","text","data","timeInt","setInterval","clearInterval","Typography","variant","color","name","CardContent","gutterBottom","CardActions","Button","size","onClick","FormControlLabel","control","Switch","checked","onChange","switch","label","Calculator","fN","operation","sN","first","this","fNum","parseInt","sNum","setState","num","toString","paperStyle","TextField","placeholder","autoFocus","inputStyle","onInput","event","target","IconButton","iconButtons","substring","length","clearAll","operationsDiv","height","borderRadius","operationsButtons","Table","numbersDiv","TableBody","TableRow","TableCell","flatButton","addNum","disabled","Fab","actionButton","result","withStyles","backgroundColor","secondary","main","grey","primary","name_change","UserActions","UserPage","userName","primaryColor","secondaryColor","UserPaper","id","textInput","Divider","section","onChangeComplete","hex","compose","spacing","background","paper","padding","Stopwatch","updateDisplay","bind","flags","action","time","timer","initial","add","ID","Math","floor","random","Fade","in","Tooltip","aria-label","setFlag","fab","map","flag","index","chip","key","Badge","badgeContent","Chip","avatar","Avatar","renderDisplay","renderControls","renderFlags","Success","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","handleClose","SnackbarContent","classNames","success","aria-describedby","message","icon","iconVariant","close","green","error","dark","info","warning","amber","opacity","alignItems","Countdown","handleSBClose","h","m","s","snackBarSuccess","arr","i","obj","push","InputFields","select","e","handleInputChange","InputProps","startAdornment","InputAdornment","position","makeOptionsArr","option","MenuItem","subtract","handleStartPause","Time","updateNowInState","now","handleDateChange","date","console","log","unix","compare","date1","date2","Menu","Title","Icon","Current","inter","newRow","MuiPickersUtilsProvider","utils","MomentUtils","disableToolbar","KeyboardButtonProps","diff","compareTime","Content","renderContentInner","List","component","dense","item","Zoom","transitionDelay","ListItem","ListItemText","Grid","container","direction","justify","renderMenu","renderContent","minHeight","justifyContent","root","flexGrow","bottom","right","Arrays","handleChange","panel","expanded","divisedBy","n","w","isPrime","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","renderNumbers","returnEven","returnOdd","returnFibonacci","returnPrime","returnDivisible","ExpansionPanelActions","FormControl","Select","Card","Color","Number","Uno","Lists","Todos","filter","task","Completed","Tabs","current","changeCurrent","indicatorColor","textColor","scrollButtons","Todo","Tab","renderBadgeNumber","ListName","contentAlign","new_task","new_list","delete_list","delete_task","edit_task","edit_list","ToDoActions","TaskView","handleTaskEdit","onSubmit","Task","Text","Notes","Importance","preventDefault","isEditing","listID","handleModalClose","Dialog","showTaskModal","aria-labelledby","DialogTitle","DialogContent","Checkbox","InputLabel","htmlFor","Input","fullWidth","multiline","rows","DialogActions","CurrentList","handleSnackbarClose","handleUndoDelete","showCompleted","showUncompleted","showSnackbar","lastDeleted","list","currentList","tasks","findById","lowImportance","normalImportance","highImportance","role","undefined","localName","listItem","ListItemAvatar","renderItemImportance","listItemCompleted","ListItemSecondaryAction","ListSubheader","filterTasks","renderItems","ContentProps","textDecoration","arrow","paddingTop","verticalAlign","buttonDelete","ListEdit","Archived","ToDo","newList","tdl","showNewListPopup","exitPopups","UserName","showNewTaskPopup","lastDeletedList","showEditListPopup","nextCurrent","lists","cancel","toggleItem","deleteItem","listName","newTask","TransitionComponent","renderMoreListOptions","extendedIcon","TextEditor","modules","toolbar","formats","darkColors","new_note","edit_note","delete_note","NotesActions","NotesView","handleDelete","Note","Date","prevProps","isNew","newValue","changeCurrentOnAdd","note","titleInput","required","handleValueChange","colors","circleSpacing","handleCancel","editorSpace","increase","decrease","new_counter","edit_counter","delete_counter","CountersActions","EmptyNote","currentNote","getFirst","prevState","notesList","_","find","currentID","renderFabButton","renderNotesList","CounterView","Counter","Value","Goal","Counters","counterModal","exitModals","showEditModal","showNewCounterPopup","CounterToEdit","LinearProgress","progress","bar","Slide","mountOnEnter","unmountOnExit","raised","badge","leftDiv","minusButton","rightDiv","renderProgress","renderCounters","renderNewCounterModal","renderEditCounterModal","white","fontWeight","cursor","top","left","paddingRight","borderRight","paddingLeft","borderLeft","completedProgress","uncompletedProgress","Convert","input","convertorID","output","convertors","Label","toUpperCase","toLowerCase","split","reverse","join","Morse","ROT13","str","x","indexOf","letters","morseLetters","newText","j","rowsMax","convertDiv","SelectProps","MenuProps","menu","helperText","readOnly","arrowDiv","renderInputCard","renderArrowDown","renderConvertTypeCard","renderOutputCard","mixins","gutters","paddingBottom","Decorate","Decorations","DataTransfer","items","navigator","clipboard","writeText","decorationsWrapper","textToDisplay","copyButton","copyToClipboard","textField","inputProps","autoComplete","renderDecorations","maxHeight","overflowY","String","square","renderTabs","renderTabContent","rnd_num","min","max","rnd_color","RndNumber","NumberOfIntegers","Min","Max","NumberOfColumns","Highlight","NumbersToShow","generateNumbers","mainArr","content","defaultValue","handleNumberChange","textField1","textField2","showNumbers","RndColor","changeColor","showColor","propsDiv","transitionDuration","Coin","handleFlip","showCoin","CircularProgress","lineHeight","Dice","NumberOfDices","Dices","generateDices","dice","diceInner","showDices","diceSpan","Randomiser","handleMenuClick","menuCard","renderChips","flexWrap","details","flexDirection","flex","cover","controls","playIcon","editIcon","deleteIcon","withTheme","quiz","Name","slice","ShortDescription","onPlay","onDelete","Error","Summary","showSummary","handleSummaryClose","QuizName","results","r","QuestionText","isCorrect","UserAnswer","CorrectAnswer","delete_quiz","new_quiz","EditQuiz","Quiz","Tags","Questions","Answers","Correct","CurrentID","uniqueId","Q","A","CurrentQuestion","handleQuestionChange","handleAnswerChange","renderFields","QuizActions","Quizes","currentPage","toEdit","toPlay","shuffledQuestions","nextQuestion","isFinished","answerResults","showDeleteSnackbar","snackMessage","snackType","lastDeletedQuiz","handlePlay","handleDeleteQuiz","QuestionsArray","shuffle","Question","returnShuffledQuiz","QuizTile","Ans","newQuiz","renderDefaultQuizes","getNextQuestion","handleAnswer","renderPage","renderSnackBar","renderSummary","renderUndoDeleteSnackbar","demo","firstIcon","Item","window","edge","Games","RenderPage","Shell","ListItemIcon","AppBar","appBar","isDrawerOpen","appBarShift","Toolbar","disableGutters","menuButton","hide","grow","noWrap","isHeaderOpen","Profilna","Drawer","drawerPaper","drawerPaperClose","renderIcon","MenuList","renderMenuItem","React","zIndex","overflow","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","dislay","whiteSpace","overflowX","breakpoints","up","default","bigAvatar","App","createMuiTheme","ThemeProvider","getTheme","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","typography","useNextVariants","initialState","set","Src","ToDoLists","ToDoReducer","deepFreeze","hasOwnProperty","CountersReducer","isNaN","DefaultQuizes","combineReducers","store","createStore","reducer","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,07CC6B5BC,E,iLAhBP,OACI,kBAACC,EAAA,EAAD,CACIC,MATM,CACVC,MAAO,MACPC,WAAY,GACZC,aAAc,GACdC,UAAW,SACXC,QAAS,gBAKLC,UAAW,IAEX,4BAAQC,UAAU,cACd,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,wBAAIH,UAAU,aAAd,qBACA,2EACA,iF,GAlBSI,a,6GCJtB,SAASC,GAAYC,GACxB,MAAO,CACHC,KAAM,cACND,QAID,SAASE,KACZ,MAAO,CACHD,KAAM,iBAIP,SAASE,KACZ,MAAO,CACHF,KAAM,iBAIP,SAASG,GAAYC,GACxB,MAAO,CACHJ,KAAM,eACNI,SAID,SAASC,GAAsBC,EAAMC,GACxC,MAAO,CACHP,KAAM,wBACNM,OACAC,SCbR,IAAMC,GAAW,eACVC,GAGDC,GAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,IACVC,SAAU,IACVC,WAAY,OACZC,YAAa,OACb3B,aAAc,IAElB4B,MAAO,CACHC,OAAQ,GAEZC,OAAQ,CACJ5B,QAAS,eACT2B,OAAQ,QACRE,UAAW,cAEfC,UAAW,CACPC,SAAU,GACVhC,UAAW,QAEfiC,IAAK,CACDlC,aAAc,IAElBmC,OAAQ,CACJN,OAAQ,GAEZO,QAAS,CACLnC,UAAW,YA4GJoC,eAAQ,SAAAC,GAGnB,MAAO,CACHC,KAHsBD,EAAlBC,KAIJC,QAJsBF,EAAZE,UAOd,SAAAC,GACI,OAAOC,YAAmBvB,GAAasB,IAThCJ,CAxGK,SAACM,GAAW,IACpBlC,EAA2HkC,EAA3HlC,YAAaG,EAA8G+B,EAA9G/B,cAAeC,EAA+F8B,EAA/F9B,cAAeG,EAAgF2B,EAAhF3B,sBAA4D4B,EAAoBD,EAAzDH,QAAWzB,MAAS8B,QAAWlC,KAEnGmC,EAAUzB,KAHW,EAIH0B,mBAAS,IAJN,mBAIpBC,EAJoB,KAIdC,EAJc,OAKWF,mBAASG,MAASC,OAAO,wBALpC,mBAKpBC,EALoB,KAKPC,EALO,KA4B3B,OArBAC,oBAAU,WACN,IAAIC,EAAG,gCAA4BL,MAASC,OAAO,OAA5C,SACPK,MAAMD,EAAK,CACPE,KAAM,YAELC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAAAG,GACFZ,EAAQY,MAEjB,IAGHP,oBAAU,WACN,IAAIQ,EAAUC,YAAY,WACtB,OAAOV,EAAeH,MAASC,OAAO,yBACvC,KAEH,OAAO,kBAAMa,cAAcF,KAC5B,IAIC,6BACI,kBAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,YAAY/D,UAAW0C,EAAQlB,OAA9D,YACce,EAAMJ,KAAK6B,KADzB,MAGA,kBAAC,IAAD,CAAMhE,UAAW0C,EAAQvB,MACrB,kBAAC8C,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAY7D,UAAW0C,EAAQd,UAAWmC,MAAM,YAAYG,cAAY,GAAxE,eAGCtB,GAEL,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WAAQjE,EAAY,WAAlD,wBAGR,kBAAC,IAAD,CAAML,UAAW0C,EAAQvB,MACrB,kBAAC8C,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAY7D,UAAW0C,EAAQd,UAAWmC,MAAM,YAAYG,cAAY,GAAxE,gBAGClB,IAGT,kBAAC,IAAD,CAAMhD,UAAW0C,EAAQvB,MACrB,kBAAC8C,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAD,CAAYC,QAAQ,MAApB,8BAIJ,kBAACK,EAAA,EAAD,CAAanE,UAAW0C,EAAQV,SAC5B,kBAACoC,EAAA,EAAD,CAAQN,QAAQ,YAAYO,KAAK,QAAQN,MAAO,UAAW/D,UAAW0C,EAAQX,OAC1EuC,QAAS,WAAQ7D,MAEjB,uBAAGT,UAAU,kBAAb,aAHJ,aAQA,kBAACoE,EAAA,EAAD,CAAQN,QAAQ,YAAYO,KAAK,QAAQN,MAAM,YAAY/D,UAAW0C,EAAQX,OAC1EuC,QAAS,WAAQ9D,MAEjB,uBAAGR,UAAU,kBAAb,QAHJ,eAQA,kBAACoE,EAAA,EAAD,CAAQN,QAAQ,YAAYO,KAAK,QAAQrE,UAAW0C,EAAQX,OACxDuC,QAAS,WAAQjE,EAAY,cAE7B,uBAAGL,UAAU,kBAAb,4BAHJ,qBAUR,kBAAC,IAAD,CAAMA,UAAW0C,EAAQvB,MACrB,kBAAC8C,EAAA,EAAD,KACI,kBAACM,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIC,QAAuB,SAAdlC,EACTmC,SAAU,kBAAM/D,EAAsB,eAA8B,SAAd4B,EAAuB,QAAU,SACvF1B,MAAM,QACNd,UAAW0C,EAAQkC,SAG3BC,MAAM,kC,4DC1FxBC,G,YACF,WAAYvC,GAAQ,IAAD,8BACf,4CAAMA,KACDL,MAAQ,CACT6C,GAAI,GACJC,UAAW,GACXC,GAAI,GACJC,OAAO,GANI,E,sEAWf,IAAKC,KAAKjD,MAAMgD,OAASC,KAAKjD,MAAM+C,GAAI,CACpC,IAAIG,EAAOC,SAASF,KAAKjD,MAAM6C,GAAI,IAC/BO,EAAOD,SAASF,KAAKjD,MAAM+C,GAAI,IACnC,OAAQE,KAAKjD,MAAM8C,WACf,IAAK,IACDG,KAAKI,SAAS,CACVR,GAAIK,EAAOE,EACXN,UAAW,GACXC,GAAI,GACJC,OAAO,IAEX,MACJ,IAAK,IACDC,KAAKI,SAAS,CACVR,GAAIK,EAAOE,EACXN,UAAW,GACXC,GAAI,GACJC,OAAO,IAEX,MACJ,IAAK,OACDC,KAAKI,SAAS,CACVR,GAAIK,EAAOE,EACXN,UAAW,GACXC,GAAI,GACJC,OAAO,IAEX,MACJ,IAAK,OACDC,KAAKI,SAAS,CACVR,GAAIK,EAAOE,EACXN,UAAW,GACXC,GAAI,GACJC,OAAO,IAEX,MACJ,QACI,W,6BAKTM,GACCL,KAAKjD,MAAMgD,MACXC,KAAKI,SAAS,CACVR,GAAII,KAAKjD,MAAM6C,GAAGU,WAAaD,IAGnCL,KAAKI,SAAS,CACVN,GAAIE,KAAKjD,MAAM+C,GAAGQ,WAAaD,M,iCAMvCL,KAAKI,SAAS,CACVR,GAAI,GACJC,UAAW,GACXC,GAAI,GACJC,OAAO,M,+BAIL,IAAD,OACGxC,EAAYyC,KAAK5C,MAAjBG,QADH,EAG8ByC,KAAKjD,MAAjC6C,EAHF,EAGEA,GAAIG,EAHN,EAGMA,MAAOD,EAHb,EAGaA,GAAID,EAHjB,EAGiBA,UAEtB,OACI,6BACI,kBAACxF,EAAA,EAAD,CAAOQ,UAAW0C,EAAQgD,WAAY3F,UAAW,GAC7C,kBAAC4F,GAAA,EAAD,CACIC,YAAY,gBACZ9E,MAAOoE,EAAQH,EAAKE,EACpB1E,KAAK,SACLsF,WAAS,EACT/B,QAAQ,WACR9D,UAAW0C,EAAQoD,WACnBjB,MAAOK,EAAQH,EAAKA,EAAKC,EAAYC,EACrCc,QACI,SAACC,GACGd,EACI,EAAKK,SAAS,CACVR,GAAIiB,EAAMC,OAAOnF,QAGrB,EAAKyE,SAAS,CACVN,GAAIe,EAAMC,OAAOnF,WAKrC,kBAACoF,EAAA,EAAD,CAAYlG,UAAW0C,EAAQyD,YAAanC,KAAM,MAAOa,MAAM,MAAMP,QACjE,SAAC0B,GACG,IAAIZ,EAAO,GAAKL,EACZO,EAAO,GAAKL,EACZC,EACa,KAATE,GACA,EAAKG,SAAS,CACVR,GAAIK,EAAKgB,UAAU,EAAGhB,EAAKiB,OAAS,KAI/B,KAATf,GACA,EAAKC,SAAS,CACVN,GAAIK,EAAKc,UAAU,EAAGd,EAAKe,OAAS,OAMpD,uBAAGrG,UAAU,kBAAb,cAIJ,kBAACkG,EAAA,EAAD,CAAYlG,UAAW0C,EAAQyD,YAAa7B,QAAS,WAAQ,EAAKgC,aAC9D,uBAAGtG,UAAU,kBAAb,UAIJ,6BACA,kBAACR,EAAA,EAAD,CAAOO,UAAW,EAAGC,UAAW0C,EAAQ6D,eACpC,kBAACnC,EAAA,EAAD,CACI3E,MAAO,CAAE+G,OAAQ,OAAQ9G,MAAO,OAAQ+G,aAAc,QACtD5B,MAAM,IACN7E,UAAW0C,EAAQgE,kBACnBpC,QACI,SAAC0B,GACG,EAAKT,SAAS,CACVP,UAAW,IACXE,OAAO,MARvB,OAYA,kBAACd,EAAA,EAAD,CACI3E,MAAO,CAAE+G,OAAQ,OAAQ9G,MAAO,OAAQ+G,aAAc,QACtD3F,MAAO,IACP+D,MAAM,IACN7E,UAAW0C,EAAQgE,kBACnBpC,QACI,SAAC0B,GACG,EAAKT,SAAS,CACVP,UAAW,IACXE,OAAO,MATvB,OAaA,kBAACd,EAAA,EAAD,CACI3E,MAAO,CAAE+G,OAAQ,OAAQ9G,MAAO,OAAQ+G,aAAc,QACtD3F,MAAO,OACP+D,MAAM,OACN7E,UAAW0C,EAAQgE,kBACnBpC,QACI,SAAC0B,GACG,EAAKT,SAAS,CACVP,UAAW,OACXE,OAAO,MATvB,UAaA,kBAACd,EAAA,EAAD,CACI3E,MAAO,CAAE+G,OAAQ,OAAQ9G,MAAO,OAAQ+G,aAAc,QACtD3F,MAAO,OACP+D,MAAM,OACN7E,UAAW0C,EAAQgE,kBACnBpC,QACI,SAAC0B,GACG,EAAKT,SAAS,CACVP,UAAW,OACXE,OAAO,MATvB,WAcJ,kBAACyB,GAAA,EAAD,CAAO3G,UAAW0C,EAAQkE,YACtB,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQpE,UAAW0C,EAAQsE,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,QAIJ,kBAACF,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQpE,UAAW0C,EAAQsE,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,OAIJ,kBAACF,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQpE,UAAW0C,EAAQsE,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,QAKR,kBAACH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQpE,UAAW0C,EAAQsE,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,OAIJ,kBAACF,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQpE,UAAW0C,EAAQsE,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,OAIJ,kBAACF,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQpE,UAAW0C,EAAQsE,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,QAKR,kBAACH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQpE,UAAW0C,EAAQsE,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,OAIJ,kBAACF,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQpE,UAAW0C,EAAQsE,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,OAIJ,kBAACF,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQpE,UAAW0C,EAAQsE,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,QAKR,kBAACH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQpE,UAAW0C,EAAQsE,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,MACbC,UAAU,GAFb,OAIJ,kBAACH,GAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAQpE,UAAW0C,EAAQsE,WAAYnC,MAAM,IAAIP,QAAS,WACtD,EAAK2C,OAAO,KADhB,OAIJ,kBAACF,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CAAKnH,UAAW0C,EAAQ0E,aAAcrH,UAAW,EAAGuE,QAAS,WACzD,EAAK+C,WADT,e,GA3PXjH,aA0QVkH,eAtTA,SAAA3G,GAEX,MAAO,CACH+E,WAAY,CACRhG,MAAO,QACP4B,WAAY,OACZC,YAAa,OACb5B,UAAW,OAEf4G,cAAe,CACX7G,MAAO,OACP6H,gBAAiB5G,EAAM8B,QAAQ+E,UAAUC,KACzC1D,MAAO,SAEX2C,kBAAmB,CACf7E,SAAU,OACVkC,MAAO,SAEX6C,WAAY,CACRW,gBAAiB5G,EAAM8B,QAAQiF,MAGnCV,WAAY,CACRR,OAAQ,OACR9G,MAAO,OACP+G,aAAc,OACd5E,SAAU,QAEduF,aAAc,CACV9F,WAAY,GACZiG,gBAAiB5G,EAAM8B,QAAQkF,QAAQF,KACvC5F,SAAU,QAEdiE,WAAY,CACRjE,SAAU,GACVhC,UAAW,QACXH,MAAO,OAEXyG,YAAa,CACTrG,QAAS,kBA+QNwH,CAAmBxC,I,SCpU3B,SAAS8C,GAAY5D,GACxB,MAAO,CACHzD,KAAM,cACNyD,QCiBR,IAAMjD,GAAW,eACV8G,EADU,GAEV7G,GA2BD8G,G,YACF,WAAYvF,GAAQ,IAAD,0BAGPqF,GAFR,4CAAMrF,KAEuBA,MAArBqF,YAHO,OAIf,EAAKA,YAAcA,EAEnB,EAAK1F,MAAQ,CACT6F,SAAU,IAPC,E,sEAWT,IAAD,SAC2I5C,KAAK5C,MAA7IG,EADH,EACGA,QADH,IACYN,QAAWzB,MAAS8B,QAAiBD,EADjD,EAC2CjC,KAAkCyH,EAD7E,EAC4DL,QAAWF,KAAyCQ,EADhH,EAC6FT,UAAaC,KAE/G,OACI,kBAACjI,EAAA,EAAD,CAAOO,UAAW,GAAIC,UAAW0C,EAAQwF,WACrC,kBAACvC,GAAA,EAAD,CACIwC,GAAG,mBACHrE,QAAQ,WACRe,MAAM,YACN7E,UAAW0C,EAAQ0F,UACnBtH,MAAOqE,KAAK5C,MAAMJ,KAAK6B,KACvBW,SAAU,SAACqB,GACP,EAAK4B,YAAY5B,EAAMC,OAAOnF,UAGtC,kBAACuH,EAAA,EAAD,CAASvE,QAAQ,WACjB,yBAAK9D,UAAW0C,EAAQ4F,SACxB,kBAAC/D,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIC,QAAuB,SAAdlC,EACTmC,SAAU,kBAAM,EAAKpC,MAAM3B,sBAAsB,eAA8B,SAAd4B,EAAuB,QAAU,SAClG1B,MAAM,QACNd,UAAW0C,EAAQkC,SAG3BC,MAAM,8BAGV,yBAAK7E,UAAW0C,EAAQ4F,SACpB,kBAACzE,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,WAAtC,wBAGA,kBAAC,iBAAD,CACIA,MAAOiE,EACPO,iBAAkB,SAACzH,GAAD,OAAW,EAAKyB,MAAM3B,sBAAsB,uBAAwBE,EAAM0H,SAGpG,yBAAKxI,UAAW0C,EAAQ4F,SACpB,kBAACzE,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,aAAtC,0BAGA,kBAAC,gBAAD,CACIA,MAAOkE,EACPM,iBAAkB,SAACzH,GAAD,OAAW,EAAKyB,MAAM3B,sBAAsB,yBAA0BE,EAAM0H,SAGtG,kBAACH,EAAA,EAAD,CAASvE,QAAQ,WACjB,kBAACM,EAAA,EAAD,CAAQN,QAAQ,YAAYC,MAAM,YAAY/D,UAAW0C,EAAQX,QAAjE,oBAEI,uBAAG/B,UAAU,iBAAiBP,MAAO,CAAE6B,WAAY,QAAnD,wB,GA9DGlB,aAuERqI,OACXnB,YAhGW,SAAA3G,GAAK,MAAK,CACrBuH,UAAW,CACPzG,OAAQd,EAAM+H,QAAQ,GACtBhJ,MAAO,OACP2B,SAAU,IACVkG,gBAAiB5G,EAAM8B,QAAQkG,WAAWC,MAC1CtH,WAAY,OACZC,YAAa,OACbsH,QAAS,IAGbT,UAAW,CACP3G,OAAQd,EAAM+H,QAAQ,IAG1BJ,QAAS,CACL7G,OAAQd,EAAM+H,QAAQ,IAG1B3G,OAAQ,CACJN,OAAQd,EAAM+H,QAAQ,OA6E1BzG,YAAQ,SAAAC,GAGJ,MAAO,CACHC,KAHsBD,EAAlBC,KAIJC,QAJsBF,EAAZE,UAOd,SAAAC,GACI,OAAOC,YAAmBvB,GAAasB,KAXpCoG,CAabX,I,2GC5GIgB,G,YACF,WAAYvG,GAAQ,IAAD,8BACf,4CAAMA,KAEDwG,cAAgB,EAAKA,cAAcC,KAAnB,iBAErB,EAAK9G,MAAQ,CACTpC,QAAS,WACTmJ,MAAO,GACPC,OAAQ,QACRC,KAAM,MAGV,EAAKC,MAAQ,KAZE,E,oFAgBfjE,KAAKkE,Y,sCAIL,OACI,4BACKlE,KAAKjD,MAAMpC,W,sCAKP,IAAD,OACZqF,KAAKI,SAAS,CACV4D,KAAMrG,IAAOqC,KAAKjD,MAAMiH,KAAKG,IAAI,EAAG,YACrC,WACC,EAAK/D,SAAS,CACVzF,QAASgD,IAAO,EAAKZ,MAAMiH,MAAMpG,OAAO,kB,gCAOhDoC,KAAKI,SAAS,CACVzF,QAAS,WACTmJ,MAAO,GACPC,OAAQ,QACRC,KAAM,OAGVvF,cAAcuB,KAAKiE,S,gCAInBjE,KAAKI,SAAS,CACV0D,MAAM,GAAD,oBACE9D,KAAKjD,MAAM+G,OADb,CAED,CACIM,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBP,KAAMhE,KAAKjD,MAAMpC,e,uCAMf,IAAD,OACL4C,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAACiH,GAAA,EAAD,CAAMC,IAAI,GACN,6BACI,kBAACC,GAAA,EAAD,CAASrI,MAA6B,UAAtB2D,KAAKjD,MAAMgH,OAAqB,aAAe,SAC3D,kBAAChD,EAAA,EAAD,CACInC,MAAM,YACN/D,UAAW0C,EAAQX,OACnB+H,aAAW,cACXxF,QAAS,WACiB,UAAtB,EAAKpC,MAAMgH,OACL,EAAKa,UACL,EAAKV,YAGf,uBAAGrJ,UAAU,kBACc,UAAtBmF,KAAKjD,MAAMgH,OAAqB,gBAAkB,aAK/D,kBAAC/B,GAAA,EAAD,CACIrD,QAAQ,WACRC,MAAM,UACN/D,UAAW0C,EAAQsH,IACnB1F,QAAS,WACL,EAAKiB,SAAS,CACV2D,OAA8B,UAAtB,EAAKhH,MAAMgH,OAAqB,QAAU,QAClDC,KAA6B,aAAvB,EAAKjH,MAAMpC,QACXgD,IAAO,WAAY,YACnB,EAAKZ,MAAMiH,MAClB,WAC2B,UAAtB,EAAKjH,MAAMgH,OACX,EAAKE,MAAQzF,YAAY,EAAKoF,cAAe,KAE7CnF,cAAc,EAAKwF,WAI/B,uBAAGpJ,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SACzB,UAAtB4D,KAAKjD,MAAMgH,OAAqB,QAAU,cAExB,UAAtB/D,KAAKjD,MAAMgH,OAAqB,QAAU,SAG/C,kBAACW,GAAA,EAAD,CAASrI,MAAO,eACZ,kBAAC0E,EAAA,EAAD,CACInC,MAAM,YACN/D,UAAW0C,EAAQX,OACnB+H,aAAW,eAEX,uBAAG9J,UAAU,kBAAb,sB,oCAUT,IACHiJ,EAAU9D,KAAKjD,MAAf+G,MACR,IAAKA,IAAUA,EAAM5C,OAAQ,OAAO,KAF1B,IAIF3D,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,6BAEQuG,EAAMgB,IAAI,SAACC,EAAMC,GACb,OACI,yBACInK,UAAW0C,EAAQ0H,KACnBC,IAAKH,EAAKX,IAEV,kBAACe,GAAA,EAAD,CACIC,aAAcJ,EAAQ,EACtBpG,MAAM,aAEN,kBAACyG,GAAA,EAAD,CACIC,OACI,kBAACC,EAAA,EAAD,KACI,uBAAG1K,UAAU,kBAAb,SAKR8D,QAAQ,WACRe,MAAOqF,EAAKf,c,+BAa5C,OACI,6BACKhE,KAAKwF,gBACLxF,KAAKyF,iBACLzF,KAAK0F,mB,GA1KEzK,aAgLTkH,eA5LA,SAAA3G,GAAK,MAAK,CACrBqJ,IAAK,CACDzI,YAAaZ,EAAM+H,QAAQ,GAC3BpH,WAAYX,EAAM+H,QAAQ,GAC1B9I,aAAce,EAAM+H,QAAQ,IAEhC0B,KAAM,CACFtK,QAAS,QACTH,UAAWgB,EAAM+H,QAAQ,MAoLlBpB,CAAmBwB,I,8DCtK5BgC,G,iLACQ,IACEpI,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAACqI,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAMhG,KAAK5C,MAAM4I,KACjBC,iBAAkBjG,KAAK5C,MAAM6I,iBAAmBjG,KAAK5C,MAAM6I,iBAAmB,IAC9EC,QAASlG,KAAK5C,MAAM+I,aAEpB,kBAACC,GAAA,EAAD,CACIvL,UAAWwL,IAAW9I,EAAQ+I,SAC9BC,mBAAiB,kBACjBC,QACI,0BAAMxD,GAAG,kBAAkBnI,UAAW0C,EAAQiJ,SAC1C,uBAAG3L,UAAWwL,IAAW9I,EAAQkJ,KAAMlJ,EAAQmJ,YAAa,mBAA5D,wBAGC1G,KAAK5C,MAAMiB,KAAK6C,OAASlB,KAAK5C,MAAMiB,KAAO,wBAGpD0F,OAAQ,CACJ,kBAAChD,EAAA,EAAD,CACImE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACN/D,UAAW0C,EAAQoJ,MACnBxH,QAASa,KAAK5C,MAAM+I,aAEpB,uBAAGtL,UAAU,kBAAb,kB,GAjCNI,aA4CPkH,eAtEA,SAAA3G,GAAK,MAAK,CACrB8K,QAAS,CACLlE,gBAAiBwE,KAAM,MAE3BC,MAAO,CACHzE,gBAAiB5G,EAAM8B,QAAQuJ,MAAMC,MAEzCC,KAAM,CACF3E,gBAAiB5G,EAAM8B,QAAQkF,QAAQsE,MAE3CE,QAAS,CACL5E,gBAAiB6E,KAAM,MAE3BR,KAAM,CACF/J,SAAU,IAEdgK,YAAa,CACTQ,QAAS,GACT9K,YAAaZ,EAAM+H,QAAQ,IAE/BiD,QAAS,CACL7L,QAAS,OACTwM,WAAY,YAgDLhF,CAAmBwD,I,oBC5C5ByB,G,YACF,WAAYhK,GAAQ,IAAD,8BACf,4CAAMA,KAEDwG,cAAgB,EAAKA,cAAcC,KAAnB,iBACrB,EAAKwD,cAAgB,EAAKA,cAAcxD,KAAnB,iBAErB,EAAK9G,MAAQ,CACTpC,QAAS,WACToJ,OAAQ,QACRC,KAAM,CACFsD,EAAG,EACHC,EAAG,EACHC,EAAG,IAEPC,iBAAiB,GAGrB,EAAKxD,MAAQ,KAjBE,E,oFAqBfjE,KAAKkE,Y,wCAGSxE,EAAO/D,GACrBqE,KAAKI,SAAS,CACV4D,KAAK,eACEhE,KAAKjD,MAAMiH,KADd,eAECtE,EAAQ/D,Q,qCAKN+D,GACX,GAAc,MAAVA,EAAe,CAEf,IADA,IAAIgI,EAAM,GACDC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIC,EAAM,CACNjM,MAAOgM,EACPjI,MAAOiI,GAEXD,EAAIG,KAAKD,GAGb,OAAOF,EAIX,IADA,IAAIA,EAAM,GACDC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIC,EAAM,CACNjM,MAAOgM,EACPjI,MAAOiI,GAEXD,EAAIG,KAAKD,GAGb,OAAOF,I,sCAGM,IAAD,OACJnK,EAAYyC,KAAK5C,MAAjBG,QACR,MAA2B,aAAvByC,KAAKjD,MAAMpC,QAEP,yBAAKE,UAAW0C,EAAQuK,aACpB,kBAACtH,GAAA,EAAD,CACIuH,QAAM,EACNpJ,QAAQ,WACRe,MAAM,QACN/D,MAAOqE,KAAKjD,MAAMiH,KAAKsD,EACvB9H,SAAU,SAACwI,GAAD,OAAO,EAAKC,kBAAkB,IAAKD,EAAElH,OAAOnF,QACtDuM,WAAY,CACRC,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,OAGnBrI,KAAKsI,eAAe,KAAKxD,IAAI,SAAAyD,GAAM,OAChC,kBAACC,GAAA,EAAD,CAAUtD,IAAKqD,EAAO5M,MAAOA,MAAO4M,EAAO5M,OACtC4M,EAAO7I,UAIpB,kBAACc,GAAA,EAAD,CACIuH,QAAM,EACNpJ,QAAQ,WACRe,MAAM,UACN/D,MAAOqE,KAAKjD,MAAMiH,KAAKuD,EACvB/H,SAAU,SAACwI,GAAD,OAAO,EAAKC,kBAAkB,IAAKD,EAAElH,OAAOnF,QACtDuM,WAAY,CACRC,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,OAGnBrI,KAAKsI,eAAe,KAAKxD,IAAI,SAAAyD,GAAM,OAChC,kBAACC,GAAA,EAAD,CAAUtD,IAAKqD,EAAO5M,MAAOA,MAAO4M,EAAO5M,OACtC4M,EAAO7I,UAIpB,kBAACc,GAAA,EAAD,CACIuH,QAAM,EACNpJ,QAAQ,WACRe,MAAM,UACN/D,MAAOqE,KAAKjD,MAAMiH,KAAKwD,EACvBhI,SAAU,SAACwI,GAAD,OAAO,EAAKC,kBAAkB,IAAKD,EAAElH,OAAOnF,QACtDuM,WAAY,CACRC,eAAgB,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,OAGnBrI,KAAKsI,eAAe,KAAKxD,IAAI,SAAAyD,GAAM,OAChC,kBAACC,GAAA,EAAD,CAAUtD,IAAKqD,EAAO5M,MAAOA,MAAO4M,EAAO5M,OACtC4M,EAAO7I,WAQ5B,4BACK/B,IAAOqC,KAAKjD,MAAMpC,SAASiD,OAAO,e,sCAMG,aAA1CoC,KAAKjD,MAAMpC,QAAQiD,OAAO,aAC1Ba,cAAcuB,KAAKiE,OACnBjE,KAAKkE,UACLlE,KAAKI,SAAS,CACVqH,iBAAiB,KAGrBzH,KAAKI,SAAS,CACVzF,QAASqF,KAAKjD,MAAMpC,QAAQ8N,SAAS,EAAG,c,gCAMhDzI,KAAKI,SAAS,CACVzF,QAAS,WACToJ,OAAQ,QACRC,KAAM,CACFsD,EAAG,EACHC,EAAG,EACHC,EAAG,MAIX/I,cAAcuB,KAAKiE,S,yCAInB,GAA2B,aAAvBjE,KAAKjD,MAAMpC,QAAwB,CAAC,IAC5BqJ,EAAShE,KAAKjD,MAAdiH,KAKR,OAJAhE,KAAKI,SAAS,CACVzF,QAASgD,IAAO,GAAD,OAAIqG,EAAKsD,EAAT,YAActD,EAAKuD,EAAnB,YAAwBvD,EAAKwD,GAAK,mBAErDxH,KAAKiE,MAAQzF,YAAYwB,KAAK4D,cAAe,MAIjD,MAA0B,UAAtB5D,KAAKjD,MAAMgH,YACXtF,cAAcuB,KAAKiE,YAGnBjE,KAAKiE,MAAQzF,YAAYwB,KAAK4D,cAAe,Q,uCAkBnC,IAAD,OACLrG,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAACiH,GAAA,EAAD,CAAMC,IAAI,GACN,6BACI,kBAACC,GAAA,EAAD,CAASrI,MAAO,SACZ,kBAAC0E,EAAA,EAAD,CACInC,MAAM,YACN/D,UAAW0C,EAAQX,OACnB+H,aAAW,cACXxF,QAAS,WACL,EAAK+E,YAGT,uBAAGrJ,UAAU,kBACR,aAKb,kBAACmH,GAAA,EAAD,CACIrD,QAAQ,WACRC,MAAM,UACN/D,UAAW0C,EAAQsH,IACnB1F,QAAS,WACL,EAAKiB,SAAS,CACV2D,OAA8B,UAAtB,EAAKhH,MAAMgH,OAAqB,QAAU,SACnD,WACC,EAAK2E,uBAGb,uBAAG7N,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SACzB,UAAtB4D,KAAKjD,MAAMgH,OAAqB,QAAU,cAExB,UAAtB/D,KAAKjD,MAAMgH,OAAqB,QAAU,SAG/C,kBAACW,GAAA,EAAD,CAASrI,MAAO,eACZ,kBAAC0E,EAAA,EAAD,CACInC,MAAM,YACN/D,UAAW0C,EAAQX,OACnB+H,aAAW,eAEX,uBAAG9J,UAAU,kBAAb,sB,oCAUT,IACHiJ,EAAU9D,KAAKjD,MAAf+G,MACR,IAAKA,IAAUA,EAAM5C,OAAQ,OAAO,KAF1B,IAIF3D,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,6BAEQuG,EAAMgB,IAAI,SAACC,EAAMC,GACb,OACI,yBACInK,UAAW0C,EAAQ0H,KACnBC,IAAKH,EAAKX,IAEV,kBAACe,GAAA,EAAD,CACIC,aAAcJ,EAAQ,EACtBpG,MAAM,aAEN,kBAACyG,GAAA,EAAD,CACIC,OACI,kBAACC,EAAA,EAAD,KACI,uBAAG1K,UAAU,kBAAb,SAKR8D,QAAQ,WACRe,MAAOqF,EAAKf,c,sCAY5ChE,KAAKI,SAAS,CACVqH,iBAAiB,M,+BAKrB,OACI,6BACKzH,KAAKwF,gBACLxF,KAAKyF,iBACLzF,KAAK0F,cACN,kBAAC,GAAD,CACIM,KAAMhG,KAAKjD,MAAM0K,gBACjBtB,YAAanG,KAAKqH,cAClBhJ,KAAM,6B,GAnSFpD,aA0STkH,eAzTA,SAAA3G,GAAK,MAAK,CACrBqJ,IAAK,CACDzI,YAAaZ,EAAM+H,QAAQ,GAC3BpH,WAAYX,EAAM+H,QAAQ,GAC1B9I,aAAce,EAAM+H,QAAQ,IAEhC0B,KAAM,CACFtK,QAAS,QACTH,UAAWgB,EAAM+H,QAAQ,IAE7BuE,YAAa,CACTxL,OAAQ,KA8SD6F,CAAmBiF,I,8BClQ5BuB,I,mBACF,WAAYvL,GAAQ,IAAD,8BACf,4CAAMA,KAoCVwL,iBAAmB,WACf,EAAKxI,SAAS,CACVyI,IAAKlL,OAvCM,EA4CnBmL,iBAAmB,SAACC,EAAM7D,GACtB8D,QAAQC,IAAkB,IAAdF,EAAKG,OAAehE,GAChC,EAAK9E,SAAS,CACV+I,QAAQ,eACD,EAAKpM,MAAMoM,QADX,eAEFjE,EAAoB,IAAd6D,EAAKG,YA/CpB,EAAKnM,MAAQ,CACToM,QAAS,CACLC,MAAyB,IAAlBzL,IAASuL,OAChBG,MAAyB,IAAlB1L,IAASuL,QAEpBI,KAAM,CACF,CACIlF,GAAI,EACJmF,MAAO,gBACPC,KAAM,kBAEV,CACIpF,GAAI,EACJmF,MAAO,YACPC,KAAM,SAEV,CACIpF,GAAI,EACJmF,MAAO,YACPC,KAAM,cAGdC,QAAS,GAxBE,E,iIAiCfhL,cAAcuB,KAAK0J,S,oCAqBR,IAAD,OACFnM,EAAYyC,KAAK5C,MAAjBG,QADE,EAEeyC,KAAKjD,MAAMoM,QAA5BC,EAFE,EAEFA,MAAOC,EAFL,EAEKA,MAEf,OACI,kBAAC,WAAD,KACI,yBAAKxO,UAAW0C,EAAQoM,QACpB,kBAACC,GAAA,EAAD,CAAyBC,MAAOC,MAC5B,kBAAC,KAAD,CACIC,gBAAc,EACdnM,OAAO,aACPtB,OAAO,SACP0G,GAAG,qBACHtD,MAAM,aACN/D,MAAOyN,EACP5J,SAAU,SAACuJ,GAAD,OAAU,EAAKD,iBAAiBC,EAAM,UAChDiB,oBAAqB,CACjB,aAAc,eAElB1P,MAAO,CAAEK,QAAS,aAI9B,yBAAKE,UAAW0C,EAAQoM,QACpB,kBAACC,GAAA,EAAD,CAAyBC,MAAOC,MAC5B,kBAAC,KAAD,CACIC,gBAAc,EACdnM,OAAO,aACPtB,OAAO,SACP0G,GAAG,qBACHtD,MAAM,cACN/D,MAAO0N,EACP7J,SAAU,SAACuJ,GAAD,OAAU,EAAKD,iBAAiBC,EAAM,UAChDiB,oBAAqB,CACjB,aAAc,mBAK9B,yBAAKnP,UAAW0C,EAAQoM,QACpB,kBAACtP,EAAA,EAAD,CAAOO,UAAW,EAAGN,MAAO,CAAEK,QAAS,UACnC,2BAAIgD,EAAOyL,GAAOa,KAAKtM,EAAO0L,GAAQ,c,2CAStD5K,cAAcuB,KAAK0J,OADF,IAGTnM,EAAYyC,KAAK5C,MAAjBG,QAER,OAAQyC,KAAKjD,MAAM0M,SACf,KAAK,EAAG,OAAOzJ,KAAKkK,cACpB,KAAK,EAAG,OAAO,kBAAC7P,EAAA,EAAD,CAAOQ,UAAW0C,EAAQ4M,QAASvP,UAAW,IAAI,kBAAC,GAAD,OACjE,KAAK,EAAG,OAAO,kBAACP,EAAA,EAAD,CAAOQ,UAAW0C,EAAQ4M,QAASvP,UAAW,IAAI,kBAAC,GAAD,OACjE,QAAS,OAAO,kBAACP,EAAA,EAAD,CAAOQ,UAAW0C,EAAQ4M,QAASvP,UAAW,IAAI,kBAAC,GAAD,U,sCAKtE,OACIoF,KAAKoK,uB,mCAIC,IAAD,OACD7M,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAAClD,EAAA,EAAD,CAAOO,UAAW,EAAGC,UAAW0C,EAAQ+L,MACpC,kBAACe,GAAA,EAAD,CAAMC,UAAU,MAAMC,OAAK,GAEnBvK,KAAKjD,MAAMuM,KAAKxE,IAAI,SAAC0F,EAAMxF,GACvB,OACI,kBAACyF,EAAA,EAAD,CAAMhG,IAAI,EACNS,IAAKsF,EAAKpG,GACV9J,MAAO,CAAEoQ,gBAAyB,IAAR1F,IAE1B,6BACI,kBAAC2F,EAAA,EAAD,CACIJ,OAAK,EACL3N,QAAM,EACNuC,QAAS,WACL,EAAKiB,SAAS,CACVqJ,QAASe,EAAKpG,OAItB,kBAACmB,EAAA,EAAD,CAAQ1K,UAAW0C,EAAQgI,QACvB,uBAAG1K,UAAU,kBACR2P,EAAKhB,OAGd,kBAACoB,EAAA,EAAD,CAAcpI,QAASgI,EAAKjB,SAG1B,EAAKxM,MAAMuM,KAAKpI,OAAS,IAAM8D,EAC3B,kBAAC9B,EAAA,EAAD,CAASvE,QAAQ,UACjB,a,+BAa1C,OACI,6BACI,kBAACkM,GAAA,EAAD,CACIC,WAAS,EACTvH,QAAS,GACT1I,UAAW,GACXsM,WAAY,SACZ4D,UAAW,MACXC,QAAS,SACT1Q,MAAO,CAAEE,UAAW,KAEnBwF,KAAKiL,aACN,kBAACzG,GAAA,EAAD,CAAMC,IAAI,EAAMnK,MAAO,CAAEoQ,gBAAiB,MACrC1K,KAAKkL,uB,GAtLXjQ,cA8LJkH,eAvOA,SAAA3G,GAAK,MAAK,CACrB8N,KAAM,CACF/O,MAAO,OACP2B,SAAU,IACVkG,gBAAiB5G,EAAM8B,QAAQkG,WAAWC,MAC1CrH,YAAa,OACb3B,aAAc,QAElB0P,QAAS,CACL5P,MAAO,OACP2B,SAAU,IACVkG,gBAAiB5G,EAAM8B,QAAQkG,WAAWC,MAC1C0H,UAAW,IACX9J,OAAQ,OACRqC,QAAS,GACT/I,QAAS,OACTyQ,eAAgB,SAChBjE,WAAY,UAGhBkE,KAAM,CACFC,SAAU,GAGdzG,IAAK,CACDwD,SAAU,WACVkD,OAAQ/P,EAAM+H,QAAQ,GACtBiI,MAAOhQ,EAAM+H,QAAQ,GACrBnH,YAAa,QAGjBmJ,OAAQ,CACJnD,gBAAiB5G,EAAM8B,QAAQkF,QAAQF,KACvClG,YAAa,IAGjBuN,OAAQ,CACJhP,QAAS,WAkMFwH,CAAmBwG,I,4DC5CnB8C,G,YA7MX,WAAYrO,GAAQ,IAAD,8BACf,4CAAMA,KAOVsO,aAAe,SAAAC,GAAK,OAAI,SAAC9K,EAAO+K,GAC5B,EAAKxL,SAAS,CACVwL,WAAUA,GAAWD,MARzB,EAAK5O,MAAQ,CACT6O,SAAU,KACVC,UAAW,GAJA,E,0EAgBf,IADA,IAAInE,EAAM,GACDC,EAAI,EAAGA,EAAI,IAAKA,IACjBA,EAAI,IAAM,GACVD,EAAIG,KAAKF,GAGjB,OAAOD,I,kCAKP,IADA,IAAIA,EAAM,GACDC,EAAI,EAAGA,EAAI,IAAKA,IACjBA,EAAI,IAAM,GACVD,EAAIG,KAAKF,GAGjB,OAAOD,I,wCAKP,IADA,IAAIA,EAAM,CAAC,EAAG,GACLC,EAAI,EAAGA,GAAK,GAAIA,IACrBD,EAAIG,KAAKH,EAAIC,GAAKD,EAAIC,EAAI,IAE9B,OAAOD,I,8BAGHoE,GACJ,GAAU,IAANA,EACA,OAAO,EACX,GAAU,IAANA,EACA,OAAO,EACX,GAAIA,EAAI,IAAM,EACV,OAAO,EACX,GAAIA,EAAI,IAAM,EACV,OAAO,EAKX,IAHA,IAAInE,EAAI,EACJoE,EAAI,EAEDpE,EAAIA,GAAKmE,GAAG,CACf,GAAIA,EAAInE,IAAM,EACV,OAAO,EAEXA,GAAKoE,EACLA,EAAI,EAAIA,EAEZ,OAAO,I,oCAKP,IADA,IAAIrE,EAAM,GACDC,EAAI,EAAGA,EAAI,IAAKA,IACjB3H,KAAKgM,QAAQrE,IACbD,EAAIG,KAAKF,GAGjB,OAAOD,I,wCAKP,IADA,IAAIA,EAAM,GACDC,EAAI,EAAGA,GAAK,IAAKA,IAClBA,EAAI3H,KAAKjD,MAAM8O,YAAc,GAC7BnE,EAAIG,KAAKF,GAGjB,OAAOD,I,oCAGGA,GAAmB,IAAdiC,EAAa,uDAAJ,GAExB,OAAKjC,GAAQA,EAAIxG,OAGb,6BAEQwG,EAAI5C,IAAI,SAACzE,EAAK2E,GACV,OAAIA,EAAQ2E,IAAW,GAAe,IAAV3E,EAEpB,kBAAC,WAAD,CAAUE,IAAKF,GACX,8BAAO3E,EAAM,MACb,8BAIDA,EAAM,OAdD,O,+BAwB1B,IAAD,OACGuL,EAAa5L,KAAKjD,MAAlB6O,SAEFtR,EAAQ,CACVqR,MAAO,CACHpR,MAAO,MACP4B,WAAY,OACZC,YAAa,SAIrB,OACI,6BACI,kBAAC6P,GAAA,EAAD,CAAgBL,SAAuB,WAAbA,EAAuBtR,MAAOA,EAAMqR,MAAOnM,SAAUQ,KAAK0L,aAAa,WAC7F,kBAACQ,GAAA,EAAD,CAAuBC,WACnB,uBAAGtR,UAAU,kBAAb,wBADJ,kCAMA,kBAACuR,GAAA,EAAD,KACKpM,KAAKqM,cAAcrM,KAAKsM,gBAGjC,kBAACL,GAAA,EAAD,CAAgBL,SAAuB,WAAbA,EAAuBtR,MAAOA,EAAMqR,MAAOnM,SAAUQ,KAAK0L,aAAa,WAC7F,kBAACQ,GAAA,EAAD,CAAuBC,WACnB,uBAAGtR,UAAU,kBAAb,wBADJ,iCAMA,kBAACuR,GAAA,EAAD,KACKpM,KAAKqM,cAAcrM,KAAKuM,YAAa,KAG9C,kBAACN,GAAA,EAAD,CAAgBL,SAAuB,WAAbA,EAAuBtR,MAAOA,EAAMqR,MAAOnM,SAAUQ,KAAK0L,aAAa,WAC7F,kBAACQ,GAAA,EAAD,CAAuBC,WACnB,uBAAGtR,UAAU,kBAAb,wBADJ,8BAMA,kBAACuR,GAAA,EAAD,KACKpM,KAAKqM,cAAcrM,KAAKwM,qBAGjC,kBAACP,GAAA,EAAD,CAAgBL,SAAuB,WAAbA,EAAuBtR,MAAOA,EAAMqR,MAAOnM,SAAUQ,KAAK0L,aAAa,WAC7F,kBAACQ,GAAA,EAAD,CAAuBC,WACnB,uBAAGtR,UAAU,kBAAb,wBADJ,+BAMA,kBAACuR,GAAA,EAAD,KACKpM,KAAKqM,cAAcrM,KAAKyM,iBAGjC,kBAACR,GAAA,EAAD,CAAgBL,SAAuB,WAAbA,EAAuBtR,MAAOA,EAAMqR,MAAOnM,SAAUQ,KAAK0L,aAAa,WAC7F,kBAACQ,GAAA,EAAD,CAAuBC,WACnB,uBAAGtR,UAAU,kBAAb,wBADJ,wBAImD,IAAzBmF,KAAKjD,MAAM8O,UAAkB,MAAQ7L,KAAKjD,MAAM8O,WAE1E,kBAACO,GAAA,EAAD,KACKpM,KAAKqM,cAAcrM,KAAK0M,oBAE7B,kBAACxJ,EAAA,EAAD,MACA,kBAACyJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACK,iCACD,kBAACC,GAAA,EAAD,CACIlR,MAAOqE,KAAKjD,MAAM8O,UAClBrM,SAAU,SAACqB,GAAD,OAAW,EAAKT,SAAS,CAAEyL,UAAWhL,EAAMC,OAAOnF,UAE7D,kBAAC6M,GAAA,EAAD,CAAU7M,MAAO,GAAjB,KACA,kBAAC6M,GAAA,EAAD,CAAU7M,MAAO,GAAjB,KACA,kBAAC6M,GAAA,EAAD,CAAU7M,MAAO,GAAjB,KACA,kBAAC6M,GAAA,EAAD,CAAU7M,MAAO,GAAjB,KACA,kBAAC6M,GAAA,EAAD,CAAU7M,MAAO,GAAjB,KACA,kBAAC6M,GAAA,EAAD,CAAU7M,MAAO,GAAjB,KACA,kBAAC6M,GAAA,EAAD,CAAU7M,MAAO,GAAjB,KACA,kBAAC6M,GAAA,EAAD,CAAU7M,MAAO,IAAjB,MACA,kBAAC6M,GAAA,EAAD,CAAU7M,MAAO,IAAjB,MACA,kBAAC6M,GAAA,EAAD,CAAU7M,MAAO,IAAjB,e,GApMXV,aCCN6R,G,iLAZP,OACI,yBAAKxS,MAAO,CACR8H,gBAAiBpC,KAAK5C,MAAM2P,MAC5B1L,OAAQ,QACR9G,MAAO,UAEP,4BAAKyF,KAAK5C,MAAM4P,a,GARb/R,aCMbgS,G,iLAIE,OADAjE,QAAQC,IAAIjJ,KAAK5C,MAAM6P,KAEnB,6BACI,0CAEIjN,KAAK5C,MAAM6P,IAAInI,IAAI,SAAC0F,GAChB,OACI,kBAAC,GAAD,iBACQA,EADR,CAEIrL,QAAS,uB,GAZvBlE,aAwBH6B,eAAQ,SAAAC,GAGnB,MAAO,CACHkQ,IAHYlQ,EAARkQ,MAMR,SAAA/P,GACI,OAAOC,YAAmB,GAAID,IARvBJ,CASRmQ,I,oBCdDC,G,0LAEgB1C,GAQd,OAPkBA,EAAK2C,MAAMC,OAAO,SAACC,GACjC,OAAIA,EAAKC,YAMMpM,S,+BAGb,IAAD,OACG3D,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAAClD,EAAA,EAAD,CAAOQ,UAAW0C,EAAQ8N,MACtB,kBAACkC,GAAA,EAAD,CACI5R,MAAOqE,KAAK5C,MAAMoQ,QAClBhO,SAAU,SAACqB,EAAOlF,GACd,EAAKyB,MAAMqQ,cAAc9R,IAE7B+R,eAAe,UACfC,UAAU,YACVhP,QAAQ,aACRiP,cAAc,QAGV5N,KAAK5C,MAAMyQ,KAAK/I,IAAI,SAAC0F,GACjB,OACI,kBAACsD,GAAA,EAAD,CACIpO,MACI,kBAACyF,GAAA,EAAD,CACAtK,UAAW0C,EAAQmG,QACnB9E,MAAM,YACNwG,aAAc,EAAK2I,kBAAkBvD,IAChCA,EAAKwD,UAGd9I,IAAKsF,EAAKpG,GACVzI,MAAO6O,EAAKpG,a,GAzC5BnJ,aAyDLqI,OACXnB,YAzEW,SAAA3G,GAAK,MAAK,CACrB6P,KAAM,CACFC,SAAU,EACV/Q,MAAO,OACP2B,SAAU,IACVC,WAAY,OACZC,YAAa,OACb6R,aAAc,UAGlBvK,QAAS,CACLA,QAAQ,KAAD,OAAOlI,EAAM+H,QAAQ,GAArB,UA+DXzG,YAAQ,SAAAC,GAGJ,MAAO,CACH8Q,KAHa9Q,EAAT8Q,OAMR,SAAA3Q,GACI,OAAOC,YAAmB,GAAID,KAV3BoG,CAYb4J,I,oGChGK,SAASgB,GAAS5P,GACrB,MAAO,CACHlD,KAAM,WACNkD,QAID,SAAS6P,GAAS7P,GACrB,MAAO,CACHlD,KAAM,WACNkD,QAID,SAAS8P,GAAY9P,GACxB,MAAO,CACHlD,KAAM,cACNkD,QAID,SAAS+P,GAAY/P,GACxB,MAAO,CACHlD,KAAM,cACNkD,QAID,SAASgQ,GAAUhQ,GACtB,MAAO,CACHlD,KAAM,YACNkD,QAID,SAASiQ,GAAUjQ,GACtB,MAAO,CACHlD,KAAM,YACNkD,QCnBR,IAAM1C,GAAW,eACV4S,GAGDC,G,YACF,WAAYrR,GAAQ,IAAD,0BAGP8Q,GAFR,4CAAM9Q,KAEoBA,MAAlB8Q,SAHO,OAIf,EAAKA,SAAWA,EAEhB,EAAKQ,eAAiB,EAAKA,eAAe7K,KAApB,iBACtB,EAAK8K,SAAW,EAAKA,SAAS9K,KAAd,iBAEhB,EAAK9G,MAAQ,CACT6R,KAAK,aACDxK,GAAI,GACJyK,KAAM,GACNvB,WAAW,EACXwB,MAAO,GACPC,WAAY,GACT,EAAK3R,MAAMwR,OAhBP,E,yEAsBf,QAAO5O,KAAKjD,MAAM6R,KAAKxK,K,qCAGZ1E,EAAO/D,GAClBqE,KAAKI,SAAL,eACOJ,KAAKjD,MADZ,CAEI6R,KAAK,eACE5O,KAAKjD,MAAM6R,KADd,eAEClP,EAAQ/D,S,+BAKZqM,GACLA,EAAEgH,iBAEF,IAAI5K,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACrBqK,EAAO,GAEP5O,KAAKiP,aACLL,EAAI,eACG5O,KAAKjD,MAAM6R,MAElB5O,KAAK5C,MAAMkR,UAAU,CACjBlK,GAAIpE,KAAK5C,MAAM8R,OACfN,WAGJA,EAAI,eACG5O,KAAKjD,MAAM6R,KADd,CAEAxK,OAEJpE,KAAK5C,MAAM8Q,SAAS,CAChB9J,GAAIpE,KAAK5C,MAAM8R,OACfN,UAIR5O,KAAK5C,MAAM+R,qB,+BAGL,IAAD,OACGP,EAAS5O,KAAKjD,MAAd6R,KACR,OACI,kBAACQ,GAAA,EAAD,CACIpJ,KAAMhG,KAAK5C,MAAMiS,cACjBnJ,QAASlG,KAAK5C,MAAM+R,iBACpBG,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAavM,GAAG,qBAAqB,cAAgB4L,EAAKxK,IAC1D,0BAAMuK,SAAU3O,KAAK2O,UACjB,kBAACa,GAAA,EAAD,KACI,kBAACpQ,GAAA,EAAD,CACIC,QACI,kBAACoQ,GAAA,EAAD,CACIlQ,QAASqP,EAAKtB,UACd9N,SAAU,kBAAM,EAAKkP,eAAe,aAAcE,EAAKtB,YACvD3R,MAAO,MAGf+D,MACI,kBAACkN,GAAA,EAAD,KACI,kBAAC8C,GAAA,EAAD,CAAYC,QAAQ,QAApB,QACA,kBAACC,GAAA,EAAD,CACIlP,WAAS,EACTmP,WAAS,EACT7M,GAAG,OACHrH,MAAOiT,EAAKC,KACZrP,SAAU,SAACwI,GACP,EAAK0G,eAAe,OAAQ1G,EAAElH,OAAOnF,aAKzD,6BACA,iDAEI,kBAACoF,EAAA,EAAD,CACInC,MAA2B,IAApBgQ,EAAKG,WAAmB,UAAY,UAC3C5P,QACI,WACI,EAAKuP,eAAe,aAAc,IAG1C/J,aAAW,UACX,uBAAG9J,UAAU,kBAAb,iBAIJ,kBAACkG,EAAA,EAAD,CACInC,MAA2B,IAApBgQ,EAAKG,WAAmB,UAAY,UAC3C5P,QACI,WACI,EAAKuP,eAAe,aAAc,IAG1C/J,aAAW,UACX,uBAAG9J,UAAU,kBAAb,SAIJ,kBAACkG,EAAA,EAAD,CACInC,MAA2B,IAApBgQ,EAAKG,WAAmB,UAAY,UAC3C5P,QACI,WACI,EAAKuP,eAAe,aAAc,IAG1C/J,aAAW,UACX,uBAAG9J,UAAU,kBAAb,mBAaR,6BACA,kBAAC+R,GAAA,EAAD,KACI,kBAACpM,GAAA,EAAD,CACI7B,QAAQ,SACRe,MAAM,QACNmQ,WAAS,EACTC,WAAS,EACTC,KAAK,IACLpU,MAAOiT,EAAKE,MACZtP,SAAU,SAACwI,GACP,EAAK0G,eAAe,QAAS1G,EAAElH,OAAOnF,YAItD,kBAACqU,GAAA,EAAD,KACI,kBAAC/Q,EAAA,EAAD,CAAQE,QAASa,KAAK5C,MAAM+R,iBAAkBvQ,MAAM,WAApD,UAGA,kBAACK,EAAA,EAAD,CAAQ7D,KAAK,SAASwD,MAAM,WAA5B,e,GAnKD3D,aA6KR6B,eAAQ,WACnB,MAAO,IAEP,SAAAI,GACI,OAAOC,YAAmBvB,GAAasB,IAJhCJ,CAKR2R,IC9KD7S,GAAW,eACV4S,GA2DDyB,G,YACF,WAAY7S,GAAQ,IAAD,6BACf,4CAAMA,KAE4CA,MAA1CiR,EAHO,EAGPA,YAAaC,EAHN,EAGMA,UAAWJ,EAHjB,EAGiBA,SAHjB,OAIf,EAAKG,YAAcA,EACnB,EAAKC,UAAYA,EACjB,EAAKJ,SAAWA,EAEhB,EAAKS,SAAW,EAAKA,SAAS9K,KAAd,iBAChB,EAAKsL,iBAAmB,EAAKA,iBAAiBtL,KAAtB,iBACxB,EAAKqM,oBAAsB,EAAKA,oBAAoBrM,KAAzB,iBAC3B,EAAKsM,iBAAmB,EAAKA,iBAAiBtM,KAAtB,iBAExB,EAAK9G,MAAQ,CACTqT,eAAe,EACfC,iBAAiB,EACjBhB,eAAe,EACfiB,cAAc,EACd1B,KAAM,CACFG,WAAY,GAEhBwB,YAAa,IArBF,E,sEAyBVC,EAAMpM,EAAIW,GACf,IAAK,IAAI4C,EAAI,EAAGA,EAAI6I,EAAKtP,OAAQyG,IAC7B,GAAI6I,EAAK7I,GAAGvD,KAAOA,EACf,OAAKW,EAGMyL,EAAK7I,GAFL6I,EAAK7I,GAAGwF,Q,yCAS3BnN,KAAKkQ,sBACLlQ,KAAKkO,SAAS,CACV9J,GAAIpE,KAAK5C,MAAMqT,YACf7B,KAAM5O,KAAKjD,MAAMwT,gB,4CAKrBvQ,KAAKI,SAAS,CACVkQ,cAAc,M,yCAKlBtQ,KAAKI,SAAS,CACViP,eAAe,M,mCAIV3P,GACT,IAAI/D,EAAQqE,KAAKjD,MAAM2C,GACvBM,KAAKI,SAAL,eACKV,GAAS/D,M,qCAIH+D,EAAO/D,GAClBqE,KAAKI,SAAL,eACOJ,KAAKjD,MADZ,CAEI6R,KAAK,eACE5O,KAAKjD,MAAM6R,KADd,eAEClP,EAAQ/D,S,kCAKToJ,GAA8E,IAAxE2L,EAAuE,uDAA/D1Q,KAAK2Q,SAAS3Q,KAAK5C,MAAMyQ,KAAM7N,KAAK5C,MAAMqT,aAAa,GAC7E,OAAOC,EAAMtD,OAAO,SAACC,GACjB,OAAItI,GACQsI,EAAKC,UAEVD,EAAKC,c,+BAIXtF,GACLA,EAAEgH,iBACFhP,KAAKmP,mBACL,IAAM7Q,EAAO,CACT8F,GAAIpE,KAAK5C,MAAMqT,YACf7B,KAAM5O,KAAKjD,MAAM6R,MAErB5O,KAAKsO,UAAUhQ,K,2CAGEkM,GAAO,IAChBjN,EAAYyC,KAAK5C,MAAjBG,QAER,OADuBiN,EAAfuE,YAEJ,KAAK,EAAG,OAAO,kBAACxJ,EAAA,EAAD,CAAQ1K,UAAW0C,EAAQqT,eACtC,uBAAG/V,UAAU,kBAAb,iBAEJ,KAAK,EAAG,OAAO,kBAAC0K,EAAA,EAAD,CAAQ1K,UAAW0C,EAAQsT,kBACtC,uBAAGhW,UAAU,kBAAb,yBAEJ,KAAK,EAAG,OAAO,kBAAC0K,EAAA,EAAD,CAAQ1K,UAAW0C,EAAQuT,gBACtC,uBAAGjW,UAAU,kBAAb,kBAEJ,QAAS,OAAO,kBAAC0K,EAAA,EAAD,CAAQ1K,UAAW0C,EAAQsT,kBACvC,uBAAGhW,UAAU,kBAAb,4B,kCAKA2P,GAAO,IAAD,OACNjN,EAAYyC,KAAK5C,MAAjBG,QAER,OAAO,kBAACoN,EAAA,EAAD,CACHzF,IAAKsF,EAAKpG,GACV2M,UAAMC,EACNzG,OAAK,EACL3N,QAAM,EACNuC,QAAS,SAAC6I,GACoB,QAAvBA,EAAElH,OAAOmQ,WAEZ,EAAK7Q,SAAS,CACViP,eAAe,EACfT,KAAK,eACE,EAAK7R,MAAM6R,KADd,GAEGpE,MAIf3P,UAAW0C,EAAQ2T,UAEnB,kBAACC,GAAA,EAAD,KACKnR,KAAKoR,qBAAqB5G,IAE/B,kBAACiF,GAAA,EAAD,CACIlQ,QAASiL,EAAK8C,UACd9N,SAAU,WACN,IAAMlB,EAAO,CACT8F,GAAI,EAAKhH,MAAMqT,YACf7B,KAAK,eACEpE,EADH,CAEA8C,WAAY9C,EAAK8C,aAGzB,EAAKgB,UAAUhQ,MAGvB,kBAACsM,EAAA,EAAD,CACI/P,UAAW2P,EAAK8C,UAAY/P,EAAQ8T,kBAAoB9T,EAAQoQ,UAChEnL,QAASgI,EAAKqE,KAEdxM,UAAWmI,EAAKsE,MACV,uBAAGjU,UAAU,kBAAb,SACA,OAGV,kBAACyW,GAAA,EAAD,KACI,kBAACvQ,EAAA,EAAD,CACInC,MAAM,UACNO,QAAS,WACL,EAAKiB,SAAS,CACViP,eAAe,EACfT,KAAK,eACE,EAAK7R,MAAM6R,KADd,GAEGpE,OAIf,uBAAG3P,UAAU,kBAAb,SAIJ,kBAACkG,EAAA,EAAD,CACI4D,aAAW,SACXxF,QAAS,WACL,EAAKiB,SAAS,CACVkQ,cAAc,EACdC,YAAY,eACL/F,KAGX,IAAMlM,EAAO,CACT8F,GAAI,EAAKhH,MAAMqT,YACf7B,KAAMpE,GAEV,EAAK6D,YAAY/P,KAErB,uBAAGzD,UAAU,kBAAb,uB,+BAQN,IAAD,OACG0C,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAAC8M,GAAA,EAAD,CAAMxP,UAAW0C,EAAQ8N,MACrB,kBAACkG,GAAA,EAAD,CAAepS,QAAS,kBAAM,EAAKuM,aAAa,qBAC5C,kBAAC3K,EAAA,EAAD,CAAY5B,QAAS,kBAAM,EAAKuM,aAAa,qBACzC,uBAAG7Q,UAAW,kBACRmF,KAAKjD,MAAMsT,gBAA0C,oBAAxB,wBAH3C,eASIrQ,KAAKjD,MAAMsT,iBAAmBrQ,KAAKwR,aAAY,GAAM1M,IAAI,SAAC0F,GACtD,OACI,EAAKiH,YAAYjH,KAI7B,kBAAC+G,GAAA,EAAD,CAAepS,QAAS,kBAAM,EAAKuM,aAAa,mBAC5C,kBAAC3K,EAAA,EAAD,CAAY5B,QAAS,kBAAM,EAAKuM,aAAa,mBACzC,uBAAG7Q,UAAW,kBACRmF,KAAKjD,MAAMqT,cAAwC,oBAAxB,wBAHzC,aASIpQ,KAAKjD,MAAMqT,eAAiBpQ,KAAKwR,aAAY,GAAO1M,IAAI,SAAC0F,GACrD,OACI,EAAKiH,YAAYjH,KAI7B,kBAACtH,EAAA,EAAD,MAEIlD,KAAKjD,MAAMsS,cACL,kBAAC,GAAD,CACET,KAAM5O,KAAKjD,MAAM6R,KACjBS,cAAerP,KAAKjD,MAAMsS,cAC1BH,OAAQlP,KAAK5C,MAAMqT,YACnBtB,iBAAkBnP,KAAKmP,mBAEzB,KAEV,kBAACvJ,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAMhG,KAAKjD,MAAMuT,aACjBrK,iBAAkB,IAClBC,QAASlG,KAAKkQ,oBACdwB,aAAc,CACV,mBAAoB,cAExBlL,QAAS,0BAAMxD,GAAG,cAAT,gBACTe,OAAQ,CACJ,kBAAC9E,EAAA,EAAD,CAAQiG,IAAI,OAAOtG,MAAM,YAAYM,KAAK,QAAQC,QAASa,KAAKmQ,kBAAhE,QAGA,kBAACpP,EAAA,EAAD,CACImE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACN/D,UAAW0C,EAAQoJ,MACnBxH,QAASa,KAAKkQ,qBAEd,uBAAGrV,UAAU,kBAAb,kB,GA3QFI,aAwRXqI,OACXnB,YAjVW,SAAA3G,GAAK,MAAK,CACrB6P,KAAM,CACF9Q,MAAO,OACP2B,SAAU,IACVC,WAAY,OACZC,YAAa,QAGjBE,OAAQ,CACJA,OAAQd,EAAM+H,QAAQ,IAG1B8N,kBAAmB,CACfM,eAAgB,eAChB/S,MAAOpD,EAAM8B,QAAQe,KAAKmE,SAG9BoP,MAAO,CACHC,WAAY,OACZC,cAAe,UAGnBxM,OAAQ,CACJhJ,OAAQ,IAGZwU,eAAgB,CACZlS,MAAO,OACPwD,gBAAiB,WAGrByO,iBAAkB,CACdjS,MAAO,OACPwD,gBAAiB5G,EAAM8B,QAAQkF,QAAQF,MAG3CsO,cAAe,CACXhS,MAAO,OACPwD,gBAAiB,WAGrBuE,MAAO,CACHpM,MAAOiB,EAAM+H,QAAQ,GACrBlC,OAAQ7F,EAAM+H,QAAQ,IAG1BwO,aAAc,CACVnT,MAAO,OACPwD,gBAAiB5G,EAAM8B,QAAQ+E,UAAUC,MAG7CqL,UAAW,CACP/O,MAAOpD,EAAM8B,QAAQe,KAAKmE,YA8R9B1F,YAAQ,SAAAC,GAGJ,MAAO,CACH8Q,KAHa9Q,EAAT8Q,OAMR,SAAA3Q,GACI,OAAOC,YAAmBvB,GAAasB,KAVpCoG,CAYb2M,IC5WIrU,GAAW,eACV4S,GAGDwD,G,YACF,WAAY5U,GAAQ,IAAD,6BACf,4CAAMA,KAE+BA,MAA7B+Q,EAHO,EAGPA,SAAUI,EAHH,EAGGA,UAHH,OAIf,EAAKJ,SAAWA,EAChB,EAAKI,UAAYA,EAEjB,EAAK7C,aAAe,EAAKA,aAAa7H,KAAlB,iBACpB,EAAK8K,SAAW,EAAKA,SAAS9K,KAAd,iBAEhB,EAAK9G,MAAQ,CACTyT,KAAK,aACDpM,GAAI,GACJ4J,SAAU,GACViE,UAAU,EACV9E,MAAO,IACJ,EAAK/P,MAAMoT,OAhBP,E,yEAsBf,QAAOxQ,KAAKjD,MAAMyT,KAAKpM,K,mCAGd1E,EAAO/D,GAChBqE,KAAKI,SAAS,CACVoQ,KAAK,eACExQ,KAAKjD,MAAMyT,KADd,eAEC9Q,EAAQ/D,Q,+BAKZqM,GAEL,GADAA,EAAEgH,iBACEhP,KAAKiP,YACLjP,KAAKuO,UAAUvO,KAAKjD,MAAMyT,UACvB,CACH,IAAIpM,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBvE,KAAKmO,SAAL,eACOnO,KAAKjD,MAAMyT,KADlB,CAEIpM,QAIRpE,KAAK5C,MAAM+I,gB,+BAIL,IAAD,OACL,OACI,kBAACiJ,GAAA,EAAD,CACIpJ,KAAMhG,KAAK5C,MAAM4I,KACjBE,QAASlG,KAAK5C,MAAM+I,YACpBmJ,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAavM,GAAG,qBAERhD,KAAKiP,YACC,YACA,gBAGd,0BAAMN,SAAU3O,KAAK2O,UACjB,kBAACa,GAAA,EAAD,KACI,kBAAC5C,GAAA,EAAD,KACI,kBAAC8C,GAAA,EAAD,CAAYC,QAAQ,OAApB,kBACA,kBAACC,GAAA,EAAD,CACIlP,WAAS,EACTsC,GAAG,OACHrH,MAAOqE,KAAKjD,MAAMyT,KAAKxC,SACvBxO,SAAU,SAACwI,GACP,EAAK0D,aAAa,WAAY1D,EAAElH,OAAOnF,YAIvD,kBAACqU,GAAA,EAAD,KACI,kBAAC/Q,EAAA,EAAD,CAAQE,QAASa,KAAK5C,MAAM+I,YAAavH,MAAM,WAA/C,UAGA,kBAACK,EAAA,EAAD,CAAQ7D,KAAK,SAASwD,MAAM,WAA5B,e,GAlFD3D,aA4FR6B,eAAQ,WACnB,MAAO,IAEP,SAAAI,GACI,OAAOC,YAAmBvB,GAAasB,IAJhCJ,CAKRkV,IChHQhV,GAJJ,CACP6B,KAAM,OCuBJjD,GAAW,eACZ4S,GA0BC0D,G,YACJ,WAAY9U,GAAQ,IAAD,uBACjB,4CAAMA,KAuCR+U,QAAU,SAAC3B,GACT,EAAKpQ,SAAS,CACZgS,IAAI,GAAD,oBACE,EAAKrV,MAAMqV,KADb,CAED5B,IAEF6B,kBAAkB,KA3CpB,EAAKC,WAAa,EAAKA,WAAWzO,KAAhB,iBAClB,EAAKqM,oBAAsB,EAAKA,oBAAoBrM,KAAzB,iBAC3B,EAAKsM,iBAAmB,EAAKA,iBAAiBtM,KAAtB,iBALP,MAOiB,EAAKzG,MAA/BgR,EAPS,EAOTA,YAAaD,EAPJ,EAOIA,SAPJ,OAQjB,EAAKC,YAAcA,EACnB,EAAKD,SAAWA,EAEhB,EAAKpR,MAAQ,CACXqV,IAAI,aAAK,EAAKhV,MAAMyQ,MACpB0E,SAAUvV,GAAK6B,KACfoR,YAAa,EACboC,kBAAkB,EAClBG,kBAAkB,EAClBC,gBAAiB,IAjBF,E,iFAsBjBzS,KAAKI,SAAS,CACZgS,IAAI,aAAKpS,KAAK5C,MAAMyQ,U,+BAKf2C,EAAMpM,EAAIW,GACjB,IAAK,IAAI4C,EAAI,EAAGA,EAAI6I,EAAKtP,OAAQyG,IAC/B,GAAI6I,EAAK7I,GAAGvD,KAAOA,EACjB,OAAKW,EAGIyL,EAAK7I,GAFL6I,EAAK7I,GAAGwF,Q,oCAmBrB,OAAOnN,KAAK2Q,SAAS3Q,KAAK5C,MAAMyQ,KAAM7N,KAAKjD,MAAMkT,aAAa,K,oCAGjD,IAAD,OACZ,OAAOjQ,KAAK5C,MAAMyQ,KAAKT,OAAO,SAACoD,GAC7B,OAAIA,EAAKpM,KAAO,EAAKrH,MAAMkT,cAI1B,GAAG7L,K,yCAINpE,KAAKkQ,sBACLlQ,KAAKmO,SAASnO,KAAKjD,MAAM0V,mB,4CAIzBzS,KAAKI,SAAS,CACZkQ,cAAc,M,mCAKhBtQ,KAAKI,SAAS,CACZiS,kBAAkB,EAClBG,kBAAkB,EAClBE,mBAAmB,M,8CAIE,IAAD,OACdnV,EAAYyC,KAAK5C,MAAjBG,QACR,OACE,6BACE,kBAAC0B,EAAA,EAAD,CACEN,QAAQ,YACRC,MAAM,YACNM,KAAK,QACLrE,UAAW0C,EAAQX,OACnBuC,QAAS,WACP,EAAKiB,SAAS,CACZiS,kBAAkB,MAPxB,YAYA,kBAACpT,EAAA,EAAD,CACEN,QAAQ,WACRO,KAAK,SACLrE,UAAW0C,EAAQX,OACnBuC,QAAS,WACP,EAAKiB,SAAS,CACZsS,mBAAmB,MANzB,aAWA,kBAACzT,EAAA,EAAD,CACEN,QAAQ,OACRC,MAAM,UACNM,KAAK,QACLrE,UAAW0C,EAAQX,OACnBuC,QAAS,WACP,EAAKiB,SAAS,CACZkQ,cAAc,EACdL,YAAa,EAAK0C,cAClBF,gBAAgB,eACX,EAAKhC,iBAIZ,EAAKrC,YAAY,EAAKqC,iBAd1B,kB,+BAuBI,IAAD,OACClT,EAAYyC,KAAK5C,MAAjBG,QAER,OACE,yBAAK1C,UAAU,OACb,kBAAC,GAAD,CACE+X,MAAK,aAAM5S,KAAKjD,MAAMqV,KACtB5E,QAASxN,KAAKjD,MAAMkT,YACpB4C,OAAQ7S,KAAKsS,WACbH,QACE,WACE,EAAK/R,SAAS,CACZiS,kBAAkB,KAIxB5E,cACE,SAACrJ,GACC,EAAKhE,SAAS,CACZ6P,YAAa7L,OAKrB,kBAAC,GAAD,CACEqM,YAAazQ,KAAKjD,MAAMkT,YACxB6C,WAAY9S,KAAK8S,WACjBC,WAAY/S,KAAK+S,aAGjB/S,KAAKjD,MAAMyV,iBACP,kBAAC,GAAD,CACAnD,cAAerP,KAAKjD,MAAMyV,iBAC1BQ,SAAUhT,KAAKyQ,cAAczC,SAC7BkB,OAAQlP,KAAKjD,MAAMkT,YACnBd,iBAAkBnP,KAAKsS,WACvBW,QAASjT,KAAKiT,UAEd,KAGJjT,KAAKjD,MAAMsV,iBACP,kBAAC,GAAD,CACArM,KAAMhG,KAAKjD,MAAMsV,iBACjBW,SAAUhT,KAAKyQ,cAAczC,SAC7B7H,YAAanG,KAAKsS,aAElB,KAGJtS,KAAKjD,MAAM2V,kBACP,kBAAC,GAAD,CACA1M,KAAMhG,KAAKjD,MAAM2V,kBACjBlC,KAAMxQ,KAAKyQ,cACXtK,YAAanG,KAAKsS,aAElB,KAEN,kBAAC5N,GAAA,EAAD,CAASwO,oBAAqBzI,IAAMpO,MAAM,gBACxC,kBAAC2F,GAAA,EAAD,CACErD,QAAQ,WACRC,MAAM,UACN/D,UAAW0C,EAAQsH,IACnB1F,QAAS,WACP,EAAKiB,SAAS,CACZoS,kBAAkB,MAGtB,uBAAG3X,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SAApD,sBATF,aAaD4D,KAAKmT,wBACN,kBAACvN,GAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,KAAMhG,KAAKjD,MAAMuT,aACjBrK,iBAAkB,IAClBC,QAASlG,KAAKkQ,oBACdwB,aAAc,CACZ,mBAAoB,cAEtBlL,QAAS,0BAAMxD,GAAG,cAAT,gBACTe,OAAQ,CACN,kBAAC9E,EAAA,EAAD,CAAQiG,IAAI,OAAOtG,MAAM,YAAYM,KAAK,QAAQC,QAASa,KAAKmQ,kBAAhE,QAGA,kBAACpP,EAAA,EAAD,CACEmE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACN/D,UAAW0C,EAAQoJ,MACnBxH,QAASa,KAAKkQ,qBAEd,uBAAGrV,UAAU,kBAAb,kB,GArOKI,aAkPJqI,OACbnB,YA1Qa,SAAA3G,GAAK,MAAK,CACvB6P,KAAM,CACJ9Q,MAAO,OACP2B,SAAU,IACVC,WAAY,OACZC,YAAa,QAGfQ,OAAQ,CACNN,OAAQd,EAAM+H,QAAQ,IAGxB6P,aAAc,CACZhX,YAAaZ,EAAM+H,QAAQ,IAG7BsB,IAAK,CACHwD,SAAU,QACVkD,OAAQ/P,EAAM+H,QAAQ,GACtBiI,MAAOhQ,EAAM+H,QAAQ,OAwPvBzG,YAAQ,SAAAC,GAGN,MAAO,CACL8Q,KAHe9Q,EAAT8Q,OAMR,SAAA3Q,GACE,OAAOC,YAAmBvB,GAAasB,KAV9BoG,CAYb4O,I,qBC/PamB,G,YA7CX,WAAYjW,GAAQ,IAAD,8BACf,4CAAMA,KACDkW,QAAU,CACXC,QAAS,CACL,CAAC,CAAE,OAAU,CAAC,EAAG,GAAG,KACpB,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CAAC,CAAE,KAAQ,WAAa,CAAE,KAAQ,UAAY,CAAE,OAAU,MAAQ,CAAE,OAAU,OAC9E,CAAC,OAAQ,SACT,CAAC,WAIT,EAAKC,QAAU,CACX,SACA,OAAQ,SAAU,YAAa,SAAU,aACzC,OAAQ,SAAU,SAClB,OAAQ,SAEZ,EAAKzW,MAAQ,CAAEsB,KAAM,IACrB,EAAKqN,aAAe,EAAKA,aAAa7H,KAAlB,iBAnBL,E,0EAsBNlI,GACTqE,KAAKI,SAAS,CAAE/B,KAAM1C,M,+BAItB,OACI,kBAAC,KAAD,CACIA,MAAOqE,KAAK5C,MAAMzB,MAClB6D,SAAUQ,KAAK5C,MAAMsO,aACrBlQ,MAAM,OACN8X,QAAStT,KAAKsT,QACdE,QAASxT,KAAKwT,QACdlZ,MAAO,CACH+G,OAAQ,QACR5G,aAAc,OACd2H,gBAAiB,QACjBxD,MAAO,e,GAxCF3D,aCQVwY,GAXE,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WCRG,SAASC,GAASpV,GACrB,MAAO,CACHlD,KAAM,WACNkD,QAID,SAASqV,GAAUrV,GACtB,MAAO,CACHlD,KAAM,YACNkD,QAID,SAASsV,GAAYtV,GACxB,MAAO,CACHlD,KAAM,cACNkD,QCER,IAAM1C,GAAW,eACViY,GAgCDC,G,YACF,WAAY1W,GAAQ,IAAD,6BACf,4CAAMA,KAE4CA,MAA1CsW,EAHO,EAGPA,SAAUE,EAHH,EAGGA,YAAaD,EAHhB,EAGgBA,UAHhB,OAIf,EAAKD,SAAWA,EAChB,EAAKE,YAAcA,EACnB,EAAKD,UAAYA,EAEjB,EAAKjI,aAAe,EAAKA,aAAa7H,KAAlB,iBACpB,EAAK8K,SAAW,EAAKA,SAAS9K,KAAd,iBAChB,EAAKkQ,aAAe,EAAKA,aAAalQ,KAAlB,iBAEpB,EAAK9G,MAAQ,CACTiX,KAAK,aACD5P,GAAI,KACJmF,MAAO,GACPY,QAAS,GACT4C,MAAO,UACPkH,KAAM,IAAIA,MACP,EAAK7W,MAAM4W,OAnBP,E,yEAyBf,QAAOhU,KAAKjD,MAAMiX,KAAK5P,K,yCAGR8P,GACf,OAAKlU,KAAK5C,MAAM4W,MAAQE,EAAUF,KAAK5P,KAAOpE,KAAK5C,MAAM4W,KAAK5P,GACzDpE,KAAK5C,MAAM+W,MAaLnU,KAAKI,SAAS,CACjB4T,KAAK,eACEhU,KAAK5C,MAAM4W,QAdfhU,KAAKI,SAAS,CACjB4T,KAAK,aACD5P,GAAI,KACJmF,MAAO,GACPY,QAAS,GACT4C,MAAO,UACPkH,KAAM,IAAIA,MACPjU,KAAK5C,MAAM4W,QAT+C,O,mCAsBhEI,GACTpU,KAAKI,SAAS,CACV4T,KAAK,eACEhU,KAAKjD,MAAMiX,KADd,CAEA7J,QAASiK,Q,wCAKH1U,EAAO/D,GACrBqE,KAAKI,SAAS,CACV4T,KAAK,eACEhU,KAAKjD,MAAMiX,KADd,eAECtU,EAAQ/D,Q,qCAMjBqE,KAAK4T,YAAY5T,KAAKjD,MAAMiX,Q,+BAIvBhM,GAEL,GADAA,EAAEgH,iBACEhP,KAAKiP,YACLjP,KAAK2T,UAAU3T,KAAKjD,MAAMiX,UACvB,CACH,IAAI5P,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBvE,KAAK0T,SAAL,eACO1T,KAAKjD,MAAMiX,KADlB,CAEI5P,QAEJpE,KAAK5C,MAAMiX,mBAAmBjQ,M,+BAI5B,IAAD,OACG7G,EAAYyC,KAAK5C,MAAjBG,QACR,OACI,0BAAMoR,SAAU3O,KAAK2O,UACjB,kBAACtU,EAAA,EAAD,CAAOO,UAAW,GAAIC,UAAW0C,EAAQ+W,MACrC,kBAAC9T,GAAA,EAAD,CACIwC,GAAG,aACHkF,WAAY,CACRC,eACI,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACrB,kBAAC9C,EAAA,EAAD,CACIjL,MAAO,CAAE8H,gBAAiBpC,KAAKjD,MAAMiX,KAAKjH,OAC1ClS,UAAW0C,EAAQ+H,QAElBtF,KAAKjD,MAAMiX,KAAKzK,MAAM,MAKvC1O,UAAW0C,EAAQgX,WACnBC,UAAQ,EACR/T,YAAY,sBACZoP,WAAS,EACTlU,MAAOqE,KAAKjD,MAAMiX,KAAKzK,MACvB/J,SAAU,SAACwI,GACP,EAAKyM,kBAAkB,QAASzM,EAAElH,OAAOnF,UAGjD,kBAAC,GAAD,CACIA,MAAOqE,KAAKjD,MAAMiX,KAAK7J,QACvBuB,aAAc1L,KAAK0L,eAEvB,yBAAKpR,MAAO,CAAEK,QAAS,iBACnB,kBAAC,gBAAD,CACIiE,MAAOoB,KAAKjD,MAAMiX,KAAKjH,MACvBxS,MAAM,QACNma,OAAQjB,GACRkB,cAAe,EACfnV,SAAU,SAAC7D,GACP,EAAK8Y,kBAAkB,QAAS9Y,EAAM0H,SAK9CrD,KAAKiP,YACC,kBAAChQ,EAAA,EAAD,CACEL,MAAM,YACN/D,UAAW0C,EAAQ0B,OACnBE,QAASa,KAAK+T,cAHhB,UAMA,kBAAC9U,EAAA,EAAD,CACEL,MAAM,YACN/D,UAAW0C,EAAQ0B,OACnBE,QAASa,KAAK5C,MAAMwX,cAHtB,UAOV,kBAAC3V,EAAA,EAAD,CAAQpE,UAAW0C,EAAQ0B,OAAQ7D,KAAK,SAASwD,MAAM,WAAvD,c,GAnJI3D,aA4JTqI,OACXnB,YA1LW,SAAA3G,GAAK,MAAK,CACrB8Y,KAAM,CACF/Z,MAAO,OACP2B,SAAU,IACVkG,gBAAiB5G,EAAM8B,QAAQkG,WAAWC,OAG9CoR,YAAa,CACTta,MAAO,OACP2B,SAAU,IACVkG,gBAAiB5G,EAAM8B,QAAQkG,WAAWC,MAC1CpC,OAAQ,KAGZiE,OAAQ,CACJ/K,MAAO,GACP8G,OAAQ,GACRlF,WAAY,IAGhB8C,OAAQ,CACJtE,QAAS,gBAGb4Z,WAAY,MAmKZzX,YAAQ,WACJ,MAAO,IAEP,SAAAI,GACI,OAAOC,YAAmBvB,GAAasB,KANpCoG,CAQbwQ,ICxNK,SAASgB,GAASxW,GACrB,MAAO,CACHlD,KAAM,WACNkD,QAID,SAASyW,GAASzW,GACrB,MAAO,CACHlD,KAAM,WACNkD,QAID,SAAS0W,GAAY1W,GACxB,MAAO,CACHlD,KAAM,cACNkD,QAID,SAAS2W,GAAa3W,GACzB,MAAO,CACHlD,KAAM,eACNkD,QAID,SAAS4W,GAAe5W,GAC3B,MAAO,CACHlD,KAAM,iBACNkD,QCNR,IAAM1C,GAAW,eACVuZ,GAgBDC,GAAY,CACdhR,GAAI,KACJmF,MAAO,GACPY,QAAS,GACT4C,MAAO,UACPkH,KAAM,IAAIA,MAGRnF,G,YACF,WAAY1R,GAAQ,IAAD,8BACf,4CAAMA,KAEDwX,aAAe,EAAKA,aAAa/Q,KAAlB,iBACpB,EAAKwQ,mBAAqB,EAAKA,mBAAmBxQ,KAAxB,iBAE1B,EAAK9G,MAAQ,CACTsY,YAAa,EAAKC,WAClBnB,OAAO,GARI,E,gFAgBAD,EAAWqB,GAC1B,OAAIrB,EAAUpF,QAAU9O,KAAK5C,MAAM0R,MAAc,KAE5C9O,KAAK5C,MAAM0R,MAAM5N,OAMflB,KAAKI,SAAS,CACjBiV,YAAarV,KAAK5C,MAAM0R,MAAM,KANvB9O,KAAKI,SAAS,CACjBiV,YAAaD,O,iCAUS,IAAzB1N,EAAwB,uDAAlB1H,KAAK5C,MAAM0R,MACtB,OAAKpH,EAAIxG,OAEFwG,EAAI,GAFa0N,K,wCAKT,IAAD,SACapV,KAAK5C,MAAxBG,EADM,EACNA,QAASuR,EADH,EACGA,MAEjB,OAAKA,GAAUA,EAAM5N,OAGjB,kBAAC7G,EAAA,EAAD,CAAOO,UAAW,EAAGC,UAAW0C,EAAQiY,WACpC,kBAACnL,GAAA,EAAD,CAAMC,UAAU,MAAMC,OAAK,GAEnBuE,EAAMhK,IAAI,SAACwP,EAAMtP,GACb,OACI,kBAACyF,EAAA,EAAD,CAAMhG,IAAI,EACNS,IAAKoP,EAAKlQ,GACV9J,MAAO,CAAEoQ,gBAAyB,IAAR1F,IAE1B,6BACI,kBAAC2F,EAAA,EAAD,CACIJ,OAAK,EACL3N,QAAM,EACNuC,QAAS,WACL,EAAKiB,SAAS,CACViV,YAAaI,KAAEC,KAAK,EAAKtY,MAAM0R,MAAO,CAAE1K,GAAIkQ,EAAKlQ,SAIzD,kBAACmB,EAAA,EAAD,CACIjL,MAAO,CACH8H,gBAAiBkS,EAAKvH,MACtB3Q,YAAa,KAGhBkY,EAAK/K,MAAM,IAEhB,kBAACqB,EAAA,EAAD,CAAcpI,QAAS8R,EAAK/K,SAG1B,EAAKnM,MAAM0R,MAAM5N,OAAS,IAAM8D,EAC5B,kBAAC9B,EAAA,EAAD,CAASvE,QAAQ,UACjB,WAnCN,O,wCA+CrB,IAAD,OACMqB,KAAK5C,MAAjBG,QAER,OACI,kBAACmH,GAAA,EAAD,CAASwO,oBAAqBzI,IAAMpO,MAAM,gBACtC,kBAACoO,EAAA,EAAD,CAAMhG,IAAI,GACN,kBAACzC,GAAA,EAAD,CACIpD,MAAM,UACNtE,MAAO,CAAE8B,YAAa,QACtB+C,QAAS,WACL,EAAKiB,SAAS,CACV+T,OAAO,EACPkB,YAAa,CACTjR,GAAI,KACJmF,MAAO,GACPY,QAAS,GACT4C,MAAO,UACPkH,KAAM,IAAIA,UAItB,uBAAGpZ,UAAU,kBAAb,mB,qCAQhBmF,KAAKI,SAAS,CACV+T,OAAO,EACPkB,YAAarV,KAAKsV,e,yCAIPlR,GACfpE,KAAKI,SAAS,CACV+T,OAAO,M,gCAKX,OAAO,aACH/P,GAAI,KACJmF,MAAO,GACPY,QAAS,GACT4C,MAAO,UACPkH,KAAM,IAAIA,MACNjU,KAAKjD,MAAMoX,MAAQ,CAAE/P,GAAI,MAASqR,KAAEC,KAAK1V,KAAK5C,MAAM0R,MAAO,CAAE1K,GAAIpE,KAAKjD,MAAM4Y,e,+BAKpF,OACI,6BACI,kBAAC9K,GAAA,EAAD,CACIC,WAAS,EACTvH,QAAS,GACT1I,UAAW,GACXkQ,UAAU,MACVC,QAAQ,SACR7D,WAAW,SACX7M,MAAO,CAAEE,UAAW,KAEnBwF,KAAK4V,kBACL5V,KAAK6V,kBACN,kBAACpL,EAAA,EAAD,CAAMhG,IAAI,EAAMnK,MAAO,CAAEoQ,gBAAiB,MACtC,kBAAC,GAAD,CACIsJ,KAAMhU,KAAKjD,MAAMsY,YACjBT,aAAc5U,KAAK4U,aACnBT,MAAOnU,KAAKjD,MAAMoX,MAClBE,mBAAoBrU,KAAKqU,4B,GA/JjCpZ,aAwKLqI,OACXnB,YA9LW,SAAA3G,GAAK,MAAK,CACrBga,UAAW,CACPjb,MAAO,OACP2B,SAAU,IACVkG,gBAAiB5G,EAAM8B,QAAQkG,WAAWC,MAC1CrH,YAAa,OACb3B,aAAc,QAElB4Q,KAAM,CACFC,SAAU,MAsLdxO,YAAQ,SAAAC,GAGJ,MAAO,CACH+R,MAHc/R,EAAV+R,QAMR,SAAA5R,GACI,OAAOC,YAAmBvB,GAAasB,KAVpCoG,CAYbwL,I,oBChNIlT,GAAW,eACVuZ,GAGDW,G,YACF,WAAY1Y,GAAQ,IAAD,6BACf,4CAAMA,KAEqDA,MAAnD4X,EAHO,EAGPA,YAAaE,EAHN,EAGMA,eAAgBD,EAHtB,EAGsBA,aAHtB,OAIf,EAAKD,YAAcA,EACnB,EAAKE,eAAiBA,EACtB,EAAKD,aAAeA,EAEpB,EAAKvJ,aAAe,EAAKA,aAAa7H,KAAlB,iBACpB,EAAK8K,SAAW,EAAKA,SAAS9K,KAAd,iBAChB,EAAKkQ,aAAe,EAAKA,aAAalQ,KAAlB,iBAEpB,EAAK9G,MAAQ,CACTgZ,QAAQ,aACJ3R,GAAI,KACJmF,MAAO,GACPyM,MAAO,EACP/B,KAAM,IAAIA,KACVlH,MAAO,UACPkJ,KAAM,GACH,EAAK7Y,MAAM2Y,UApBP,E,yEA0Bf,QAAO/V,KAAKjD,MAAMgZ,QAAQ3R,K,mCAGjB1E,EAAO/D,GAChBqE,KAAKI,SAAS,CACV2V,QAAQ,eACD/V,KAAKjD,MAAMgZ,QADX,eAEFrW,EAAQ/D,Q,qCAMjBqE,KAAK5C,MAAM+I,cACXnG,KAAKkV,eAAelV,KAAKjD,MAAMgZ,W,+BAG1B/N,GAEL,GADAA,EAAEgH,iBACEhP,KAAKiP,YACLjP,KAAKiV,aAAajV,KAAKjD,MAAMgZ,aAC1B,CACH,IAAI3R,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBvE,KAAKgV,YAAL,eACOhV,KAAKjD,MAAMgZ,QADlB,CAEI3R,QAIRpE,KAAK5C,MAAM+I,gB,+BAGL,IAAD,OACL,OACI,kBAACiJ,GAAA,EAAD,CACIpJ,KAAMhG,KAAK5C,MAAM4I,KACjBE,QAASlG,KAAK5C,MAAM+I,YACpBmJ,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAavM,GAAG,qBAERhD,KAAKiP,YACC,eACA,kBAGNjP,KAAKiP,aACF,kBAACvK,GAAA,EAAD,CAASwO,oBAAqBzI,IAAMpO,MAAM,kBACzC,kBAAC0E,EAAA,EAAD,CACImE,IAAI,SACJP,aAAW,SACX/F,MAAM,UACNO,QAASa,KAAK+T,cAEd,uBAAGlZ,UAAU,kBAAb,qBAKhB,0BAAM8T,SAAU3O,KAAK2O,UACjB,kBAACa,GAAA,EAAD,KACI,kBAAC5C,GAAA,EAAD,KACI,kBAACpM,GAAA,EAAD,CACIgU,UAAQ,EACR9T,WAAS,EACThB,MAAM,oBACNsD,GAAG,OACHrH,MAAOqE,KAAKjD,MAAMgZ,QAAQxM,MAC1B/J,SAAU,SAACwI,GACP,EAAK0D,aAAa,QAAS1D,EAAElH,OAAOnF,WAGhD,6BACA,kBAACiR,GAAA,EAAD,KACI,kBAAC8C,GAAA,EAAD,CAAYC,QAAQ,OAEZ3P,KAAKiP,YACC,QACA,kBAGd,kBAACW,GAAA,EAAD,CACIlP,WAAS,EACTsC,GAAG,OACHrH,MAAOqE,KAAKjD,MAAMgZ,QAAQC,MAC1BxW,SAAU,SAACwI,GACP,EAAK0D,aAAa,QAASxL,SAAS8H,EAAElH,OAAOnF,MAAO,SAGhE,6BACA,kBAACiR,GAAA,EAAD,KACI,kBAAC8C,GAAA,EAAD,CAAYC,QAAQ,OAApB,gBACA,kBAACC,GAAA,EAAD,CACIlP,WAAS,EACTsC,GAAG,OACHrH,MAAOqE,KAAKjD,MAAMgZ,QAAQE,KAC1BzW,SAAU,SAACwI,GACP,EAAK0D,aAAa,OAAQxL,SAAS8H,EAAElH,OAAOnF,MAAO,SAG/D,6BACA,6BACA,kBAACiR,GAAA,EAAD,KACI,kBAAC,gBAAD,CACIhO,MAAOoB,KAAKjD,MAAMgZ,QAAQhJ,MAC1BxS,MAAM,QACNma,OAAQjB,GACRkB,cAAe,GACfnV,SAAU,SAAC7D,GACP,EAAK+P,aAAa,QAAS/P,EAAM0H,UAKjD,kBAAC2M,GAAA,EAAD,KACI,kBAAC/Q,EAAA,EAAD,CAAQE,QAASa,KAAK5C,MAAM+I,YAAavH,MAAM,aAA/C,UAGA,kBAACK,EAAA,EAAD,CAAQ7D,KAAK,SAASwD,MAAM,WAA5B,e,GAjJE3D,aA2JX6B,eAAQ,WACnB,MAAO,IAEP,SAAAI,GACI,OAAOC,YAAmBvB,GAAasB,IAJhCJ,CAKRgZ,ICnKDla,GAAW,eACVuZ,GA8FDe,G,YACF,WAAY9Y,GAAQ,IAAD,uBACf,4CAAMA,KACD+Y,aAAe,EAAKA,aAAatS,KAAlB,iBACpB,EAAKuS,WAAa,EAAKA,WAAWvS,KAAhB,iBAHH,MAKgB,EAAKzG,MAA5B0X,EALO,EAKPA,SAAUC,EALH,EAKGA,SALH,OAMf,EAAKD,SAAWA,EAChB,EAAKC,SAAWA,EAEhB,EAAKhY,MAAQ,CACTsZ,eAAe,EACfC,qBAAqB,EACrBC,cAAe,IAZJ,E,0EAgBNR,GACT/V,KAAKI,SAAS,CACViW,eAAe,EACfE,cAAc,eAAMR,O,mCAKxB/V,KAAKI,SAAS,CACViW,eAAe,EACfC,qBAAqB,M,qCAIdP,GACX,IAAKA,EAAQE,KAAM,OAAO,KADN,IAGZ1Y,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAACiZ,GAAA,EAAD,CACI5X,MAC+B,MAA3BoB,KAAKyW,SAASV,GACR,UACA,YAEVpX,QAAQ,cACRhD,MAAOqE,KAAKyW,SAASV,GACrBlb,UAAW0C,EAAQmZ,Q,+BAKtBX,GACL,OAAIA,EAAQC,OAASD,EAAQE,KAAa,IAEjC,IAAMF,EAAQC,MAASD,EAAQE,O,uCAG1B,IAAD,OACb,IAAKjW,KAAK5C,MAAM8Y,WAAalW,KAAK5C,MAAM8Y,SAAShV,OAAQ,OAAO,KADnD,IAGL3D,EAAYyC,KAAK5C,MAAjBG,QAER,OAAOyC,KAAK5C,MAAM8Y,SAASpR,IAAI,SAACiR,EAAS/Q,GACrC,OACI,kBAAC2R,GAAA,EAAD,CACI5L,UAAU,KACVtG,IAAI,EACJS,IAAK6Q,EAAQ3R,GACb9J,MAAO,CAACoQ,gBAAiB,IAAI1F,GAC7B4R,cAAY,EACZC,eAAa,GAEb,kBAAC,IAAD,CACIhc,UAAW0C,EAAQvB,KACnB8a,QAAM,EACNxc,MAAO,CAAE8H,gBAAiB2T,EAAQhJ,QAElC,kBAACjO,EAAA,EAAD,CACIjE,UAAW0C,EAAQuB,YACnBK,QAAS,kBAAM,EAAKgX,aAAaJ,KAEjC,kBAAC5Q,GAAA,EAAD,CACIC,aAAc2Q,EAAQC,MACtBpX,MAAM,YACNrB,QAAS,CAAEwZ,MAAOxZ,EAAQwZ,QAE1B,kBAACrY,EAAA,EAAD,CAAY7D,UAAW0C,EAAQlB,OAC1B0Z,EAAQxM,SAIrB,yBAAK1O,UAAW0C,EAAQyZ,SACpB,kBAACjW,EAAA,EAAD,CACImE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACN/D,UAAW0C,EAAQ0Z,YACnB9X,QAAS,WAAQ,EAAK4V,SAASgB,EAAQ3R,MAEvC,uBAAGvJ,UAAU,kBAAb,2BAGR,yBAAKA,UAAW0C,EAAQ2Z,UACpB,kBAACnW,EAAA,EAAD,CACImE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACNO,QAAS,WAAQ,EAAK2V,SAASiB,EAAQ3R,MAEvC,uBAAGvJ,UAAU,kBAAb,wBAGP,EAAKsc,eAAepB,S,wCAOtB,IAAD,OACNxY,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAACmH,GAAA,EAAD,CAASwO,oBAAqBzI,IAAMpO,MAAM,mBACtC,kBAAC2F,GAAA,EAAD,CACIrD,QAAQ,WACRC,MAAM,UACN/D,UAAW0C,EAAQsH,IACnB1F,QAAS,WACL,EAAKiB,SAAS,CACVkW,qBAAqB,MAG7B,uBAAGzb,UAAU,iBAAiBP,MAAO,CAAC8B,YAAa,SAAnD,cATJ,kB,8CAiBR,OAAO4D,KAAKjD,MAAMuZ,qBAAuB,kBAAC,GAAD,CACrCtQ,KAAMhG,KAAKjD,MAAMuZ,oBACjBnQ,YAAanG,KAAKoW,e,+CAKtB,OAAOpW,KAAKjD,MAAMsZ,eAAiB,kBAAC,GAAD,CAC/BrQ,KAAMhG,KAAKjD,MAAMsZ,cACjBN,QAAS/V,KAAKjD,MAAMwZ,cACpBpQ,YAAanG,KAAKoW,e,+BAKtB,OACI,6BACKpW,KAAKoX,iBACLpX,KAAK4V,kBACL5V,KAAKqX,wBACLrX,KAAKsX,8B,GAhKCrc,aAsKRqI,OACXnB,YAlQW,SAAA3G,GAAK,MAAK,CACrBQ,KAAM,CACFzB,MAAO,OACP2B,SAAU,IACVC,WAAY,OACZC,YAAa,OACb3B,aAAc,OACd6G,aAAc,QACd+G,SAAU,WACVzJ,MAAO,WAGXhC,OAAQ,CACJN,OAAQd,EAAM+H,QAAQ,IAG1B6P,aAAc,CACVhX,YAAaZ,EAAM+H,QAAQ,IAG/BsB,IAAK,CACDwD,SAAU,QACVkD,OAAQ/P,EAAM+H,QAAQ,GACtBiI,MAAOhQ,EAAM+H,QAAQ,IAGzBgU,MAAO,CACH3Y,MAAO,QAGXE,YAAa,CACTnE,QAAS,gBAGb0B,MAAO,CACHuC,MAAO,OACP4Y,WAAY,OACZ7c,QAAS,eACTyB,YAAa,MACbqb,OAAQ,WAGZV,MAAO,CACHW,KAAM,EACNlM,OAAQ,GACRiM,OAAQ,WAGZT,QAAS,CACLrc,QAAS,eACT0N,SAAU,WACVsP,KAAM,IACND,IAAK,IACLnM,OAAQ,IACRjP,OAAQ,MACRsb,aAAc,MACdC,YAAa,qBACb/F,cAAe,UAGnBoF,SAAU,CACNvc,QAAS,eACT0N,SAAU,WACVmD,MAAO,IACPkM,IAAK,IACLnM,OAAQ,IACRjP,OAAQ,MACRwb,YAAa,MACbC,WAAY,kBAGhBd,YAAa,CACT3a,OAAQ,OAGZoa,IAAK,CACDrO,SAAU,WACVkD,OAAQ,IACRC,MAAO,IACPmM,KAAM,KAGVK,kBAAmB,CACf5V,gBAAiB,WAGrB6V,oBAAqB,CACjB7V,gBAAiB,cA4KrBtF,YAAQ,SAAAC,GAGJ,MAAO,CACHmZ,SAHiBnZ,EAAbmZ,WAMR,SAAAhZ,GACI,OAAOC,YAAmBvB,GAAasB,KAVpCoG,CAYb4S,IC5PIgC,G,YACF,WAAY9a,GAAQ,IAAD,8BACf,4CAAMA,KAEDsO,aAAe,EAAKA,aAAa7H,KAAlB,iBAEpB,EAAK9G,MAAQ,CACTob,MAAO,GACPC,YAAa,EACbC,OAAQ,GACRC,WAAY,CACR,CACIlU,GAAI,EACJmU,MAAO,aAEX,CACInU,GAAI,EACJmU,MAAO,aAEX,CACInU,GAAI,EACJmU,MAAO,WAEX,CACInU,GAAI,EACJmU,MAAO,cAEX,CACInU,GAAI,EACJmU,MAAO,WA5BJ,E,0EAkCN1X,EAAOhC,GAAO,IAAD,OACtBmB,KAAKI,SAAL,eACKvB,EAAOgC,EAAMC,OAAOnF,OACtB,WACC,EAAKyE,SAAS,CACViY,OAAQ,EAAKH,gB,gCAKd,IACCC,EAAUnY,KAAKjD,MAAfob,MAER,OAAQnY,KAAKjD,MAAMqb,aACf,KAAK,EAAG,OAAOD,EAAMK,cACrB,KAAK,EAAG,OAAOL,EAAMM,cACrB,KAAK,EAAG,OAAON,EAAMO,MAAM,IAAIC,UAAUC,KAAK,IAC9C,KAAK,EAAG,OAAO5Y,KAAK6Y,MAAMV,GAC1B,KAAK,EAAG,OAAOnY,KAAK8Y,MAAMX,GAC1B,QAAS,MAAO,M,4BAIlBY,GACF,IAEI/T,EAAQ,SAAAgU,GAAC,MAFD,uDAEWC,QAAQD,IAE/B,OAAOD,EAAIL,MAAM,IAAI5T,IADL,SAAAkU,GAAC,OAAIhU,EAAMgU,IAAM,EAFpB,uDAE+BhU,EAAMgU,IAAMA,IACpBJ,KAAK,M,4BAGvCT,GAMF,IALA,IAAIe,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/LC,EAAe,CAAC,mBAAoB,QAAS,YAAa,cAAe,UAAW,IAAK,YAAa,YAAa,UAAW,MAAO,gBAAiB,YAAa,YAAa,UAAW,QAAS,cAAe,cAAe,gBAAiB,UAAW,QAAS,IAAK,UAAW,YAAa,YAAa,cAAe,gBAAiB,cAAe,oBAAqB,kBAAmB,gBAAiB,cAAe,YAAa,cAAe,gBAAiB,kBAAmB,oBAAqB,uBAE7fC,EAAU,GAELzR,EAAI,EAAGA,EAAIwQ,EAAMjX,OAAQyG,IAC9B,IAAK,IAAI0R,EAAI,EAAGA,EAAI,GAAIA,IACpB,GAAIlB,EAAMxQ,GAAG8Q,gBAAkBS,EAAQG,GAAI,CACvCD,GAAWD,EAAaE,GACxBD,GAAW,eACX,MAKZ,OAAOA,I,wCAGQ,IAAD,OACN7b,EAAYyC,KAAK5C,MAAjBG,QAER,OAAO,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQ8N,KAAMzQ,UAAW,IAC7C,kBAAC4F,GAAA,EAAD,CACIwC,GAAG,qBACHtD,MAAM,QACNoQ,WAAS,EACTD,WAAS,EACTE,KAAK,IACLuJ,QAAQ,IACR3d,MAAOqE,KAAKjD,MAAMob,MAClB3Y,SAAU,SAACwI,GAAD,OAAO,EAAK0D,aAAa1D,EAAG,UACtC1L,OAAO,c,8CAKM,IAAD,OACZiB,EAAYyC,KAAK5C,MAAjBG,QAER,OAAO,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQgc,WAAY3e,UAAW,GACnD,kBAAC4F,GAAA,EAAD,CACIwC,GAAG,mBACH+E,QAAM,EACNpM,MAAOqE,KAAKjD,MAAMqb,YAClB5Y,SAAU,SAACwI,GAAD,OAAO,EAAK0D,aAAa1D,EAAG,gBACtCwR,YAAa,CACTC,UAAW,CACP5e,UAAW0C,EAAQmc,OAG3BC,WAAW,wBACXrd,OAAO,UAEN0D,KAAKjD,MAAMub,WAAWxT,IAAI,SAAAyD,GAAM,OAC7B,kBAACC,GAAA,EAAD,CAAUtD,IAAKqD,EAAOnE,GAAIzI,MAAO4M,EAAOnE,IACnCmE,EAAOgQ,a,yCAOR,IACRhb,EAAYyC,KAAK5C,MAAjBG,QAER,OAAO,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQ8N,KAAMzQ,UAAW,IAC7C,kBAAC4F,GAAA,EAAD,CACIwC,GAAG,qBACHtD,MAAM,SACNoQ,WAAS,EACTD,WAAS,EACTE,KAAK,IACLuJ,QAAQ,IACR3d,MAAOqE,KAAKjD,MAAMsb,OAClB/b,OAAO,SACP4L,WAAY,CACR0R,UAAU,Q,wCAMP,IACPrc,EAAYyC,KAAK5C,MAAjBG,QAER,OAAO,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQsc,SAAUjf,UAAW,GACjD,uBAAGC,UAAU,kBAAb,0B,+BAOJ,OACI,6BACKmF,KAAK8Z,kBACL9Z,KAAK+Z,kBACL/Z,KAAKga,wBACLha,KAAK+Z,kBACL/Z,KAAKia,wB,GAtKAhf,aA4KPkH,eAjNA,SAAA3G,GAAK,MAAK,CACrB6P,KAAK,eACE7P,EAAM0e,OAAOC,UADhB,CAEAtI,WAAYrW,EAAM+H,QAAQ,GAC1B6W,cAAe5e,EAAM+H,QAAQ,GAC7BhJ,MAAO,IACP4B,WAAY,OACZC,YAAa,OACbiM,SAAU,aAGdkR,WAAY,CACR1H,WAAYrW,EAAM+H,QAAQ,GAC1B6W,cAAe5e,EAAM+H,QAAQ,GAC7BhJ,MAAO,IACP4B,WAAY,OACZC,YAAa,OACbiM,SAAU,WACV5N,aAAc,GACdD,UAAW,IAGfqf,SAAU,CACNzX,gBAAiB,cACjB7H,MAAO,OACP4B,WAAY,OACZC,YAAa,OACbiM,SAAU,WACV5N,aAAc,GACdD,UAAW,IAGfkf,KAAM,CACFnf,MAAO,OAgLA4H,CAAmB+V,IC/K5BmC,G,YACF,WAAYjd,GAAQ,IAAD,8BACf,4CAAMA,KAEDsO,aAAe,EAAKA,aAAa7H,KAAlB,iBACpB,EAAKwD,cAAgB,EAAKA,cAAcxD,KAAnB,iBAErB,EAAK9G,MAAQ,CACTsB,KAAM,GACNoJ,iBAAiB,GAGrB,EAAK6S,YAAc,CACf,CACI3C,KAAM,qDACNnM,MAAO,sDAEX,CACImM,KAAM,2BACNnM,MAAO,4BAEX,CACImM,KAAM,UACNnM,MAAO,WAEX,CACImM,KAAM,yCACNnM,MAAO,0CAEX,CACImM,KAAM,qDACNnM,MAAO,sDAEX,CACImM,KAAM,kEACNnM,MAAO,oEAEX,CACImM,KAAM,mCACNnM,MAAO,oCAEX,CACImM,KAAM,6BACNnM,MAAO,8BAEX,CACImM,KAAM,mCACNnM,MAAO,oCAEX,CACImM,KAAM,iBACNnM,MAAO,mBAlDA,E,0EAuDN3K,EAAOhC,GAChBmB,KAAKI,SAAL,eACKvB,EAAOgC,EAAMC,OAAOnF,U,sCAIb0C,IACD,IAAIkc,cACVC,MAAMrW,IAAI,aAAc9F,GAC7Boc,UAAUC,UAAUC,UAAUtc,GAC9B2B,KAAKI,SAAS,CACVqH,iBAAiB,M,0CAIJ,IAAD,OACRlK,EAAYyC,KAAK5C,MAAjBG,QAER,OAAO,yBAAK1C,UAAW0C,EAAQqd,oBAEvB5a,KAAKsa,YAAYxV,IAAI,SAAC0F,EAAMxF,GACxB,IAAI6V,EAAa,UAAMrQ,EAAKmN,KAAX,YAAmB,EAAK5a,MAAMsB,KAA9B,YAAsCmM,EAAKgB,OAC5D,OAAO,kBAAC,IAAD,CAAM3Q,UAAW0C,EAAQ8N,KAAMzQ,UAAW,EAAGsK,IAAKF,GACrD,kBAACtG,EAAA,EAAD,CAAY4L,UAAU,IAAIzP,UAAW0C,EAAQc,MAErCwc,GAGR,yBAAKhgB,UAAW0C,EAAQud,YACpB,kBAACpW,GAAA,EAAD,CAASwO,oBAAqBzI,IAAMpO,MAAM,qBACtC,kBAAC0E,EAAA,EAAD,CAAYnC,MAAM,YAAY+F,aAAW,OAAOxF,QAAS,WACrD,EAAK4b,gBAAgBF,KAGjB,uBAAGhgB,UAAU,kBAAb,iB,sCAchCmF,KAAKI,SAAS,CACVqH,iBAAiB,M,+BAIf,IAAD,OACGlK,EAAYyC,KAAK5C,MAAjBG,QACR,OACI,6BACI,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQ8N,KAAMzQ,UAAW,IACtC,kBAAC8D,EAAA,EAAD,CAAY4L,UAAU,KAAtB,wEAGA,kBAAC9J,GAAA,EAAD,CACIwC,GAAG,OACHtD,MAAM,OACN7E,UAAW0C,EAAQyd,UACnBrf,MAAOqE,KAAKjD,MAAMsB,KAClBmB,SAAU,SAACwI,GAAD,OAAO,EAAK0D,aAAa1D,EAAG,SACtC1L,OAAO,SACP2e,WAAY,CACRC,aAAc,UAIzBlb,KAAKmb,oBACN,kBAAC,GAAD,CACInV,KAAMhG,KAAKjD,MAAM0K,gBACjBtB,YAAanG,KAAKqH,cAClBhJ,KAAK,8B,GArIFpD,aA4IRkH,eAzKA,SAAA3G,GAAK,MAAK,CACrB6P,KAAK,eACE7P,EAAM0e,OAAOC,UADhB,CAEAtI,WAAYrW,EAAM+H,QAAQ,GAC1B6W,cAAe5e,EAAM+H,QAAQ,GAC7BhJ,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,GACd4N,SAAU,aAEdyS,WAAY,CACRngB,QAAS,eACTmd,YAAa,MACbzP,SAAU,WACVmD,MAAO,IACPkM,IAAK,IACLnM,OAAQ,IACRuG,cAAe,QAEnBzT,KAAM,CACF1D,QAAS,gBAEbigB,mBAAoB,CAChBQ,UAAW,MACXC,UAAW,UAgJJlZ,CAAmBkY,ICtGnBiB,G,YApEX,WAAYle,GAAQ,IAAD,8BACf,4CAAMA,KAEDsO,aAAe,EAAKA,aAAa7H,KAAlB,iBAEpB,EAAK9G,MAAQ,CACTyQ,QAAS,GANE,E,0EAUNxF,EAAGrM,GACZqE,KAAKI,SAAS,CACVoN,QAAS7R,M,mCAKb,OACI,kBAACtB,EAAA,EAAD,CAAOkhB,QAAM,EAACjhB,MAAO,CAAEC,MAAO,IAAK4B,WAAY,OAAQC,YAAa,OAAQ3B,aAAa,SACrF,kBAAC8S,GAAA,EAAD,CACI5R,MAAOqE,KAAKjD,MAAMyQ,QAClBhO,SAAUQ,KAAK0L,aACf/M,QAAQ,YACR+O,eAAe,YACfC,UAAU,aAEV,kBAACG,GAAA,EAAD,CACIrH,KACI,uBAAG5L,UAAU,kBAAb,aAEJ6E,MAAM,YAEV,kBAACoO,GAAA,EAAD,CACIrH,KACI,uBAAG5L,UAAU,kBAAb,eAEJ6E,MAAM,aAEV,kBAACoO,GAAA,EAAD,CACIrH,KACI,uBAAG5L,UAAU,kBAAb,eAEJ6E,MAAM,QACNqC,UAAQ,Q,yCAQxB,OAAO/B,KAAKjD,MAAMyQ,SACd,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,QAAS,OAAO,kBAAC,GAAD,S,+BAKpB,OACI,6BACKxN,KAAKwb,aACLxb,KAAKyb,wB,GA/DDxgB,aCVd,SAASygB,GAAQC,EAAKC,GAGzB,GAFAD,EAAMzb,SAASyb,EAAK,KACpBC,EAAM1b,SAAS0b,EAAK,KACRD,EACZ,OAAOtX,KAAKC,MAAMD,KAAKE,UAAYqX,EAAMD,EAAM,IAAOA,EAGnD,SAASE,KACZ,MAAO,OAASH,GAAQ,EAAG,KAAO,KAAOA,GAAQ,EAAG,KAAO,KAAOA,GAAQ,EAAG,KAAO,IAGzE,IC0CTI,G,YACF,WAAY1e,GAAQ,IAAD,8BACf,4CAAMA,KAEDL,MAAQ,CACTiQ,OAAQ,CACJ+O,iBAAkB,GAClBC,IAAK,EACLC,IAAK,GACLC,gBAAiB,EACjBC,UAAW,EACXC,cAAe,CACX,MAXG,E,iFAkBfpc,KAAKqc,oB,wCAGU,IACP9e,EAAYyC,KAAK5C,MAAjBG,QAER,OAAO,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQsc,SAAUjf,UAAW,GACjD,uBAAGC,UAAU,kBAAb,0B,yCAMWmN,EAAGtI,GAAQ,IAAD,OACrB/D,EAAQqM,EAAElH,OAAOnF,MACrBqE,KAAKI,SAAS,CACV4M,OAAO,eACAhN,KAAKjD,MAAMiQ,OADZ,eAEDtN,EAAQ/D,KAEd,WACe,cAAV+D,GACU,KAAV/D,GACJ,EAAK0gB,sB,oCAKT,IAAMtf,EAAQiD,KAAKjD,MAAMiQ,OAEzB,OAAOjQ,EAAMqf,cAActX,IAAI,SAAC4C,EAAKC,GACjC,OACI,kBAAC,WAAD,CAAUzC,IAAKyC,GACX,2BAEQD,EAAI5C,IAAI,SAACzE,EAAK2E,GACV,OAAO,0BACHE,IAAKF,EACL1K,MACI+F,IAAQH,SAASnD,EAAMof,UAAW,IAC5B,CAAEvd,MAAO,OACT,IAINoG,IAAU0C,EAAIxG,OAAS,EACjBb,EACAA,EAAM,SAO5BsH,IAAM5K,EAAMqf,cAAclb,OAAS,EAC7B,KACA,kBAACgC,EAAA,EAAD,W,wCAQtB,IAAMnG,EAAQiD,KAAKjD,MAAMiQ,OAEzB,GAAKjQ,EAAMmf,gBAAX,CAOA,IALA,IAAInM,EAAO7P,SAASnD,EAAMmf,gBAAiB,KAAOhc,SAASnD,EAAMgf,iBAAkB,IAC7Ehf,EAAMgf,iBACNhf,EAAMmf,gBAERI,EAAU,GACL3U,EAAI,EAAGA,EAAIoI,EAAMpI,IACtB2U,EAAQzU,KAAK,IAIjB,IADA,IAAI2F,EAAU,EACL1B,EAAI,EAAGA,EAAI/O,EAAMgf,iBAAkBjQ,IACxCwQ,EAAQ9O,GAAS3F,KAAK6T,GAAQ1b,KAAKjD,MAAMiQ,OAAOgP,IAAKhc,KAAKjD,MAAMiQ,OAAOiP,QACvEzO,IACgB8O,EAAQpb,SACpBsM,EAAU,GAIlBxN,KAAKI,SAAS,CACV4M,OAAO,eACAhN,KAAKjD,MAAMiQ,OADZ,CAEFoP,cAAc,GAAD,OAAME,U,wCAKZ,IAAD,OACN/e,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAACmH,GAAA,EAAD,CAASwO,oBAAqBzI,IAAMpO,MAAM,aACtC,kBAAC2F,GAAA,EAAD,CACIrD,QAAQ,WACRC,MAAM,UACN/D,UAAW0C,EAAQsH,IACnB1F,QAAS,WACL,EAAKkd,oBAET,uBAAGxhB,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SAApD,aAPJ,gB,+BAgBF,IAAD,OACGmB,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,6BACI,kBAAC,IAAD,CAAM3C,UAAW,EAAGC,UAAW0C,EAAQgf,SACnC,kBAAC/b,GAAA,EAAD,CACIwC,GAAG,mBACHwZ,aAAcxc,KAAKjD,MAAMiQ,OAAO+O,iBAChClhB,UAAW0C,EAAQyd,UACnBnL,WAAS,EACTnQ,MAAM,iCACNf,QAAQ,WACRrC,OAAO,SACPkD,SAAU,SAACwI,GAAQ,EAAKyU,mBAAmBzU,EAAG,uBAElD,kBAACxH,GAAA,EAAD,CACIwC,GAAG,MACHwZ,aAAcxc,KAAKjD,MAAMiQ,OAAOgP,IAChCnhB,UAAW0C,EAAQmf,WACnB/C,WAAW,UACXrd,OAAO,SACPkD,SAAU,SAACwI,GAAQ,EAAKyU,mBAAmBzU,EAAG,UAElD,kBAACxH,GAAA,EAAD,CACIwC,GAAG,MACHwZ,aAAcxc,KAAKjD,MAAMiQ,OAAOiP,IAChCphB,UAAW0C,EAAQof,WACnBhD,WAAW,UACXrd,OAAO,SACPkD,SAAU,SAACwI,GAAQ,EAAKyU,mBAAmBzU,EAAG,UAElD,kBAACxH,GAAA,EAAD,CACIwC,GAAG,MACHwZ,aAAcxc,KAAKjD,MAAMiQ,OAAOmP,UAChC3c,SAAU,SAACwI,GAAQ,EAAKyU,mBAAmBzU,EAAG,cAC9CnN,UAAW0C,EAAQmf,WACnB/C,WAAW,mBACXrd,OAAO,WAEX,kBAACkE,GAAA,EAAD,CACIwC,GAAG,MACHwZ,aAAcxc,KAAKjD,MAAMiQ,OAAOkP,gBAChCrhB,UAAW0C,EAAQof,WACnBhD,WAAW,OACXrd,OAAO,SACPkD,SAAU,SAACwI,GAAQ,EAAKyU,mBAAmBzU,EAAG,uBAGrDhI,KAAK+Z,kBACN,kBAAC,IAAD,CAAMnf,UAAW,EAAGC,UAAW0C,EAAQqf,aAClC5c,KAAK4c,eAET5c,KAAK4V,uB,GA3LE3a,aAiMTkH,eAzOA,SAAA3G,GAAK,MAAK,CACrB+gB,QAAS,CACLhiB,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,OACdiJ,QAAS,YAEbkZ,YAAa,CACTriB,MAAO,OACP2B,SAAU,IACVxB,UAAW,UACXyB,WAAY,OACZC,YAAa,OACb3B,aAAc,OACdiJ,QAAS,aAEbmW,SAAU,CACNzX,gBAAiB,cACjB7H,MAAO,OACP4B,WAAY,OACZC,YAAa,OACbiM,SAAU,WACV5N,aAAc,GACdD,UAAW,IAEfkiB,WAAY,CACRniB,MAAO,QACP6B,YAAa,QAEjBugB,WAAY,CACRpiB,MAAO,SAEXsK,IAAK,CACDwD,SAAU,QACVkD,OAAQ/P,EAAM+H,QAAQ,GACtBiI,MAAOhQ,EAAM+H,QAAQ,MAqMdpB,CAAmB2Z,IC7M5Be,G,YACF,WAAYzf,GAAQ,IAAD,8BACf,4CAAMA,KAED0f,YAAc,EAAKA,YAAYjZ,KAAjB,iBAEnB,EAAK9G,MAAQ,CACTgQ,MAAO8O,MANI,E,2EAWf7b,KAAKI,SAAS,CACV2M,MAAO8O,S,+BAIL,IAAD,OACGte,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,6BACI,kBAACyE,GAAA,EAAD,CACIrD,QAAQ,WACRgG,aAAW,OACX9J,UAAW0C,EAAQX,OACnBuC,QAAS,kBAAM,EAAK2d,eACpBle,MAAM,aAEN,uBAAG/D,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SAApD,iBAPJ,aAYA,kBAAC,IAAD,CAAMxB,UAAW,GAAIC,UAAW0C,EAAQwf,WACpC,yBACIliB,UAAW0C,EAAQwf,UACnBziB,MAAO,CAAE8H,gBAAiBpC,KAAKjD,MAAMgQ,OACrC5N,QAASa,KAAK8c,oB,GAtCf7hB,aA8CRkH,eA9EA,SAAA3G,GAAK,MAAK,CACrBwhB,SAAU,CACNziB,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,OACdiJ,QAAS,YAEbqZ,UAAW,CACPxiB,MAAO,OACP2B,SAAU,IACViP,UAAW,IACXzQ,UAAW,SACXyB,WAAY,OACZC,YAAa,OACb6gB,mBAAoB,OACpBxF,OAAQ,WAEZoC,SAAU,CACNzX,gBAAiB,cACjB7H,MAAO,OACP4B,WAAY,OACZC,YAAa,OACbiM,SAAU,WACV5N,aAAc,GACdD,UAAW,IAEfoC,OAAQ,CACJnC,aAAce,EAAM+H,QAAQ,MAkDrBpB,CAAmB0a,I,UC5C5BK,G,YACF,WAAY9f,GAAQ,IAAD,8BACf,4CAAMA,KAgBVqZ,SAAW,WAAO,IACNA,EAAa,EAAK1Z,MAAMmgB,KAAxBzG,SACR,EAAKrW,SAAS,CACV8c,KAAK,eACE,EAAKngB,MAAMmgB,KADd,CAEAzG,SAAUA,EAAW,EACrBlN,MAAO,MAEZ,WACKkN,GAAY,MACZhY,cAAc,EAAKwF,OACnB,EAAK7D,SAAS,CACV8c,KAAK,eACE,EAAKngB,MAAMmgB,KADd,CAEA3T,MAAyB,IAAlBmS,GAAQ,EAAG,GAAW,QAAU,QACvCjF,SAAU,UA7B1B,EAAKxS,MAAQ,KAEb,EAAKlH,MAAQ,CACTmgB,KAAM,CACF3T,MAAO,GACPkN,SAAU,IARH,E,iFAcfzW,KAAKmd,e,mCA0B4B,IAA7Bnd,KAAKjD,MAAMmgB,KAAKzG,SAChBzW,KAAKiE,MAAQzF,YAAYwB,KAAKyW,SAAU,KAExChY,cAAcuB,KAAKiE,OACnBjE,KAAKI,SAAS,CACV8c,KAAK,eACEld,KAAKjD,MAAMmgB,KADd,CAEAzG,SAAU,MAGlBzW,KAAKiE,MAAQzF,YAAYwB,KAAKyW,SAAU,O,+BAItC,IAAD,OACGlZ,EAAYyC,KAAK5C,MAAjBG,QAER,OAAO,kBAAC,WAAD,KACH,kBAACyE,GAAA,EAAD,CACIrD,QAAQ,WACRgG,aAAW,OACX9J,UAAW0C,EAAQX,OACnBuC,QAAS,kBAAM,EAAKge,cACpBve,MAAM,aAEN,uBAAG/D,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SAApD,aAPJ,QAYA,kBAAC,IAAD,CACIxB,UAAW,GACXC,UAAW0C,EAAQ6f,SACnBxe,MAAM,UACNtE,MAC8B,UAA1B0F,KAAKjD,MAAMmgB,KAAK3T,MACV,CAAEnH,gBAAiB,QAASxD,MAAO,SACnC,CAAEwD,gBAAiB,QAASxD,MAAO,UAIzCoB,KAAKjD,MAAMmgB,KAAKzG,SAAW,EACrB,kBAAC4G,GAAA,EAAD,CACExiB,UAAW0C,EAAQkZ,SACnB7X,MAAM,YACND,QAAQ,cACRO,KAAM,GACNvD,MAAOqE,KAAKjD,MAAMmgB,KAAKzG,WAGzB,4BAAKzW,KAAKjD,MAAMmgB,KAAK3T,a,GA3F5BtO,aAkGJkH,eAnIA,SAAA3G,GAAK,MAAK,CACrBqe,SAAU,CACNzX,gBAAiB,cACjB7H,MAAO,OACP4B,WAAY,OACZC,YAAa,OACbiM,SAAU,WACV5N,aAAc,GACdD,UAAW,IAEf4iB,SAAU,CACN9b,aAAc,OACd/G,MAAO,IACP8G,OAAQ,IACRlF,WAAY,OACZC,YAAa,OACb1B,UAAW,SACXoX,cAAe,SACfwL,WAAY,QACZL,mBAAoB,OACpBtiB,QAAS,OACTyQ,eAAgB,SAChBjE,WAAY,UAEhBvK,OAAQ,CACJnC,aAAce,EAAM+H,QAAQ,IAEhCkT,SAAU,CACNjc,UAAW,OACXC,aAAc,UAsGP0H,CAAmB+a,ICxF5BK,G,YACF,WAAYngB,GAAQ,IAAD,8BACf,4CAAMA,KAEDL,MAAQ,CACTwgB,KAAM,CACFC,cAAe,EACfC,MAAO,KANA,E,iFAYfzd,KAAK0d,kB,wCAIU,IACPngB,EAAYyC,KAAK5C,MAAjBG,QAER,OAAO,kBAAC,IAAD,CAAM1C,UAAW0C,EAAQsc,SAAUjf,UAAW,GACjD,uBAAGC,UAAU,kBAAb,0B,wCAMW,IAAD,OACN0C,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAACyE,GAAA,EAAD,CACIrD,QAAQ,WACRC,MAAM,UACN/D,UAAW0C,EAAQsH,IACnB1F,QAAS,WACL,EAAKue,kBAET,uBAAG7iB,UAAU,iBAAiBP,MAAO,CAAE8B,YAAa,SAApD,gBAPJ,U,gCAeEuhB,GACN,OAAQA,GACJ,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,KAAK,EAAG,MAAO,kDACf,QAAS,U,sCAMb,IADA,IAAIjW,EAAM,GACDC,EAAI,EAAGA,EAAI3H,KAAKjD,MAAMwgB,KAAKC,cAAe7V,IAC/CD,EAAIG,KAAK6T,GAAQ,EAAG,IAGxB1b,KAAKI,SAAS,CACVmd,KAAK,eACEvd,KAAKjD,MAAMwgB,KADd,CAEAE,MAAM,GAAD,OAAM/V,S,kCAKV,IAAD,OACR,OAAO1H,KAAKjD,MAAMwgB,KAAKE,MAAM3Y,IAAI,SAAC6Y,EAAM3Y,GACpC,OAAO,yBACHhK,IAAI,OACJH,UAAU,WACVC,IAAK,EAAK8iB,UAAUD,GACpBzY,IAAKF,Q,+BAKP,IAAD,OACGzH,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAM3C,UAAW,EAAGC,UAAW0C,EAAQgf,SACnC,kBAAC/b,GAAA,EAAD,CACIwC,GAAG,gBACHwZ,aAAcxc,KAAKjD,MAAMwgB,KAAKC,cAC9B3iB,UAAW0C,EAAQyd,UACnBnL,WAAS,EACTnQ,MAAM,0BACNf,QAAQ,WACRrC,OAAO,SACPkD,SAAU,SAACwI,GACP,EAAK5H,SAAS,CACVmd,KAAK,eACE,EAAKxgB,MAAMwgB,KADd,CAEAC,cAAexV,EAAElH,OAAOnF,SAE7B,WAAQ,EAAK+hB,sBAI3B1d,KAAK+Z,kBACN,kBAAC,IAAD,CAAMnf,UAAW,EAAGC,UAAW0C,EAAQsgB,WAClC7d,KAAK6d,aAET7d,KAAK4V,uB,GA/GH3a,aAqHJkH,eAhKA,SAAA3G,GAAK,MAAK,CACrB+gB,QAAS,CACLhiB,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,OACdiJ,QAAS,YAEbmW,SAAU,CACNzX,gBAAiB,cACjB7H,MAAO,OACP4B,WAAY,OACZC,YAAa,OACbiM,SAAU,WACV5N,aAAc,GACdD,UAAW,IAEfoC,OAAQ,CACJnC,aAAce,EAAM+H,QAAQ,IAGhCua,SAAU,CACNxhB,OAAQd,EAAM+H,QAAQ,GACtB7G,SAAU,OACV0F,gBAAiB,QACjBxD,MAAO,SAEXiG,IAAK,CACDwD,SAAU,QACVkD,OAAQ/P,EAAM+H,QAAQ,GACtBiI,MAAOhQ,EAAM+H,QAAQ,IAEzBsa,UAAW,CACPtjB,MAAO,OACP2B,SAAU,IACVxB,UAAW,SACXyB,WAAY,OACZC,YAAa,OACb3B,aAAc,OACdiJ,QAAS,eAyHFvB,CAAmBob,ICrF5BQ,G,YACF,WAAY3gB,GAAQ,IAAD,8BACf,4CAAMA,KAED4gB,gBAAkB,EAAKA,gBAAgBna,KAArB,iBAEvB,EAAKI,MAAQ,KAEb,EAAKlH,MAAQ,CACTyQ,QAAS,GARE,E,6EAYHpJ,GACZpE,KAAKI,SAAS,CACVoN,QAASpJ,M,sCAKb,OAAQpE,KAAKjD,MAAMyQ,SACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,KAAK,EAAG,OAAO,kBAAC,GAAD,MACf,QAAS,OAAO,kBAAC,GAAD,S,oCAIT,IAAD,OACFjQ,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,6BACI,yBAAK1C,UAAW0C,EAAQ0gB,UACpB,kBAAC5Y,GAAA,EAAD,CACIC,OAAQ,kBAACC,EAAA,EAAD,WACR7F,MAAM,UACNd,MAAM,UACND,QAAgC,IAAvBqB,KAAKjD,MAAMyQ,QAAgB,UAAY,WAChDrO,QAAS,kBAAM,EAAK6e,gBAAgB,IACpCnjB,UAAW0C,EAAQ0H,OAEvB,kBAACI,GAAA,EAAD,CACIC,OAAQ,kBAACC,EAAA,EAAD,WACR7F,MAAM,QACNd,MAAM,YACND,QAAgC,IAAvBqB,KAAKjD,MAAMyQ,QAAgB,UAAY,WAChDrO,QAAS,kBAAM,EAAK6e,gBAAgB,IACpCnjB,UAAW0C,EAAQ0H,OAEvB,kBAACI,GAAA,EAAD,CACIC,OAAQ,kBAACC,EAAA,EAAD,WACR7F,MAAM,eACNf,QAAgC,IAAvBqB,KAAKjD,MAAMyQ,QAAgB,UAAY,WAChDrO,QAAS,kBAAM,EAAK6e,gBAAgB,IACpCnjB,UAAW0C,EAAQ0H,OAEvB,kBAACI,GAAA,EAAD,CACIC,OAAQ,kBAACC,EAAA,EAAD,WACR7F,MAAM,cACNf,QAAgC,IAAvBqB,KAAKjD,MAAMyQ,QAAgB,UAAY,WAChDrO,QAAS,kBAAM,EAAK6e,gBAAgB,IACpCnjB,UAAW0C,EAAQ0H,QAG1BjF,KAAKkL,mB,+BAMd,OACI,6BACKlL,KAAKke,mB,GA1EGjjB,aAoFVkH,eA7JA,SAAA3G,GAAK,MAAK,CACrByiB,SAAU,CACNtjB,QAAS,OACTyQ,eAAgB,SAChB+S,SAAU,OACV5jB,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,QAElBwK,KAAM,CACF3I,OAAQd,EAAM+H,QAAQ,IAE1BgZ,QAAS,CACLhiB,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,OACdiJ,QAAS,YAEbmW,SAAU,CACNzX,gBAAiB,cACjB7H,MAAO,OACP4B,WAAY,OACZC,YAAa,OACbiM,SAAU,WACV5N,aAAc,GACdD,UAAW,IAEf4iB,SAAU,CACN9b,aAAc,OACd/G,MAAO,IACP8G,OAAQ,IACRlF,WAAY,OACZC,YAAa,OACb1B,UAAW,SACXoX,cAAe,SACfwL,WAAY,QACZL,mBAAoB,OACpBtiB,QAAS,OACTyQ,eAAgB,SAChBjE,WAAY,UAEhBvK,OAAQ,CACJnC,aAAce,EAAM+H,QAAQ,IAEhCkT,SAAU,CACNjc,UAAW,OACXC,aAAc,QAGlBqjB,SAAU,CACNxhB,OAAQd,EAAM+H,QAAQ,GACtB7G,SAAU,OACV0F,gBAAiB,QACjBxD,MAAO,SAEXiG,IAAK,CACDwD,SAAU,QACVkD,OAAQ/P,EAAM+H,QAAQ,GACtBiI,MAAOhQ,EAAM+H,QAAQ,IAEzBsa,UAAW,CACPtjB,MAAO,OACP2B,SAAU,IACVxB,UAAW,UACXyB,WAAY,OACZC,YAAa,OACb3B,aAAc,OACdiJ,QAAS,eAwFFvB,CAAmB4b,I,+DCvEnB5b,mBAtFA,SAAA3G,GAAK,MAAK,CACvBQ,KAAM,CACJrB,QAAS,OACTJ,MAAO,QACP+B,OAAQ,QAEVgJ,OAAQ,CACN/K,MAAO,GACP8G,OAAQ,GACRjF,YAAa,EACb1B,UAAW,SACXC,QAAS,eACT2iB,WAAY,QAEdc,QAAS,CACPzjB,QAAS,OACT0jB,cAAe,UAEjB9B,QAAS,CACP+B,KAAM,YAERC,MAAO,CACLhkB,MAAO,KAETikB,SAAU,CACR7jB,QAAS,OACTwM,WAAY,SACZ2Q,YAAatc,EAAM+H,QAAQ,GAC3B6W,cAAe5e,EAAM+H,QAAQ,IAE/Bkb,SAAU,CACRpd,OAAQ,GACR9G,MAAO,GACPqE,MAAOpD,EAAM8B,QAAQkF,QAAQF,MAE/Boc,SAAU,CACR9f,MAAOpD,EAAM8B,QAAQ+E,UAAUC,MAEjCqc,WAAY,CACV/f,MAAO,MA+CuB,CAAEggB,WAAW,GAAhCzc,CA3Cf,SAA0B/E,GAAQ,IACxBG,EAAmBH,EAAnBG,QAER,OAF2BH,EAAV5B,MAGf,kBAAC,IAAD,CAAMX,UAAW0C,EAAQvB,KAAMpB,UAAW,IACxC,yBAAKC,UAAW0C,EAAQ6gB,SACtB,kBAACtf,EAAA,EAAD,CAAajE,UAAW0C,EAAQgf,SAC9B,kBAAChX,EAAA,EAAD,CACE1K,UAAW0C,EAAQ+H,OACnBhL,MAAO,CAAE8H,gBAAiBhF,EAAMyhB,KAAK9R,QAGnC3P,EAAMyhB,KAAKC,KAAK,IAGpB,wBAAIxkB,MAAO,CAAEK,QAAS,iBACnByC,EAAMyhB,KAAKC,KAAKC,MAAM,IAEzB,uBAAGpgB,QAAQ,YAAYC,MAAM,iBAC1BxB,EAAMyhB,KAAKG,mBAGhB,yBAAKnkB,UAAW0C,EAAQihB,UACtB,kBAACzd,EAAA,EAAD,CAAY4D,aAAW,OAAOxF,QAAS,WAAO/B,EAAM6hB,OAAO7hB,EAAMyhB,KAAKza,MACpE,kBAAC,KAAD,CAAevJ,UAAW0C,EAAQkhB,YAEpC,kBAAC1d,EAAA,EAAD,CAAY4D,aAAW,QACrB,kBAAC,KAAD,CAAU9J,UAAW0C,EAAQmhB,YAE/B,kBAAC3d,EAAA,EAAD,CAAY4D,aAAW,SAASxF,QAAS,kBAAM/B,EAAM8hB,SAAS9hB,EAAMyhB,KAAKza,MACvE,kBAAC,KAAD,CAAYvJ,UAAW0C,EAAQohB,mBClDrCQ,G,iLACQ,IACE5hB,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAACqI,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAMhG,KAAK5C,MAAM4I,KACjBC,iBAAkBjG,KAAK5C,MAAM6I,iBAAmBjG,KAAK5C,MAAM6I,iBAAmB,IAC9EC,QAASlG,KAAK5C,MAAM+I,aAEpB,kBAACC,GAAA,EAAD,CACIvL,UAAWwL,IAAW9I,EAAQsJ,OAC9BN,mBAAiB,kBACjBC,QACI,0BAAMxD,GAAG,kBAAkBnI,UAAW0C,EAAQiJ,SAC1C,uBAAG3L,UAAWwL,IAAW9I,EAAQkJ,KAAMlJ,EAAQmJ,YAAa,mBAA5D,iBAGC1G,KAAK5C,MAAMiB,KAAK6C,OAASlB,KAAK5C,MAAMiB,KAAO,SAGpD0F,OAAQ,CACJ,kBAAChD,EAAA,EAAD,CACImE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACN/D,UAAW0C,EAAQoJ,MACnBxH,QAASa,KAAK5C,MAAM+I,aAEpB,uBAAGtL,UAAU,kBAAb,kB,GAjCRI,aA4CLkH,eAtEA,SAAA3G,GAAK,MAAK,CACrB8K,QAAS,CACLlE,gBAAiBwE,KAAM,MAE3BC,MAAO,CACHzE,gBAAiB5G,EAAM8B,QAAQuJ,MAAMC,MAEzCC,KAAM,CACF3E,gBAAiB5G,EAAM8B,QAAQkF,QAAQsE,MAE3CE,QAAS,CACL5E,gBAAiB6E,KAAM,MAE3BR,KAAM,CACF/J,SAAU,IAEdgK,YAAa,CACTQ,QAAS,GACT9K,YAAaZ,EAAM+H,WAEvBiD,QAAS,CACL7L,QAAS,OACTwM,WAAY,YAgDLhF,CAAmBgd,IC7D5BC,G,YACF,WAAYhiB,GAAQ,IAAD,8BACf,4CAAMA,KAEDL,MAAQ,GAHE,E,sEASf,OACI,kBAACqS,GAAA,EAAD,CACIpJ,KAAMhG,KAAK5C,MAAMiiB,YACjBnZ,QAASlG,KAAK5C,MAAMkiB,mBACpBhQ,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAavM,GAAG,qBAAqB,eAAiBhD,KAAK5C,MAAMmiB,SAAW,KAC5E,kBAACrc,EAAA,EAAD,CAASvE,QAAQ,WAEbqB,KAAK5C,MAAMoiB,QAAQ1a,IAAI,SAAC2a,EAAGza,GACvB,OACI,kBAAC,WAAD,CAAUE,IAAKF,GACX,yBAAK1K,MAAO,CAAEoJ,QAAS,KACnB,uBAAGpJ,MAAO,CAAEK,QAAS,WACjB,sCAEYqK,EAAQ,EAFpB,aAE0Bya,EAAEC,gBAIhC,uBACI7kB,UAAU,iBACVP,MACI,CACIK,QAAS,SACTiE,MAAO6gB,EAAEE,UAAY,QAAU,MAC/BxjB,WAAY,IAGnBsjB,EAAEE,UAAY,WAAa,SAEhC,2CAAiBF,EAAEG,YAEdH,EAAEE,UAEG,KADA,8CAAoBF,EAAEI,gBAKpC,kBAAC3c,EAAA,EAAD,CAASvE,QAAQ,cAKjC,kBAACM,EAAA,EAAD,CACIL,MAAM,UACNO,QAASa,KAAK5C,MAAMkiB,oBAFxB,qB,GAtDMrkB,aAiEP6B,eAAQ,WACnB,MAAO,IAEP,SAAAI,GACI,OAAOC,YAAmB,GAAID,IAJvBJ,CAKRsiB,ICxFA,SAASU,GAAYxhB,GACxB,MAAO,CACHlD,KAAM,cACNkD,QAID,SAASyhB,GAASzhB,GACrB,MAAO,CACHlD,KAAM,WACNkD,QCFR,IA+BM0hB,G,YACF,WAAY5iB,GAAQ,IAAD,8BACf,4CAAMA,KAEDL,MAAQ,CACTkjB,KAAM,CACF7b,GAAI,EACJ0a,KAAM,GACNE,iBAAkB,GAClBjS,MAAO,OACPmT,KAAM,GACNC,UAAW,CACP,CACI/b,GAAI,EACJyK,KAAM,GACNuR,QAAS,CACL,CACIvR,KAAM,GACNwR,SAAS,GAEb,CACIxR,KAAM,GACNwR,SAAS,GAEb,CACIxR,KAAM,GACNwR,SAAS,GAEb,CACIxR,KAAM,GACNwR,SAAS,OAM7BC,UAAW,GAnCA,E,iFAwCf,IAAMlc,EAAKqR,KAAE8K,WAEbvgB,KAAKI,SAAS,CACV6f,KAAM,CACF7b,GAAIqR,KAAE8K,WACNzB,KAAM,GACNE,iBAAkB,GAClBjS,MAAO,OACPmT,KAAM,GACNC,UAAW,CACP,CACI/b,KACAyK,KAAM,GACNuR,QAAS,CACL,CACIvR,KAAM,GACNwR,SAAS,GAEb,CACIxR,KAAM,GACNwR,SAAS,GAEb,CACIxR,KAAM,GACNwR,SAAS,GAEb,CACIxR,KAAM,GACNwR,SAAS,OAM7BC,UAAWlc,M,6CAKyBA,GAAK,IAAhBzI,EAAe,EAAzBmF,OAAUnF,MAC7BqE,KAAKI,SAAS,CACV6f,KAAK,eACEjgB,KAAKjD,MAAMkjB,KADd,CAEAE,UAAU,aACHngB,KAAKjD,MAAMkjB,KAAKE,UAAUrb,IAAI,SAAC0b,GAC9B,OAAGA,EAAEpc,KAAOA,EAAWoc,EAChB,eACAA,EADP,CAEI3R,KAAMlT,a,2CAQYqJ,GAAQ,IAAD,OAAlBrJ,EAAkB,EAA5BmF,OAAUnF,MACrByI,EAAKpE,KAAKjD,MAAMujB,UAEtBtgB,KAAKI,SAAS,CACV6f,KAAK,eACEjgB,KAAKjD,MAAMkjB,KADd,CAEAE,UAAU,aACHngB,KAAKjD,MAAMkjB,KAAKE,UAAUrb,IAAI,SAAC0b,GAC9B,OAAGA,EAAEpc,KAAOA,EAAWoc,EAChB,eACAA,EADP,CAEIJ,QAAQ,aACD3K,KAAEC,KAAK,EAAK3Y,MAAMkjB,KAAKE,UAAW,CAAC/b,OAAKgc,QAAQtb,IAAI,SAAC2b,EAAG9Y,GACvD,OAAGA,IAAM3C,EAAcyb,EAChB,eACAA,EADP,CAEI5R,KAAMlT,kB,qCAW1B,IAAD,OACH4B,EAAYyC,KAAK5C,MAAjBG,QACA4iB,EAAcngB,KAAKjD,MAAMkjB,KAAzBE,UACAG,EAActgB,KAAKjD,MAAnBujB,UACFI,EAAkBjL,KAAEC,KAAKyK,EAAW,CAAE/b,GAAIkc,IACxCF,EAAYM,EAAZN,QAGR,OACI,kBAAC,IAAD,CAAMxlB,UAAW,EAAGC,UAAW0C,EAAQgf,SACnC,kBAAC/b,GAAA,EAAD,CACIgc,aAAckE,EAAgB7R,KAC9BhU,UAAW0C,EAAQyd,UACnBnL,WAAS,EACTnQ,MAAM,WACNf,QAAQ,WACRrC,OAAO,SACPkD,SAAU,SAACwI,GAAQ,EAAK2Y,qBAAqB3Y,EAAGsY,MAEpD,kBAAC9f,GAAA,EAAD,CACIgc,aAAc4D,EAAQ,GAAGvR,KACzBhU,UAAW0C,EAAQmf,WACnB/C,WAAW,eACXrd,OAAO,SACPkD,SAAU,SAACwI,GAAQ,EAAK4Y,mBAAmB5Y,EAAG,MAElD,kBAACxH,GAAA,EAAD,CACIgc,aAAc4D,EAAQ,GAAGvR,KACzBhU,UAAW0C,EAAQmf,WACnB/C,WAAW,gBACXrd,OAAO,SACPkD,SAAU,SAACwI,GAAQ,EAAK4Y,mBAAmB5Y,EAAG,MAElD,kBAACxH,GAAA,EAAD,CACIgc,aAAc4D,EAAQ,GAAGvR,KACzBhU,UAAW0C,EAAQmf,WACnB/C,WAAW,eACXrd,OAAO,SACPkD,SAAU,SAACwI,GAAQ,EAAK4Y,mBAAmB5Y,EAAG,MAElD,kBAACxH,GAAA,EAAD,CACIwC,GAAG,MACHwZ,aAAc4D,EAAQ,GAAGvR,KACzBhU,UAAW0C,EAAQmf,WACnB/C,WAAW,gBACXrd,OAAO,SACPkD,SAAU,SAACwI,GAAQ,EAAK4Y,mBAAmB5Y,EAAG,S,+BAQ1D,OACI,6BACKhI,KAAK6gB,oB,GApLC5lB,aA0LRkH,eAzNA,SAAA3G,GAAK,MAAK,CACrB+gB,QAAS,CACLhiB,MAAO,IACP4B,WAAY,OACZC,YAAa,OACb3B,aAAc,OACdiJ,QAAS,YAEbkZ,YAAa,CACTriB,MAAO,OACP2B,SAAU,IACVxB,UAAW,UACXyB,WAAY,OACZC,YAAa,OACb3B,aAAc,OACdiJ,QAAS,aAEbgZ,WAAY,CACRniB,MAAO,QACP6B,YAAa,QAEjBugB,WAAY,CACRpiB,MAAO,SAEXsK,IAAK,CACDwD,SAAU,QACVkD,OAAQ/P,EAAM+H,QAAQ,GACtBiI,MAAOhQ,EAAM+H,QAAQ,MA8LdpB,CAAmB6d,ICtM5BpkB,GAAW,eACVklB,GAuBDC,G,YACF,WAAY3jB,GAAQ,IAAD,uBACf,4CAAMA,KACDL,MAAQ,CACTikB,YAAa,QACbC,OAAQ,GACRC,OAAQ,GACRC,kBAAmB,GACnBC,aAAc,EACdC,YAAY,EACZC,cAAe,GACfhR,cAAc,EACdiR,oBAAoB,EACpBC,aAAc,GACdC,UAAW,GACXpC,aAAa,EACbqC,gBAAiB,IAfN,MAkBmB,EAAKtkB,MAA/B0iB,EAlBO,EAkBPA,YAAaC,EAlBN,EAkBMA,SAlBN,OAmBf,EAAKD,YAAcA,EACnB,EAAKC,SAAWA,EAEhB,EAAK4B,WAAa,EAAKA,WAAW9d,KAAhB,iBAClB,EAAKqM,oBAAsB,EAAKA,oBAAoBrM,KAAzB,iBAC3B,EAAKyb,mBAAqB,EAAKA,mBAAmBzb,KAAxB,iBAC1B,EAAK+d,iBAAmB,EAAKA,iBAAiB/d,KAAtB,iBACxB,EAAKsM,iBAAmB,EAAKA,iBAAiBtM,KAAtB,iBA1BT,E,kFA+Bf7D,KAAKI,SAAS,CACVif,aAAa,EACb6B,OAAQ,GACRC,kBAAmB,GACnBC,aAAc,EACdC,YAAY,EACZC,cAAe,O,4CAKnBthB,KAAKI,SAAS,CACVkQ,cAAc,EACdiR,oBAAoB,M,wCAKxB,OAAOvhB,KAAKjD,MAAMokB,kBAAkBnhB,KAAKjD,MAAMqkB,gB,yCAGhCS,GACf,OAAOpM,KAAEqM,QAAQD,EAAe/c,IAAI,SAACid,GACjC,OAAO,eACAA,EADP,CAEI3B,QAAS3K,KAAEqM,QAAQC,EAAS3B,gB,uCAKvBhc,GACbpE,KAAK8f,YAAY,CAAE1b,OAEnBpE,KAAKI,SAAS,CACVshB,gBAAiBjM,KAAEC,KAAK1V,KAAK5C,MAAM2jB,OAAQ,CAAC3c,OAC5Cmd,oBAAoB,M,yCAKxBvhB,KAAK+f,SAAS/f,KAAKjD,MAAM2kB,iBAEzB1hB,KAAKI,SAAS,CACVmhB,oBAAoB,M,iCAIjBnd,GACP,IAAMwD,EAAM6N,KAAEC,KAAK1V,KAAK5C,MAAM2jB,OAAQ,CAAE3c,GAAIA,IAE5CpE,KAAKI,SAAS,CACV4gB,YAAa,WACbE,OAAQtZ,EACRuZ,kBAAmBnhB,KAAKgiB,mBAAmBpa,EAAIuY,WAC/CiB,aAAc,EACdC,YAAY,EACZC,cAAe,O,4CAIA,IAAD,OAClB,OAAKthB,KAAK5C,MAAM2jB,QAAW/gB,KAAK5C,MAAM2jB,OAAO7f,OAGzC,kBAAC2J,GAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASzH,QAAS,IAElCvD,KAAK5C,MAAM2jB,OAAOjc,IAAI,SAAC0F,GACnB,OACI,kBAACK,GAAA,EAAD,CAAM3F,IAAKsF,EAAKpG,GAAIoG,MAAI,GACpB,kBAACyX,GAAD,CACIpD,KAAI,eAAOrU,GACXyU,OAAQ,EAAK0C,WACbzC,SAAU,EAAK0C,uBAXiB,O,mCAqBnDM,GAAM,IAAD,OACdliB,KAAKI,SAAS,CACVkQ,cAAc,EACdgR,cAAc,GAAD,oBACNthB,KAAKjD,MAAMukB,eADL,CAET,CACI5B,aAAc1f,KAAKjD,MAAMokB,kBAAkBnhB,KAAKjD,MAAMqkB,cAAcvS,KACpE+Q,WAAYsC,EAAIrT,KAChBgR,cAAepK,KAAEC,KAAK1V,KAAKjD,MAAMokB,kBAAkBnhB,KAAKjD,MAAMqkB,cAAchB,QAAS,CAAEC,SAAS,IAAQxR,KACxG8Q,UAAWuC,EAAI7B,WAGvBmB,aAAcU,EAAI7B,QAAU,WAAa,eACzCoB,UAAWS,EAAI7B,QAAU,UAAY,SACtC,WACK,EAAKtjB,MAAMqkB,aAAe,EAAI,EAAKrkB,MAAMokB,kBAAkBjgB,OAC3D,EAAKd,SAAS,CACVihB,YAAY,EACZhC,aAAa,IAGjB,EAAKjf,SAAS,CACVghB,aAAc,EAAKrkB,MAAMqkB,aAAe,Q,mCAO1C,IAAD,OACD7jB,EAAYyC,KAAK5C,MAAjBG,QAER,GAAGyC,KAAKjD,MAAMolB,QAAS,OAAO,kBAAC,GAAD,MAE9B,IAAKniB,KAAKjD,MAAMmkB,OAAO9c,GACnB,OACI,yBAAK9J,MAAO,CAAEC,MAAO,MAAO4B,WAAY,OAAQC,YAAa,SACxD4D,KAAKoiB,uBAKlB,IAAM5B,EAAIxgB,KAAKqiB,kBACf,OACI,kBAAC,WAAD,KACI,kBAAChoB,EAAA,EAAD,CAAOQ,UAAW0C,EAAQ8N,KAAMzQ,UAAW,GACvC,4BAAK4lB,EAAE3R,OAEX,kBAAChE,GAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASzH,QAAS,IAElCid,EAAEJ,QAAQtb,IAAI,SAACod,EAAKld,GAChB,OACI,kBAAC6F,GAAA,EAAD,CAAM3F,IAAKF,EAAOwF,MAAI,GAClB,kBAACvL,EAAA,EAAD,CACIN,QAAQ,YACR9D,UAAW0C,EAAQ6iB,QACnBjhB,QAAS,kBAAM,EAAKmjB,aAAaJ,KAG7BA,EAAIrT,a,uCAgBxC,MAAgC,YAAzB7O,KAAKjD,MAAM0kB,UACZ,kBAAC,GAAD,CACEzb,KAAMhG,KAAKjD,MAAMuT,aACjBnK,YAAanG,KAAKkQ,oBAClB7R,KAAM2B,KAAKjD,MAAMykB,aACjBvb,iBAAkB,OAEpB,kBAAC,GAAD,CACED,KAAMhG,KAAKjD,MAAMuT,aACjBnK,YAAanG,KAAKkQ,oBAClB7R,KAAM2B,KAAKjD,MAAMykB,aACjBvb,iBAAkB,S,iDAIF,IAChB1I,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAACqI,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAMhG,KAAKjD,MAAMwkB,mBACjBtb,iBAAkB,IAClBC,QAASlG,KAAKkQ,oBACdwB,aAAc,CACV,mBAAoB,cAExBlL,QAAS,0BAAMxD,GAAG,cAAT,gBACTe,OAAQ,CACJ,kBAAC9E,EAAA,EAAD,CAAQiG,IAAI,OAAOtG,MAAM,YAAYM,KAAK,QAAQC,QAASa,KAAKmQ,kBAAhE,QAGA,kBAACpP,EAAA,EAAD,CACImE,IAAI,QACJP,aAAW,QACX/F,MAAM,UACN/D,UAAW0C,EAAQoJ,MACnBxH,QAASa,KAAKkQ,qBAEd,uBAAGrV,UAAU,kBAAb,e,sCAQhB,OAAKmF,KAAKjD,MAAMskB,WAET,kBAAC,GAAD,CACHhC,YAAarf,KAAKjD,MAAMsiB,YACxBC,mBAAoBtf,KAAKsf,mBACzBC,SAAUvf,KAAKjD,MAAMmkB,OAAOpC,KAC5BU,QAASxf,KAAKjD,MAAMukB,gBANW,O,wCAUpB,IAAD,OACN/jB,EAAYyC,KAAK5C,MAAjBG,QAER,OACI,kBAACmH,GAAA,EAAD,CAASwO,oBAAqBzI,IAAMpO,MAAM,gBACtC,kBAAC2F,GAAA,EAAD,CACIrD,QAAQ,WACRC,MAAM,UACN/D,UAAW0C,EAAQsH,IACnB1F,QAAS,WACL,EAAKiB,SAAS,CACV+hB,SAAS,MAGjB,uBAAGtnB,UAAU,iBAAiBP,MAAO,CAAC8B,YAAa,SAAnD,cATJ,e,+BAiBR,OACI,6BACK4D,KAAKuiB,aACLviB,KAAKwiB,iBACLxiB,KAAKyiB,gBACLziB,KAAK0iB,2BACL1iB,KAAK4V,uB,GArRD3a,aA2RNqI,OACXnB,YAhTW,SAAA3G,GAAK,MAAK,CACrB6P,KAAK,eACE7P,EAAM0e,OAAOC,UADhB,CAEAtI,WAAYrW,EAAM+H,QAAQ,GAC1B6W,cAAe5e,EAAM+H,QAAQ,GAC7BrH,SAAU,MACVE,YAAa,OACbD,WAAY,OACZ1B,aAAc,KAElB2lB,QAAS,CACL3I,OAAQ,WAEZ5S,IAAK,CACDwD,SAAU,QACVkD,OAAQ/P,EAAM+H,QAAQ,GACtBiI,MAAOhQ,EAAM+H,QAAQ,OAiSzBzG,YAAQ,SAAAC,GAGJ,MAAO,CACHgkB,OAHehkB,EAAXgkB,SAMR,SAAA7jB,GACI,OAAOC,YAAmBvB,GAAasB,KAVpCoG,CAYbyd,IC/UIjlB,GAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,IACVC,SAAU,IACVxB,UAAW,SACXyB,WAAY,OACZC,YAAa,QAEjBG,OAAQ,CACJ5B,QAAS,eACT2B,OAAQ,QACRE,UAAW,cAEfH,MAAO,CACHK,SAAU,IAEdC,IAAK,CACDlC,aAAc,MA6BPqC,eAAQ,SAAAC,GACnB,MAAO,IAEP,SAAAG,GACI,OAAOC,YAAmB,GAAID,IAJvBJ,CAzBD,SAACM,GACX,IAAMG,EAAUzB,KADK,EAEG0B,mBAAS,IAFZ,mBAEdC,EAFc,KAERC,EAFQ,KAcrB,OAVAK,oBAAU,WACNE,MAAM,oCAAqC,CACvCC,KAAM,YAELC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAAAG,GACFZ,EAAQY,MAEjB,IAGC,6BACI,kBAAC,IAAD,CAAMzD,UAAW0C,EAAQvB,MACrB,kBAAC8C,EAAA,EAAD,KACKrB,OCrCf3B,GAAYC,YAAW,SAAAP,GAAK,MAAK,CACnC6P,KAAM,CACF9Q,MAAO,QACP4B,WAAY,OACZC,YAAa,QAEjBumB,KAAM,CACFvgB,gBAAiB5G,EAAM8B,QAAQkG,WAAWC,OAE9CpH,MAAO,CACHC,OAAQ,OAIVgC,GAAO,CACT,CACIskB,UAAW,aACXvmB,MAAO,aACP2B,IAAK,0CAET,CACI4kB,UAAW,SACXvmB,MAAO,cACP2B,IAAK,0CAET,CACI4kB,UAAW,gBACXvmB,MAAO,iBACP2B,IAAK,6CAET,CACI4kB,UAAW,MACXvmB,MAAO,cACP2B,IAAK,0CAIP6kB,GAAO,SAAC,GAAc,IAAZrY,EAAW,EAAXA,KACZ,OACI,kBAACG,EAAA,EAAD,CACIxL,QAAS,WACL2jB,OAAO9c,KAAKwE,EAAKxM,OAGrB,kBAACmT,GAAA,EAAD,KACI,kBAAC5L,EAAA,EAAD,KACI,uBAAG1K,UAAU,kBACR2P,EAAKoY,aAIlB,kBAAChY,EAAA,EAAD,CACIpI,QAASgI,EAAKnO,QAElB,kBAACiV,GAAA,EAAD,KACI,kBAACvQ,EAAA,EAAD,CAAYgiB,KAAK,MAAMpe,aAAW,SAASxF,QAAS,WAChD2jB,OAAO9c,KAAKwE,EAAKxM,OAEjB,uBAAGnD,UAAU,kBAAb,mBAmCLmoB,GA1BD,WACV,IAAMzlB,EAAUzB,KAEhB,OACI,6BACI,kBAACzB,EAAA,EAAD,CAAOQ,UAAW0C,EAAQ8N,KAAMzQ,UAAW,GACvC,kBAAC8D,EAAA,EAAD,CAAYC,QAAQ,KAAK9D,UAAW0C,EAAQlB,OAA5C,qCAIJ,kBAAChC,EAAA,EAAD,CAAOQ,UAAW0C,EAAQ8N,KAAMzQ,UAAW,GACvC,kBAACyP,GAAA,EAAD,KAEQ/L,GAAKwG,IAAI,SAAC0F,GACN,OACI,kBAAC,GAAD,CAAMtF,IAAKsF,EAAKnO,MAAOmO,KAAMA,UCxEvD5O,GAAW,eACVC,GAGDonB,G,YACF,WAAY7lB,GAAQ,IAAD,0BAGPlC,GAFR,4CAAMkC,KAEuBA,MAArBlC,YAHO,OAIf,EAAKA,YAAcA,EAJJ,E,sEAQf,OAAQ8E,KAAK5C,MAAMH,QAAQ+jB,aACvB,IAAM,cACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,WACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,aACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,OACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,OACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,SACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,QACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,MACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,QACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,WACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,SACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,aACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,QACF,OAAQ,kBAAC,GAAD,MACZ,IAAM,SACF,OAAQ,kBAAC,GAAD,MACZ,QACI,OAAQ,kBAAC,GAAD,W,GAvCC/lB,aA4CV6B,eAAQ,SAAAC,GAGnB,MAAO,CACHE,QAHgBF,EAAZE,UAMR,SAAAC,GACI,OAAOC,YAAmBvB,GAAasB,IARhCJ,CASRmmB,IClDDrnB,GAAW,eACVC,GAsFDqnB,G,YACF,WAAY9lB,GAAQ,IAAD,6BACf,4CAAMA,KAEqDA,MAAnDlC,EAHO,EAGPA,YAAaI,EAHN,EAGMA,cAAeD,EAHrB,EAGqBA,cAHrB,OAIf,EAAKH,YAAcA,EACnB,EAAKI,cAAgBA,EACrB,EAAKD,cAAgBA,EANN,E,wEASRG,GACP,OACI,uBAAGX,UAAU,kBACY,QAApBW,EAAMuP,UAAsB,uBAAyB,yB,qCAKnD7P,EAAauL,EAAMpI,GAAO,IAAD,OACpC,OACI,kBAACsM,EAAA,EAAD,CACIxL,QAAS,WACL,EAAKjE,YAAYA,IAErB0B,QAAM,GAEN,kBAACumB,EAAA,EAAD,KACI,uBAAGtoB,UAAU,kBACR4L,IAGT,kBAACmE,EAAA,EAAD,CAAcpI,QAASnE,O,+BAKzB,IAAD,SACsB2B,KAAK5C,MAAxBG,EADH,EACGA,QAAS/B,EADZ,EACYA,MAEjB,OACI,yBAAKX,UAAW0C,EAAQ8N,MACpB,kBAAC+X,EAAA,EAAD,CACI/a,SAAS,WACTxN,UAAWwL,IAAW9I,EAAQ8lB,OAAQrjB,KAAK5C,MAAMH,QAAQqmB,cAAgB/lB,EAAQgmB,cAEjF,kBAACC,EAAA,EAAD,CAASC,gBAAiBzjB,KAAK5C,MAAMH,QAAQqmB,cACzC,kBAACviB,EAAA,EAAD,CACInC,MAAM,UACN+F,aAAW,cACXxF,QAAS,kBAAM,EAAK7D,iBACpBT,UAAWwL,IAAW9I,EAAQmmB,WAAY1jB,KAAK5C,MAAMH,QAAQqmB,cAAgB/lB,EAAQomB,OAErF,uBAAG9oB,UAAU,kBAAb,SAKJ,kBAAC6D,EAAA,EAAD,CAAY7D,UAAWwL,IAAW9I,EAAQgM,MAAOhM,EAAQqmB,MAAOzkB,QAAS,kBAAM,EAAK9D,iBAAiBsD,QAAQ,KAAKC,MAAM,UAAUilB,QAAM,GAAxI,qBAGA,kBAAC9iB,EAAA,EAAD,CAAY5B,QAAS,kBAAM,EAAK9D,kBAExB,uBAAGR,UAAU,iBAAiBP,MAAO,CAAEsE,MAAO,uBAEtCoB,KAAK5C,MAAMH,QAAQ6mB,aACb,oBACA,wBAMtB,kBAACve,EAAA,EAAD,CACI1K,UAAW0C,EAAQ+H,OACnBnG,QAAS,WACL2jB,OAAO9c,KAAK,wCAAyC,YAGzD,yBACIhL,IAAI,0BACJF,IAAKipB,SAKrB,kBAACC,EAAA,EAAD,CACIrlB,QAAQ,YACRpB,QAAS,CACLkG,MAAO4C,IAAW9I,EAAQ0mB,aAAcjkB,KAAK5C,MAAMH,QAAQqmB,cAAgB/lB,EAAQ2mB,mBAEvFle,KAAMhG,KAAK5C,MAAMH,QAAQqmB,cAEzB,yBAAKzoB,UAAW0C,EAAQgW,SACpB,kBAACxS,EAAA,EAAD,CAAY5B,QAAS,kBAAM,EAAK7D,kBAC3B0E,KAAKmkB,WAAW3oB,KAGzB,kBAAC0H,EAAA,EAAD,MACA,kBAACkhB,EAAA,EAAD,KAEQpkB,KAAKqkB,eAAe,cAAe,OAAQ,QAG3CrkB,KAAKqkB,eAAe,WAAY,WAAY,YAEhD,kBAACnhB,EAAA,EAAD,MAEIlD,KAAKqkB,eAAe,OAAQ,WAAY,cAGxCrkB,KAAKqkB,eAAe,QAAS,QAAS,SAGtCrkB,KAAKqkB,eAAe,WAAY,qBAAsB,YAE1D,kBAACnhB,EAAA,EAAD,MAEIlD,KAAKqkB,eAAe,OAAQ,cAAe,QAG3CrkB,KAAKqkB,eAAe,aAAc,UAAW,cAG7CrkB,KAAKqkB,eAAe,SAAU,UAAW,UAGzCrkB,KAAKqkB,eAAe,aAAc,UAAW,cAEjD,kBAACnhB,EAAA,EAAD,MAEIlD,KAAKqkB,eAAe,SAAU,eAAgB,UAG9CrkB,KAAKqkB,eAAe,QAAS,cAAe,aAKhD,kBAACnhB,EAAA,EAAD,MAEIlD,KAAKqkB,eAAe,QAAS,kBAAmB,SAGhDrkB,KAAKqkB,eAAe,SAAU,UAAW,YAIrD,0BAAMxpB,UAAW0C,EAAQgf,SACrB,yBAAK1hB,UAAW0C,EAAQgW,UACvBvT,KAAK5C,MAAMH,QAAQ6mB,aAAe,kBAAC,EAAD,MAAqB,KACxD,6BACA,kBAACrZ,EAAA,EAAD,CAAMhG,IAAI,EAAMnK,MAAO,CAAEoQ,gBAAiB,MACtC,kBAAC,GAAD,a,GAxJJ4Z,IAAMrpB,WAqKXqI,OACXnB,YAvPW,SAAA3G,GAAK,MAAK,CACrB6P,KAAM,CACFC,SAAU,EACViZ,OAAQ,EACRC,SAAU,SACVnc,SAAU,WACV1N,QAAS,QAEbipB,KAAM,CACFtY,SAAU,GAEd+X,OAAQ,CACJkB,OAAQ/oB,EAAM+oB,OAAOE,OAAS,EAC9Bpc,SAAU,OACVqc,WAAYlpB,EAAMmpB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQrpB,EAAMmpB,YAAYE,OAAOC,MACjCC,SAAUvpB,EAAMmpB,YAAYI,SAASC,iBAG7CzB,YAAa,CACTpnB,WAtBY,IAuBZ5B,MAAM,eAAD,OAvBO,IAuBP,OACLmqB,WAAYlpB,EAAMmpB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQrpB,EAAMmpB,YAAYE,OAAOC,MACjCC,SAAUvpB,EAAMmpB,YAAYI,SAASE,kBAG7CvB,WAAY,CACRvnB,WAAY,GACZC,YAAa,IAEjBunB,KAAM,CACFhpB,QAAS,QAEbspB,YAAa,CACT5b,SAAU,WACV6c,OAAQ,QACRC,WAAY,SACZ5qB,MAxCY,IAyCZmqB,WAAYlpB,EAAMmpB,YAAYC,OAAO,QAAS,CAC1CC,OAAQrpB,EAAMmpB,YAAYE,OAAOC,MACjCC,SAAUvpB,EAAMmpB,YAAYI,SAASE,kBAG7Cf,iBAAiB,aACbkB,UAAW,SACXV,WAAYlpB,EAAMmpB,YAAYC,OAAO,QAAS,CAC1CC,OAAQrpB,EAAMmpB,YAAYE,OAAOC,MACjCC,SAAUvpB,EAAMmpB,YAAYI,SAASC,gBAEzCzqB,MAAOiB,EAAM+H,QAAQ,IACpB/H,EAAM6pB,YAAYC,GAAG,MAAQ,CAC1B/qB,MAAOiB,EAAM+H,QAAQ,KAG7BgQ,QAAQ,aACJ5Y,QAAS,OACTwM,WAAY,SACZiE,eAAgB,WAChB1H,QAAS,SACNlI,EAAM0e,OAAO3G,SAEpBgJ,QAAS,CACLpR,UAAW,QACXG,SAAU,EACVlJ,gBAAiB5G,EAAM8B,QAAQkG,WAAW+hB,QAC1C7hB,QAASlI,EAAM+H,QAAQ,IAE3BgG,MAAO,CACHkO,OAAQ,WAEZnS,OAAQ,CACJhJ,OAAQ,GACRmb,OAAQ,WAEZ+N,UAAW,CACPjrB,MAAO,GACP8G,OAAQ,MA0KO,CAAEud,WAAW,IAChC9hB,YAAQ,SAAAC,GAGJ,MAAO,CACHE,QAHgBF,EAAZE,UAMR,SAAAC,GACI,OAAOC,YAAmBvB,GAAasB,KAVpCoG,CAYb4f,I,UChRIuC,G,mLAGF,OAAOC,aAAe,eAAI1lB,KAAK5C,MAAMH,QAAQzB,U,+BAI7C,OACE,kBAACmqB,EAAA,EAAD,CAAenqB,MAAOwE,KAAK4lB,YACzB,yBAAK/qB,UAAU,OACb,kBAAC,GAAD,Y,GAVQI,aAiBH6B,eAAQ,SAAAC,GAGrB,MAAO,CACHE,QAHgBF,EAAZE,UAMR,SAAAC,GACI,OAAOC,YAAmB,GAAID,IARrBJ,CASV2oB,ICtCCI,GAAcC,QACW,cAA7BhD,OAAOiD,SAASC,UAEe,UAA7BlD,OAAOiD,SAASC,UAEhBlD,OAAOiD,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvB1L,UAAU2L,cACPC,SAASF,GACThoB,KAAK,SAAAmoB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzpB,QACf0d,UAAU2L,cAAcO,WAK1B3d,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB2d,MAAM,SAAA/f,GACLmC,QAAQnC,MAAM,4CAA6CA,KC/EjE,IAqBe5J,GArBD,CACV+jB,YAAa,cACbsC,cAAc,EACdQ,cAAc,EAEdtoB,MAAO,CACH8B,QAAS,CACLlC,KAAM,QACNoH,QAAS,CACLF,KAAM,WAEVD,UAAW,CACPC,KAAM,YAGdukB,WAAY,CACRC,iBAAiB,KCyBd7pB,OAtCf,SAAiBF,EAAOgH,GACtB,GAAqB,qBAAVhH,EACT,OAAOgqB,GAET,OAAQhjB,EAAO3I,MACb,IAAK,cACH,OAAO,eACF2B,EADL,CAEEikB,YAAajd,EAAO5I,OAExB,IAAK,gBACH,OAAO,eACF4B,EADL,CAEE+mB,cAAe/mB,EAAM+mB,eAEzB,IAAK,gBACH,OAAO,eACF/mB,EADL,CAEEumB,cAAevmB,EAAMumB,eAOzB,IAAK,wBACH,OAAO,eACFvmB,EADL,CAEEvB,MAAM,eACDuB,EAAMvB,MADN,GAEAia,KAAEuR,IAAIjqB,EAAN,gBAAsBgH,EAAOrI,MAAQqI,EAAOpI,UAGrD,QACE,OAAOoB,ICnBEC,OAhBf,SAAcD,EAAOgH,GACjB,GAAqB,qBAAVhH,EACP,OAAOgqB,GAEX,OAAQhjB,EAAO3I,MACX,IAAK,cACD,OAAO,eACA2B,EADP,CAEI8B,KAAMkF,EAAOlF,OAErB,QACI,OAAO9B,ICyEJkQ,GArBL,CACN,CACI7I,GAAI,EACJ6iB,IAAK,GACLla,MAAO,OACPC,OAAQ,GAEZ,CACI5I,GAAI,EACJ6iB,IAAK,GACLla,MAAO,QACPC,OAAQ,GAEZ,CACI5I,GAAI,EACJ6iB,IAAK,GACLla,MAAO,SACPC,OAAQ,ICrEDC,OAXf,SAAalQ,EAAOgH,GAChB,MAAqB,qBAAVhH,EACAgqB,IAEHhjB,EAAO3I,KAEA2B,ICqCJmqB,GA7CC,CACZ,CACI9iB,GAAI,EACJ4J,SAAU,WACViE,UAAU,EACV9E,MAAO,CACH,CACI/I,GAAI,EACJyK,KAAM,OACNvB,WAAW,EACXwB,MAAO,GACPC,WAAY,GAEhB,CACI3K,GAAI,GACJyK,KAAM,QACNvB,WAAW,EACXwB,MAAO,gBACPC,WAAY,GAEhB,CACI3K,GAAI,GACJyK,KAAM,MACNvB,WAAW,EACXwB,MAAO,GACPC,WAAY,KAIxB,CACI3K,GAAI,EACJ4J,SAAU,SACViE,UAAU,EACV9E,MAAO,CACH,CACI/I,GAAI,GACJyK,KAAM,aACNvB,WAAW,EACXwB,MAAO,GACPC,WAAY,M,oBC2FboY,OA/Hf,WAAgE,IAA3CpqB,EAA0C,uDAAlCqqB,KAAWL,IAAehjB,EAAQ,uCAC3D,OAAQA,EAAO3I,MACX,IAAK,gBACD,OAAO2B,EAEX,IAAK,WAAa,IACNuB,EAASyF,EAATzF,KAER,OAAIA,GAAQA,EAAK+oB,eAAe,OAAS/oB,EAAK+oB,eAAe,QAClDD,KAAWrqB,EAAM+H,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAO9F,EAAK8F,GACV,eACAoG,EADP,CAEI2C,MAAM,GAAD,oBACE3C,EAAK2C,OADP,gBAEM7O,EAAKsQ,UAKbpE,KAKZzN,EAEX,IAAK,WAAa,IACNuB,EAASyF,EAATzF,KAER,OAAIA,EACM,GAAN,oBACOvB,GADP,gBAGWuB,KAKRvB,EAEX,IAAK,cAAgB,IACTuB,EAASyF,EAATzF,KAER,OAAIA,GAAQA,EAAK+oB,eAAe,MACrBD,KAAWrqB,EAAMqQ,OAAO,SAAC5C,GAC5B,OAAIA,EAAKpG,KAAO9F,EAAK8F,MAOtBrH,EAEX,IAAK,YAAc,IACPuB,EAASyF,EAATzF,KAER,OAAIA,GAAQA,EAAK+oB,eAAe,MACrBD,KAAWrqB,EAAM+H,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAO9F,EAAK8F,GACV,eACAoG,EADP,GAEOlM,GAGJ,eAAIkM,MAIZzN,EAEX,IAAK,cAAgB,IACTuB,EAASyF,EAATzF,KAER,OAAIA,GAAQA,EAAK+oB,eAAe,OAAS/oB,EAAK+oB,eAAe,QAClDD,KAAWrqB,EAAM+H,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAO9F,EAAK8F,GACV,eACAoG,EADP,CAEI2C,MAAO3C,EAAK2C,MAAMC,OAAO,SAACS,GACtB,OAAIA,EAAKzJ,KAAO9F,EAAKsQ,KAAKxK,OAO3BoG,KAKZzN,EAEX,IAAK,YAAc,IACPuB,EAASyF,EAATzF,KAER,OAAIA,GAAQA,EAAK+oB,eAAe,OAAS/oB,EAAK+oB,eAAe,QAClDD,KAAWrqB,EAAM+H,IAAI,SAAC0L,GACzB,OAAIA,EAAKpM,KAAO9F,EAAK8F,GACV,eACAoM,EADP,CAEIrD,MAAOqD,EAAKrD,MAAMrI,IAAI,SAACuI,GACnB,OAAIA,EAAKjJ,KAAO9F,EAAKsQ,KAAKxK,GACf,eACAiJ,EADP,GAEO/O,EAAKsQ,MAGLvB,MAKZmD,KAKZzT,EAEX,QACI,OAAOA,ICnGJmZ,GA3BA,CACX,CACI9R,GAAI,EACJmF,MAAO,gBACPyM,MAAO,EACP/B,KAAM,IAAIA,KACVlH,MAAO,UACPkJ,KAAM,GAEV,CACI7R,GAAI,EACJmF,MAAO,wBACPyM,MAAO,GACP/B,KAAM,IAAIA,KACVlH,MAAO,UACPkJ,KAAM,IAEV,CACI7R,GAAI,EACJmF,MAAO,UACPyM,MAAO,EACP/B,KAAM,IAAIA,KACVlH,MAAO,UACPkJ,KAAM,MCsECqR,OA1Ff,WAAoE,IAA3CvqB,EAA0C,uDAAlCqqB,KAAWL,IAAehjB,EAAQ,uCAC/D,OAAQA,EAAO3I,MACX,IAAK,gBACD,OAAO2B,EACX,IAAK,cAAgB,IACTuB,EAASyF,EAATzF,KAER,OAAIA,EACM,GAAN,oBACOvB,GADP,gBAGWuB,KAKRvB,EAEX,IAAK,eAAiB,IACVuB,EAASyF,EAATzF,KAER,OAAIA,GAAQA,EAAK+oB,eAAe,MACrBD,KAAWrqB,EAAM+H,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAO9F,EAAK8F,GACV,eACAoG,EADP,GAEOlM,GAGJ,eACAkM,MAKRzN,EAEX,IAAK,iBAAmB,IACZuB,EAASyF,EAATzF,KAER,OAAIA,GAAQA,EAAK+oB,eAAe,MACrBD,KAAWrqB,EAAMqQ,OAAO,SAAC5C,GAC5B,OAAIA,EAAKpG,KAAO9F,EAAK8F,MAOtBrH,EAEX,IAAK,WAAa,IACNuB,EAASyF,EAATzF,KAER,OAAa,IAATA,GAAeipB,MAAMjpB,GAYlBvB,EAXIqqB,KAAWrqB,EAAM+H,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAO9F,EACL,eACAkM,EADP,CAEIwL,MAAOxL,EAAKwL,MAAQ,IAGrB,eAAKxL,MAMxB,IAAK,WAAa,IACNlM,EAASyF,EAATzF,KAER,OAAa,IAATA,GAAeipB,MAAMjpB,GAYlBvB,EAXIqqB,KAAWrqB,EAAM+H,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAO9F,EACL,eACAkM,EADP,CAEIwL,MAAOxL,EAAKwL,MAAQ,IAGrB,eAAKxL,MAMxB,QACI,OAAOzN,ICjEJ+R,GAxBH,CACR,CACI1K,GAAI,EACJmF,MAAO,kBACPY,QAAS,mFACT4C,MAAO,UACPkH,KAAM,IAAIA,MAEd,CACI7P,GAAI,EACJmF,MAAO,aACPY,QAAS,IACT4C,MAAO,UACPkH,KAAM,IAAIA,MAEd,CACI7P,GAAI,EACJmF,MAAO,cACPY,QAAS,IACT4C,MAAO,UACPkH,KAAM,IAAIA,OC2CHqT,OA5Df,WAAoE,IAA3CvqB,EAA0C,uDAAlCqqB,KAAWL,IAAehjB,EAAQ,uCAC/D,OAAQA,EAAO3I,MACX,IAAK,gBACD,OAAO2B,EAEX,IAAK,WAAa,IACNuB,EAASyF,EAATzF,KAER,OAAIA,EACM,GAAN,oBACOvB,GADP,gBAGWuB,KAKRvB,EAGX,IAAK,YAAc,IACPuB,EAASyF,EAATzF,KAER,OAAIA,GAAQA,EAAK+oB,eAAe,MACrBD,KAAWrqB,EAAM+H,IAAI,SAAC0F,GACzB,OAAIA,EAAKpG,KAAO9F,EAAK8F,GACV,eACAoG,EADP,GAEOlM,GAGJ,eACAkM,MAKRzN,EAGX,IAAK,cAAgB,IACTuB,EAASyF,EAATzF,KAER,OAAIA,GAAQA,EAAK+oB,eAAe,MACrBD,KAAWrqB,EAAMqQ,OAAO,SAAC5C,GAC5B,OAAIA,EAAKpG,KAAO9F,EAAK8F,MAOtBrH,EAGX,QACI,OAAOA,IC4BJyqB,GAvFO,CAClB,CACIpjB,GAAI,EACJ0a,KAAM,iBACNE,iBAAkB,wDAClBjS,MAAO,OACPmT,KAAM,GACNC,UAAW,CACP,CACI/b,GAAI,EACJyK,KAAM,SACNuR,QAAS,CACL,CACIvR,KAAM,WACNwR,SAAS,GAEb,CACIxR,KAAM,SACNwR,SAAS,GAEb,CACIxR,KAAM,UACNwR,SAAS,GAEb,CACIxR,KAAM,SACNwR,SAAS,KAIrB,CACIjc,GAAI,EACJyK,KAAM,gBACNuR,QAAS,CACL,CACIvR,KAAM,iBACNwR,SAAS,GAEb,CACIxR,KAAM,SACNwR,SAAS,GAEb,CACIxR,KAAM,SACNwR,SAAS,GAEb,CACIxR,KAAM,kBACNwR,SAAS,OAM7B,CACIjc,GAAI,EACJ0a,KAAM,yBACNE,iBAAkB,qDAClBjS,MAAO,OACPmT,KAAM,GACNC,UAAW,CACP,CACI/b,GAAI,EACJyK,KAAM,+CACNuR,QAAS,CACL,CACIvR,KAAM,iBACNwR,SAAS,GAEb,CACIxR,KAAM,QACNwR,SAAS,GAEb,CACIxR,KAAM,uCACNwR,SAAS,GAEb,CACIxR,KAAM,wBACNwR,SAAS,QCpClBU,OAxCf,SAAgBhkB,EAAOgH,GACrB,GAAqB,qBAAVhH,EACT,OAAOgqB,GAET,OAAQhjB,EAAO3I,MACb,IAAK,MACH,MAAO,GACT,IAAK,cAAgB,IACXkD,EAASyF,EAATzF,KAER,OAAIA,GAAQA,EAAK+oB,eAAe,MACvBD,KAAWrqB,EAAMqQ,OAAO,SAAC5C,GAC9B,OAAIA,EAAKpG,KAAO9F,EAAK8F,MAOlBrH,EAET,IAAK,WAAa,IACRuB,EAASyF,EAATzF,KAER,OAAIA,EACM,GAAN,oBACOvB,GADP,gBAGWuB,KAKRvB,EAET,QACE,OAAOA,IC9BE0qB,eAAgB,CAC3BxqB,WACAD,QACAiQ,OACAY,QACAqI,YACApH,SACAiS,YCLE2G,GAAQC,YAAYC,IAI1BC,IAASC,OACL,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,GAAD,OAEJK,SAASC,eAAe,SfCb,WACb,GAA6C,kBAAmBvN,UAAW,CAGzE,GADkB,IAAIwN,IAAIC,cAAwBpF,OAAOiD,UAC3CoC,SAAWrF,OAAOiD,SAASoC,OAIvC,OAGFrF,OAAOsF,iBAAiB,OAAQ,WAC9B,IAAMjC,EAAK,UAAM+B,cAAN,sBAEPrC,KAiDV,SAAiCM,GAE/BloB,MAAMkoB,GACHhoB,KAAK,SAAAC,GAGkB,MAApBA,EAASiqB,SACuD,IAAhEjqB,EAASkqB,QAAQC,IAAI,gBAAgBtP,QAAQ,cAG7CwB,UAAU2L,cAAcoC,MAAMrqB,KAAK,SAAAmoB,GACjCA,EAAamC,aAAatqB,KAAK,WAC7B2kB,OAAOiD,SAAS2C,aAKpBxC,GAAgBC,KAGnBS,MAAM,WACL5d,QAAQC,IACN,mEArEA0f,CAAwBxC,GAIxB1L,UAAU2L,cAAcoC,MAAMrqB,KAAK,WACjC6K,QAAQC,IACN,+GAMJid,GAAgBC,Me1BxByC,K","file":"static/js/main.ca1af751.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.9577f6bf.jpg\";","import React, { Component } from 'react';\r\nimport logo from '../logo.svg';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nclass ExtendedHeader extends Component {\r\n    render() {\r\n        const style = {\r\n            width: \"90%\",\r\n            marginTop: -25,\r\n            marginBottom: 40,\r\n            textAlign: 'center',\r\n            display: 'inline-block',\r\n        };\r\n        return (\r\n            <Paper\r\n                style={style}\r\n                elevation={10}\r\n            >\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <h1 className=\"App-title\">Project // NEON /</h1>\r\n                    <p>Version 0.8.9 // BY: Mihajlo Marjanović</p>\r\n                    <p>Built with React.js & Redux.js & Material UI</p>\r\n                </header>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExtendedHeader;","export function page_change(page) {\r\n    return {\r\n        type: \"PAGE_CHANGE\",\r\n        page\r\n    }\r\n}\r\n\r\nexport function toggle_header() {\r\n    return {\r\n        type: \"TOGGLE_HEADER\",\r\n    }\r\n}\r\n\r\nexport function toggle_drawer() {\r\n    return {\r\n        type: \"TOGGLE_DRAWER\",\r\n    }\r\n}\r\n\r\nexport function togge_theme(theme) {\r\n    return {\r\n        type: \"TOGGLE_THEME\",\r\n        theme\r\n    }\r\n}\r\n\r\nexport function change_theme_property(prop, value) {\r\n    return {\r\n        type: \"CHANGE_THEME_PROPERTY\",\r\n        prop,\r\n        value\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport moment from 'moment'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport * as GeneralActions from \"../../Actions/GeneralActions\";\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 275,\r\n        maxWidth: 435,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: 10,\r\n    },\r\n    title: {\r\n        margin: 7\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    cardTitle: {\r\n        fontSize: 14,\r\n        textAlign: 'left'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        margin: 3,\r\n    },\r\n    actions: {\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nconst WelcomePage = (props) => {\r\n    const { page_change, toggle_header, toggle_drawer, change_theme_property, General: { theme: { palette: { type: themeType } } } } = props;\r\n\r\n    const classes = useStyles();\r\n    const [fact, setFact] = useState('');\r\n    const [currentTime, setCurrentTime] = useState(moment().format('MM/DD/YYYY HH:mm:ss'));\r\n\r\n    useEffect(() => {\r\n        let url = `http://numbersapi.com/${moment().format('M/D')}/date`;\r\n        fetch(url, {\r\n            mode: 'no-cors'\r\n        })\r\n            .then((response) => response.text())\r\n            .then(data => {\r\n                setFact(data)\r\n            })\r\n    }, [])\r\n\r\n    // console.log(themeType)\r\n    useEffect(() => {\r\n        var timeInt = setInterval(() => {\r\n            return setCurrentTime(moment().format('MM/DD/YYYY HH:mm:ss'));\r\n        }, 1000)\r\n\r\n        return () => clearInterval(timeInt);\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant='h4' color=\"secondary\" className={classes.title}>\r\n                WELCOME, {props.User.name} !\r\n            </Typography>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography className={classes.cardTitle} color=\"secondary\" gutterBottom>\r\n                        On this day\r\n                    </Typography>\r\n                    {fact}\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\" onClick={() => { page_change('Facts') }}>See more fun facts</Button>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography className={classes.cardTitle} color=\"secondary\" gutterBottom>\r\n                        Current time\r\n                    </Typography>\r\n                    {currentTime}\r\n                </CardContent>\r\n            </Card>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography variant='h6'>\r\n                        Feel free to explore NEON\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.actions}>\r\n                    <Button variant=\"contained\" size=\"small\" color={\"primary\"} className={classes.button}\r\n                        onClick={() => { toggle_drawer() }}\r\n                    >\r\n                        <i className=\"material-icons\">\r\n                            menu_open\r\n                        </i>\r\n                        Open Menu\r\n                     </Button>\r\n                    <Button variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.button}\r\n                        onClick={() => { toggle_header() }}\r\n                    >\r\n                        <i className=\"material-icons\">\r\n                            info\r\n                        </i>\r\n                        See Details\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"small\" className={classes.button}\r\n                        onClick={() => { page_change('UserPage') }}\r\n                    >\r\n                        <i className=\"material-icons\">\r\n                            settings_input_component\r\n                        </i>\r\n                        Change Settings\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={themeType === 'dark'}\r\n                                onChange={() => change_theme_property('palette.type', themeType === 'dark' ? 'light' : 'dark')}\r\n                                value=\"theme\"\r\n                                className={classes.switch}\r\n                            />\r\n                        }\r\n                        label=\"Switch to the dark side?\"\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(state => {\r\n    const { User, General } = state;\r\n\r\n    return {\r\n        User,\r\n        General\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(WelcomePage);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Paper,\r\n    TextField,\r\n    Button,\r\n    Fab,\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    IconButton\r\n} from '@material-ui/core';\r\n\r\nconst styles = theme => {\r\n    // console.log(theme)\r\n    return {\r\n        paperStyle: {\r\n            width: \"380px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"10%\"\r\n        },\r\n        operationsDiv: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.palette.secondary.main,\r\n            color: \"white\"\r\n        },\r\n        operationsButtons: {\r\n            fontSize: \"30px\",\r\n            color: \"white\"\r\n        },\r\n        numbersDiv: {\r\n            backgroundColor: theme.palette.grey,\r\n            // color: grey400,\r\n        },\r\n        flatButton: {\r\n            height: \"60px\",\r\n            width: \"50px\",\r\n            borderRadius: \"100%\",\r\n            fontSize: '32px'\r\n        },\r\n        actionButton: {\r\n            marginLeft: 17,\r\n            backgroundColor: theme.palette.primary.main,\r\n            fontSize: \"20px\",\r\n        },\r\n        inputStyle: {\r\n            fontSize: 32,\r\n            textAlign: \"right\",\r\n            width: \"70%\",\r\n        },\r\n        iconButtons: {\r\n            display: \"inline-block\",\r\n        }\r\n    }\r\n}\r\n\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fN: \"\",\r\n            operation: \"\",\r\n            sN: \"\",\r\n            first: true,\r\n        }\r\n    }\r\n\r\n    result() {\r\n        if (!this.state.first && this.state.sN) {\r\n            let fNum = parseInt(this.state.fN, 10);\r\n            let sNum = parseInt(this.state.sN, 10);\r\n            switch (this.state.operation) {\r\n                case \"+\":\r\n                    this.setState({\r\n                        fN: fNum + sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"-\":\r\n                    this.setState({\r\n                        fN: fNum - sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"×\":\r\n                    this.setState({\r\n                        fN: fNum * sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"÷\":\r\n                    this.setState({\r\n                        fN: fNum / sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                default:\r\n                    return\r\n            }\r\n        }\r\n    }\r\n\r\n    addNum(num) {\r\n        if (this.state.first) {\r\n            this.setState({\r\n                fN: this.state.fN.toString() + num\r\n            })\r\n        } else {\r\n            this.setState({\r\n                sN: this.state.sN.toString() + num\r\n            })\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.setState({\r\n            fN: \"\",\r\n            operation: \"\",\r\n            sN: \"\",\r\n            first: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        const {fN, first, sN, operation} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Paper className={classes.paperStyle} elevation={8}>\r\n                    <TextField\r\n                        placeholder=\"insert number\"\r\n                        value={first ? fN : sN}\r\n                        type=\"number\"\r\n                        autoFocus\r\n                        variant='outlined'\r\n                        className={classes.inputStyle}\r\n                        label={first ? fN : fN + operation + sN}\r\n                        onInput={\r\n                            (event) => {\r\n                                first ?\r\n                                    this.setState({\r\n                                        fN: event.target.value\r\n                                    })\r\n                                    :\r\n                                    this.setState({\r\n                                        sN: event.target.value\r\n                                    })\r\n                            }\r\n                        }\r\n                    />\r\n                    <IconButton className={classes.iconButtons} name={\"del\"} label=\"del\" onClick={\r\n                        (event) => {\r\n                            let fNum = \"\" + fN;\r\n                            let sNum = \"\" + sN;\r\n                            if (first) {\r\n                                if (fNum !== \"\") {\r\n                                    this.setState({\r\n                                        fN: fNum.substring(0, fNum.length - 1)\r\n                                    })\r\n                                }\r\n                            } else {\r\n                                if (sNum !== \"\") {\r\n                                    this.setState({\r\n                                        sN: sNum.substring(0, sNum.length - 1)\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                    }>\r\n                        <i className=\"material-icons\">\r\n                            backspace\r\n                        </i>\r\n                    </IconButton>\r\n                    <IconButton className={classes.iconButtons} onClick={() => { this.clearAll() }}>\r\n                        <i className=\"material-icons\">\r\n                            clear\r\n                        </i>\r\n                    </IconButton>\r\n                    <br />\r\n                    <Paper elevation={4} className={classes.operationsDiv}>\r\n                        <Button\r\n                            style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }}\r\n                            label=\"+\"\r\n                            className={classes.operationsButtons}\r\n                            onClick={\r\n                                (event) => {\r\n                                    this.setState({\r\n                                        operation: \"+\",\r\n                                        first: false,\r\n                                    })\r\n                                }\r\n                            }> + </Button>\r\n                        <Button\r\n                            style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }}\r\n                            value={\"-\"}\r\n                            label=\"-\"\r\n                            className={classes.operationsButtons}\r\n                            onClick={\r\n                                (event) => {\r\n                                    this.setState({\r\n                                        operation: \"-\",\r\n                                        first: false,\r\n                                    })\r\n                                }\r\n                            }> - </Button>\r\n                        <Button\r\n                            style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }}\r\n                            value={\"×\"}\r\n                            label=\"×\"\r\n                            className={classes.operationsButtons}\r\n                            onClick={\r\n                                (event) => {\r\n                                    this.setState({\r\n                                        operation: \"×\",\r\n                                        first: false,\r\n                                    })\r\n                                }\r\n                            }> × </Button>\r\n                        <Button\r\n                            style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }}\r\n                            value={\"÷\"}\r\n                            label=\"÷\"\r\n                            className={classes.operationsButtons}\r\n                            onClick={\r\n                                (event) => {\r\n                                    this.setState({\r\n                                        operation: \"÷\",\r\n                                        first: false,\r\n                                    })\r\n                                }\r\n                            }> ÷ </Button>\r\n                    </Paper>\r\n                    <Table className={classes.numbersDiv}>\r\n                        <TableBody>\r\n                            <TableRow >\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"7\" onClick={() => {\r\n                                        this.addNum(7)\r\n                                    }}> 7 </Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"8\" onClick={() => {\r\n                                        this.addNum(8)\r\n                                    }}> 8</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"9\" onClick={() => {\r\n                                        this.addNum(9)\r\n                                    }}> 9</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"4\" onClick={() => {\r\n                                        this.addNum(4)\r\n                                    }}> 4</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"5\" onClick={() => {\r\n                                        this.addNum(5)\r\n                                    }}> 5</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"6\" onClick={() => {\r\n                                        this.addNum(6)\r\n                                    }}> 6</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"1\" onClick={() => {\r\n                                        this.addNum(1)\r\n                                    }}> 1</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"2\" onClick={() => {\r\n                                        this.addNum(2)\r\n                                    }}> 2</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"3\" onClick={() => {\r\n                                        this.addNum(3)\r\n                                    }}> 3</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\".\" onClick={() => {\r\n                                        this.addNum(\".\")\r\n                                    }} disabled={true}> .</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"0\" onClick={() => {\r\n                                        this.addNum(0)\r\n                                    }}> 0</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Fab className={classes.actionButton} elevation={4} onClick={() => {\r\n                                        this.result()\r\n                                    }}>\r\n                                        =\r\n                                    </Fab>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Calculator);\r\n","export function name_change(name) {\r\n    return { \r\n        type: \"NAME_CHANGE\",\r\n        name\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { CompactPicker, SliderPicker } from 'react-color';\r\n\r\nimport * as UserActions from \"../.././Actions/UserActions\";\r\nimport * as GeneralActions from \"../.././Actions/GeneralActions\";\r\n\r\nconst MainActions = {\r\n    ...UserActions,\r\n    ...GeneralActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    UserPaper: {\r\n        margin: theme.spacing(2),\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        padding: 20\r\n    },\r\n\r\n    textInput: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    section: {\r\n        margin: theme.spacing(3)\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    }\r\n});\r\n\r\nclass UserPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { name_change } = this.props\r\n        this.name_change = name_change\r\n\r\n        this.state = {\r\n            userName: \"\",\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, General: { theme: { palette: { type: themeType, primary: { main: primaryColor }, secondary: { main: secondaryColor } } } } } = this.props;\r\n\r\n        return (\r\n            <Paper elevation={10} className={classes.UserPaper}>\r\n                <TextField\r\n                    id=\"userName-changer\"\r\n                    variant=\"outlined\"\r\n                    label=\"Your name\"\r\n                    className={classes.textInput}\r\n                    value={this.props.User.name}\r\n                    onChange={(event) => {\r\n                        this.name_change(event.target.value)\r\n                    }}\r\n                />\r\n                <Divider variant=\"middle\" />\r\n                <div className={classes.section}>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={themeType === 'dark'}\r\n                            onChange={() => this.props.change_theme_property('palette.type', themeType === 'dark' ? 'light' : 'dark')}\r\n                            value=\"theme\"\r\n                            className={classes.switch}\r\n                        />\r\n                    }\r\n                    label=\"Switch to the dark side?\"\r\n                />\r\n                </div>\r\n                <div className={classes.section}>\r\n                    <Typography variant='subtitle1' color=\"primary\">\r\n                        Change PRIMARY color\r\n                    </Typography>\r\n                    <CompactPicker\r\n                        color={primaryColor}\r\n                        onChangeComplete={(value) => this.props.change_theme_property('palette.primary.main', value.hex)}\r\n                    />\r\n                </div>\r\n                <div className={classes.section}>\r\n                    <Typography variant='subtitle1' color=\"secondary\">\r\n                        Change SECONDARY color\r\n                    </Typography>\r\n                    <SliderPicker\r\n                        color={secondaryColor}\r\n                        onChangeComplete={(value) => this.props.change_theme_property('palette.secondary.main', value.hex)}\r\n                    />\r\n                </div>\r\n                <Divider variant=\"middle\" />\r\n                <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\r\n                    Delete your stats\r\n                    <i className=\"material-icons\" style={{ marginLeft: \"7px\" }}>\r\n                        delete_forever\r\n                    </i>\r\n                </Button>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { User, General } = state;\r\n\r\n        return {\r\n            User,\r\n            General\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(UserPage);","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport moment from 'moment';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    chip: {\r\n        display: \"block\",\r\n        marginTop: theme.spacing(1),\r\n    }\r\n});\r\n\r\nclass Stopwatch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateDisplay = this.updateDisplay.bind(this);\r\n\r\n        this.state = {\r\n            display: \"00:00:00\",\r\n            flags: [],\r\n            action: \"pause\",\r\n            time: null\r\n        }\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.initial();\r\n    }\r\n\r\n    renderDisplay() {\r\n        return (\r\n            <h1>\r\n                {this.state.display}\r\n            </h1>\r\n        )\r\n    }\r\n\r\n    updateDisplay() {\r\n        this.setState({\r\n            time: moment(this.state.time.add(1, \"second\"))\r\n        }, () => {\r\n            this.setState({\r\n                display: moment(this.state.time).format(\"HH:mm:ss\")\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    initial() {\r\n        this.setState({\r\n            display: \"00:00:00\",\r\n            flags: [],\r\n            action: \"pause\",\r\n            time: null\r\n        });\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    setFlag() {\r\n        this.setState({\r\n            flags: [\r\n                ...this.state.flags,\r\n                {\r\n                    ID: Math.floor(Math.random() * 1000),\r\n                    time: this.state.display\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    renderControls() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fade in={true}>\r\n                <div>\r\n                    <Tooltip title={this.state.action === \"start\" ? \"Put a flag\" : \"Reset\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                            onClick={() => {\r\n                                this.state.action === \"start\"\r\n                                    ? this.setFlag()\r\n                                    : this.initial()\r\n                            }}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                {this.state.action === \"start\" ? \"outlined_flag\" : \"restore\"}\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        color=\"primary\"\r\n                        className={classes.fab}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n                                time: this.state.display === \"00:00:00\"\r\n                                    ? moment(\"00:00:00\", \"HH:mm:ss\")\r\n                                    : this.state.time\r\n                            }, () => {\r\n                                if (this.state.action === \"start\") {\r\n                                    this.timer = setInterval(this.updateDisplay, 1000);\r\n                                } else {\r\n                                    clearInterval(this.timer);\r\n                                }\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                            {this.state.action === \"start\" ? \"pause\" : \"play_arrow\"}\r\n                        </i>\r\n                        {this.state.action === \"start\" ? \"Pause\" : \"Start\"}\r\n                    </Fab>\r\n\r\n                    <Tooltip title={\"Pin to Home\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                add_location\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n    renderFlags() {\r\n        const { flags } = this.state;\r\n        if (!flags || !flags.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    flags.map((flag, index) => {\r\n                        return (\r\n                            <div\r\n                                className={classes.chip}\r\n                                key={flag.ID}\r\n                            >\r\n                                <Badge\r\n                                    badgeContent={index + 1}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    <Chip\r\n                                        avatar={\r\n                                            <Avatar>\r\n                                                <i className=\"material-icons\">\r\n                                                    flag\r\n                                                </i>\r\n                                            </Avatar>\r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        label={flag.time}\r\n\r\n                                    />\r\n                                </Badge>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderDisplay()}\r\n                {this.renderControls()}\r\n                {this.renderFlags()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Stopwatch);","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nclass Success extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.props.open}\r\n                autoHideDuration={this.props.autoHideDuration ? this.props.autoHideDuration : 3000}\r\n                onClose={this.props.handleClose}\r\n            >\r\n                <SnackbarContent\r\n                    className={classNames(classes.success)}\r\n                    aria-describedby=\"client-snackbar\"\r\n                    message={\r\n                        <span id=\"client-snackbar\" className={classes.message}>\r\n                            <i className={classNames(classes.icon, classes.iconVariant, \"material-icons\")}>\r\n                                check_circle_outline\r\n                            </i>\r\n                            {this.props.text.length ? this.props.text : \"Copied to clipboard!\"}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.props.handleClose}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                close\r\n                            </i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Success);","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport Success from '../../../Components/SnackBars/SnackSuccess';\r\n\r\nimport moment from 'moment';\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    chip: {\r\n        display: \"block\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    InputFields: {\r\n        margin: 7,\r\n    }\r\n});\r\n\r\nclass Countdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateDisplay = this.updateDisplay.bind(this);\r\n        this.handleSBClose = this.handleSBClose.bind(this);\r\n\r\n        this.state = {\r\n            display: \"00:00:00\",\r\n            action: \"pause\",\r\n            time: {\r\n                h: 0,\r\n                m: 0,\r\n                s: 20\r\n            },\r\n            snackBarSuccess: false\r\n        }\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.initial();\r\n    }\r\n\r\n    handleInputChange(label, value) {\r\n        this.setState({\r\n            time: {\r\n                ...this.state.time,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    makeOptionsArr(label) {\r\n        if (label === \"h\") {\r\n            let arr = [];\r\n            for (let i = 0; i < 24; i++) {\r\n                let obj = {\r\n                    value: i,\r\n                    label: i,\r\n                }\r\n                arr.push(obj);\r\n            }\r\n\r\n            return arr;\r\n        }\r\n\r\n        let arr = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            let obj = {\r\n                value: i,\r\n                label: i,\r\n            }\r\n            arr.push(obj);\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    renderDisplay() {\r\n        const { classes } = this.props;\r\n        if (this.state.display === \"00:00:00\") {\r\n            return (\r\n                <div className={classes.InputFields}>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Hours\"\r\n                        value={this.state.time.h}\r\n                        onChange={(e) => this.handleInputChange('h', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">H</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"h\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Minutes\"\r\n                        value={this.state.time.m}\r\n                        onChange={(e) => this.handleInputChange('m', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">M</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"m\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Seconds\"\r\n                        value={this.state.time.s}\r\n                        onChange={(e) => this.handleInputChange('s', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">S</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"s\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <h1>\r\n                {moment(this.state.display).format(\"HH:mm:ss\")}\r\n            </h1>\r\n        )\r\n    }\r\n\r\n    updateDisplay() {\r\n        if (this.state.display.format(\"HH:mm:ss\") === \"00:00:00\") {\r\n            clearInterval(this.timer)\r\n            this.initial();\r\n            this.setState({\r\n                snackBarSuccess: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                display: this.state.display.subtract(1, \"second\")\r\n            })\r\n        }\r\n    }\r\n\r\n    initial() {\r\n        this.setState({\r\n            display: \"00:00:00\",\r\n            action: \"pause\",\r\n            time: {\r\n                h: 0,\r\n                m: 0,\r\n                s: 20\r\n            }\r\n        });\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    handleStartPause() {\r\n        if (this.state.display === \"00:00:00\") {\r\n            const { time } = this.state;\r\n            this.setState({\r\n                display: moment(`${time.h}:${time.m}:${time.s}`, \"HH:mm:ss\"),\r\n            });\r\n            this.timer = setInterval(this.updateDisplay, 1000);\r\n            return;\r\n        }\r\n\r\n        if (this.state.action === \"pause\") {\r\n            clearInterval(this.timer);\r\n            return;\r\n        } else {\r\n            this.timer = setInterval(this.updateDisplay, 1000);\r\n            return;\r\n        }\r\n\r\n        /* this.setState({\r\n            action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n            time: this.state.display === \"00:00:00\"\r\n                ? moment(\"00:00:00\", \"HH:mm:ss\")\r\n                : this.state.time\r\n        }, () => {\r\n            if (this.state.action === \"start\") {\r\n                this.timer = setInterval(this.updateDisplay, 1000);\r\n            } else {\r\n                clearInterval(this.timer);\r\n            }\r\n        }) */\r\n    }\r\n\r\n    renderControls() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fade in={true}>\r\n                <div>\r\n                    <Tooltip title={\"Reset\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                            onClick={() => {\r\n                                this.initial()\r\n                            }}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                {\"restore\"}\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        color=\"primary\"\r\n                        className={classes.fab}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n                            }, () => {\r\n                                this.handleStartPause()\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                            {this.state.action === \"start\" ? \"pause\" : \"play_arrow\"}\r\n                        </i>\r\n                        {this.state.action === \"start\" ? \"Pause\" : \"Start\"}\r\n                    </Fab>\r\n\r\n                    <Tooltip title={\"Pin to Home\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                add_location\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n    renderFlags() {\r\n        const { flags } = this.state;\r\n        if (!flags || !flags.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    flags.map((flag, index) => {\r\n                        return (\r\n                            <div\r\n                                className={classes.chip}\r\n                                key={flag.ID}\r\n                            >\r\n                                <Badge\r\n                                    badgeContent={index + 1}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    <Chip\r\n                                        avatar={\r\n                                            <Avatar>\r\n                                                <i className=\"material-icons\">\r\n                                                    flag\r\n                                                </i>\r\n                                            </Avatar>\r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        label={flag.time}\r\n                                    />\r\n                                </Badge>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSBClose() {\r\n        this.setState({\r\n            snackBarSuccess: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderDisplay()}\r\n                {this.renderControls()}\r\n                {this.renderFlags()}\r\n                <Success\r\n                    open={this.state.snackBarSuccess}\r\n                    handleClose={this.handleSBClose}\r\n                    text={\"Countdown finished!\"}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Countdown);","import React, { Component, Fragment } from 'react';\r\n\r\nimport DatePicker from 'material-ui/DatePicker';\r\nimport _ from \"lodash\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Stopwatch from \"./Components/StopWatch.js\";\r\nimport Countdown from \"./Components/Countdown.js\";\r\n\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport * as moment from 'moment';\r\n\r\nimport {\r\n    cyan500,\r\n    pinkA200,\r\n} from 'material-ui/styles/colors';\r\n\r\nconst styles = theme => ({\r\n    Menu: {\r\n        width: '100%',\r\n        maxWidth: 240,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginRight: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    Content: {\r\n        width: '100%',\r\n        maxWidth: 300,\r\n        backgroundColor: theme.palette.background.paper,\r\n        minHeight: 100,\r\n        height: \"auto\",\r\n        padding: 75,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n    fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        marginRight: \"10px\"\r\n    },\r\n\r\n    Avatar: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        marginRight: 10,\r\n    },\r\n\r\n    newRow: {\r\n        display: 'block'\r\n    }\r\n});\r\n\r\nclass Time extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            compare: {\r\n                date1: moment().unix() * 1000,\r\n                date2: moment().unix() * 1000,\r\n            },\r\n            Menu: [\r\n                {\r\n                    ID: 1,\r\n                    Title: \"Compare dates\",\r\n                    Icon: \"compare_arrows\"\r\n                },\r\n                {\r\n                    ID: 2,\r\n                    Title: \"Stopwatch\",\r\n                    Icon: \"timer\"\r\n                },\r\n                {\r\n                    ID: 3,\r\n                    Title: \"Countdown\",\r\n                    Icon: \"timelapse\"\r\n                },\r\n            ],\r\n            Current: 2\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.inter = setInterval(this.updateNowInState, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.inter)\r\n    }\r\n\r\n\r\n    updateNowInState = () => {\r\n        this.setState({\r\n            now: moment()\r\n        })\r\n    }\r\n\r\n\r\n    handleDateChange = (date, key) => {\r\n        console.log(date.unix() * 1000, key)\r\n        this.setState({\r\n            compare: {\r\n                ...this.state.compare,\r\n                [key]: date.unix() * 1000\r\n            }\r\n        })\r\n    }\r\n\r\n    compareTime() {\r\n        const { classes } = this.props;\r\n        const { date1, date2 } = this.state.compare;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className={classes.newRow}>\r\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            format=\"MM/DD/YYYY\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"First date\"\r\n                            value={date1}\r\n                            onChange={(date) => this.handleDateChange(date, 'date1')}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                            style={{ display: 'block' }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n                <div className={classes.newRow}>\r\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            format=\"MM/DD/YYYY\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Second date\"\r\n                            value={date2}\r\n                            onChange={(date) => this.handleDateChange(date, 'date2')}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n                <div className={classes.newRow}>\r\n                    <Paper elevation={1} style={{ display: 'block' }}>\r\n                        <p>{moment(date1).diff(moment(date2), 'days')}</p>\r\n                    </Paper>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n\r\n    renderContentInner() {\r\n        clearInterval(this.inter);\r\n\r\n        const { classes } = this.props;\r\n\r\n        switch (this.state.Current) {\r\n            case 1: return this.compareTime();\r\n            case 2: return <Paper className={classes.Content} elevation={10}><Stopwatch /></Paper>;\r\n            case 3: return <Paper className={classes.Content} elevation={10}><Countdown /></Paper>;\r\n            default: return <Paper className={classes.Content} elevation={10}><Stopwatch /></Paper>;\r\n        }\r\n    }\r\n\r\n    renderContent() {\r\n        return (\r\n            this.renderContentInner()\r\n        );\r\n    }\r\n\r\n    renderMenu() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper elevation={3} className={classes.Menu}>\r\n                <List component=\"nav\" dense>\r\n                    {\r\n                        this.state.Menu.map((item, index) => {\r\n                            return (\r\n                                <Zoom in={true}\r\n                                    key={item.ID}\r\n                                    style={{ transitionDelay: index * 100 }}\r\n                                >\r\n                                    <div>\r\n                                        <ListItem\r\n                                            dense\r\n                                            button\r\n                                            onClick={() => {\r\n                                                this.setState({\r\n                                                    Current: item.ID\r\n                                                })\r\n                                            }}\r\n                                        >\r\n                                            <Avatar className={classes.Avatar}>\r\n                                                <i className=\"material-icons\">\r\n                                                    {item.Icon}\r\n                                                </i>\r\n                                            </Avatar>\r\n                                            <ListItemText primary={item.Title} />\r\n                                        </ListItem>\r\n                                        {\r\n                                            !(this.state.Menu.length - 1 === index)\r\n                                                ? <Divider variant=\"inset\" />\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </Zoom>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={10}\r\n                    className={\"\"}\r\n                    alignItems={\"center\"}\r\n                    direction={\"row\"}\r\n                    justify={\"center\"}\r\n                    style={{ marginTop: 50 }}\r\n                >\r\n                    {this.renderMenu()}\r\n                    <Fade in={true} style={{ transitionDelay: 100 }}>\r\n                        {this.renderContent()}\r\n                    </Fade>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Time);","import React, { Component, Fragment } from 'react';\r\n\r\n//import Paper from '@material-ui/core/Paper';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n\r\n//import Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nclass Arrays extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: null,\r\n            divisedBy: 1,\r\n        };\r\n    }\r\n\r\n    handleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    };\r\n\r\n    returnEven() {\r\n        let arr = []\r\n        for (let i = 1; i < 100; i++) {\r\n            if (i % 2 === 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnOdd() {\r\n        let arr = []\r\n        for (let i = 1; i < 100; i++) {\r\n            if (i % 2 !== 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnFibonacci() {\r\n        let arr = [0, 1]\r\n        for (let i = 0; i <= 20; i++) {\r\n            arr.push(arr[i] + arr[i + 1])\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    isPrime(n) {\r\n        if (n === 2)\r\n            return true;\r\n        if (n === 3)\r\n            return true;\r\n        if (n % 2 === 0)\r\n            return false;\r\n        if (n % 3 === 0)\r\n            return false;\r\n\r\n        let i = 5;\r\n        let w = 2;\r\n\r\n        while (i * i <= n) {\r\n            if (n % i === 0) {\r\n                return false;\r\n            }\r\n            i += w;\r\n            w = 6 - w;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    returnPrime() {\r\n        let arr = []\r\n        for (let i = 2; i < 100; i++) {\r\n            if (this.isPrime(i)) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnDivisible() {\r\n        let arr = []\r\n        for (let i = 1; i <= 100; i++) {\r\n            if (i % this.state.divisedBy === 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    renderNumbers(arr, newRow = 10) {\r\n\r\n        if (!arr || !arr.length) return null;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    arr.map((num, index) => {\r\n                        if (index % newRow === 0 && index !== 0) {\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <span>{num + \", \"}</span>\r\n                                    <br />\r\n                                </Fragment>\r\n                            )\r\n                        } else {\r\n                            return num + \",\";\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { expanded } = this.state;\r\n\r\n        const style = {\r\n            panel: {\r\n                width: \"50%\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n            },\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <ExpansionPanel expanded={expanded === 'panel1'} style={style.panel} onChange={this.handleChange('panel1')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Even numbers between 1 and 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnEven())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel2'} style={style.panel} onChange={this.handleChange('panel2')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Odd numbers between 1 and 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnOdd(), 5)}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel3'} style={style.panel} onChange={this.handleChange('panel3')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        First 20 Fibonacci numbers\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnFibonacci())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel4'} style={style.panel} onChange={this.handleChange('panel4')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Prime numbers from 1 to 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnPrime())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel5'} style={style.panel} onChange={this.handleChange('panel5')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Numbers divisible by {this.state.divisedBy === 1 ? \"...\" : this.state.divisedBy}\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnDivisible())}\r\n                    </ExpansionPanelDetails>\r\n                    <Divider />\r\n                    <ExpansionPanelActions>\r\n                        <FormControl>\r\n                            {\"Show me numbers divisible by: \"}\r\n                            <Select\r\n                                value={this.state.divisedBy}\r\n                                onChange={(event) => this.setState({ divisedBy: event.target.value })}\r\n                            >\r\n                                <MenuItem value={3}>3</MenuItem>\r\n                                <MenuItem value={4}>4</MenuItem>\r\n                                <MenuItem value={5}>5</MenuItem>\r\n                                <MenuItem value={6}>6</MenuItem>\r\n                                <MenuItem value={7}>7</MenuItem>\r\n                                <MenuItem value={8}>8</MenuItem>\r\n                                <MenuItem value={9}>9</MenuItem>\r\n                                <MenuItem value={10}>10</MenuItem>\r\n                                <MenuItem value={15}>15</MenuItem>\r\n                                <MenuItem value={25}>25</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </ExpansionPanelActions>\r\n                </ExpansionPanel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Arrays;","import React, { Component } from 'react';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                backgroundColor: this.props.Color,\r\n                height: \"400px\",\r\n                width: \"200px\"\r\n            }}>\r\n                <h1>{this.props.Number}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Card from \"./Card\";\r\n//import url from \"../.././Pictures/Uno_cards/blue_0.png\";\r\n\r\nclass Uno extends Component {\r\n    render() {\r\n        //var url = \"\";\r\n        console.log(this.props.Uno)\r\n        return (\r\n            <div>\r\n                <h1>Ovo je Uno</h1>\r\n                {\r\n                    this.props.Uno.map((item) => {\r\n                        return (\r\n                            <Card \r\n                                {...item}\r\n                                onClick={()=> {\r\n                                    \r\n                                }}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => {\r\n    const { Uno } = state;\r\n\r\n    return {\r\n        Uno,\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Uno);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        maxWidth: 720,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        contentAlign: \"center\"\r\n    },\r\n\r\n    padding: {\r\n        padding: `0 ${theme.spacing(2)}px`,\r\n    }\r\n});\r\n\r\nclass Lists extends Component {\r\n\r\n    renderBadgeNumber(item) {\r\n        var unCompleted = item.Todos.filter((task)=> {\r\n            if(!task.Completed) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n\r\n        return unCompleted.length;\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <Tabs\r\n                    value={this.props.current}\r\n                    onChange={(event, value) => {\r\n                        this.props.changeCurrent(value)\r\n                    }}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"secondary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {\r\n                        this.props.Todo.map((item) => {\r\n                            return (\r\n                                <Tab\r\n                                    label={\r\n                                        <Badge \r\n                                        className={classes.padding} \r\n                                        color=\"secondary\" \r\n                                        badgeContent={this.renderBadgeNumber(item)}>\r\n                                            {item.ListName}\r\n                                        </Badge>\r\n                                    }\r\n                                    key={item.ID}\r\n                                    value={item.ID}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </Tabs>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nLists.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Todo } = state;\r\n\r\n        return {\r\n            Todo,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators({}, dispatch);\r\n        })\r\n)(Lists);","export function new_task(data) {\r\n    return {\r\n        type: 'NEW_TASK',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function new_list(data) {\r\n    return {\r\n        type: 'NEW_LIST',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_list(data) {\r\n    return {\r\n        type: 'DELETE_LIST',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_task(data) {\r\n    return {\r\n        type: 'DELETE_TASK',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function edit_task(data) {\r\n    return {\r\n        type: 'EDIT_TASK',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_list(data) {\r\n    return {\r\n        type: 'EDIT_LIST',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nclass TaskView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_task } = this.props;\r\n        this.new_task = new_task;\r\n\r\n        this.handleTaskEdit = this.handleTaskEdit.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            Task: {\r\n                ID: \"\",\r\n                Text: \"\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 2,\r\n                ...this.props.Task\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Task.ID ? true : false;\r\n    }\r\n\r\n    handleTaskEdit(label, value) {\r\n        this.setState({\r\n            ...this.state,\r\n            Task: {\r\n                ...this.state.Task,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        var ID = Math.floor(Math.random() * 1000),\r\n            Task = {};\r\n\r\n        if (this.isEditing()) {\r\n            Task = {\r\n                ...this.state.Task,\r\n            }\r\n            this.props.edit_task({\r\n                ID: this.props.listID,\r\n                Task\r\n            })\r\n        } else {\r\n            Task = {\r\n                ...this.state.Task,\r\n                ID\r\n            }\r\n            this.props.new_task({\r\n                ID: this.props.listID,\r\n                Task\r\n            })\r\n        }\r\n\r\n        this.props.handleModalClose()\r\n    }\r\n\r\n    render() {\r\n        const { Task } = this.state;\r\n        return (\r\n            <Dialog\r\n                open={this.props.showTaskModal}\r\n                onClose={this.props.handleModalClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">{\"Edit task #\" + Task.ID}</DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={Task.Completed}\r\n                                    onChange={() => this.handleTaskEdit(\"Completed\", !Task.Completed)}\r\n                                    value={\"?\"}\r\n                                />\r\n                            }\r\n                            label={\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"text\">Name</InputLabel>\r\n                                    <Input\r\n                                        autoFocus\r\n                                        fullWidth\r\n                                        id=\"text\"\r\n                                        value={Task.Text}\r\n                                        onChange={(e) => {\r\n                                            this.handleTaskEdit(\"Text\", e.target.value)\r\n                                        }} />\r\n                                </FormControl>\r\n                            }\r\n                        />\r\n                        <br />\r\n                        <div>\r\n                            Importance level:\r\n                            <IconButton\r\n                                color={Task.Importance === 1 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 1)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    low_priority\r\n                                </i>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                color={Task.Importance === 2 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 2)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    code\r\n                                </i>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                color={Task.Importance === 3 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 3)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    priority_high\r\n                                </i>\r\n                            </IconButton>\r\n                        </div>\r\n                        {\r\n                            /*\r\n                            <Button variant=\"flat\" color=\"primary\">\r\n                                Move to list\r\n                            <i className=\"material-icons\">send</i>\r\n                            </Button>\r\n                            */\r\n                        }\r\n                        <br />\r\n                        <FormControl>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                label=\"Notes\"\r\n                                fullWidth\r\n                                multiline\r\n                                rows=\"3\"\r\n                                value={Task.Notes}\r\n                                onChange={(e) => {\r\n                                    this.handleTaskEdit(\"Notes\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleModalClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(TaskView);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n//import Chip from '@material-ui/core/Chip';\r\n\r\nimport { Theme } from '@material-ui/core/'\r\n\r\nimport TaskView from './TaskView';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 420,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    },\r\n\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    listItemCompleted: {\r\n        textDecoration: \"line-through\",\r\n        color: theme.palette.text.primary\r\n    },\r\n\r\n    arrow: {\r\n        paddingTop: \"15px\",\r\n        verticalAlign: \"center\"\r\n    },\r\n\r\n    avatar: {\r\n        margin: 10,\r\n    },\r\n\r\n    highImportance: {\r\n        color: '#fff',\r\n        backgroundColor: '#f44336'\r\n    },\r\n\r\n    normalImportance: {\r\n        color: '#fff',\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n\r\n    lowImportance: {\r\n        color: '#000',\r\n        backgroundColor: '#4caf50',\r\n    },\r\n\r\n    close: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n\r\n    buttonDelete: {\r\n        color: '#fff',\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    textColor: {\r\n        color: theme.palette.text.primary\r\n    }\r\n});\r\n\r\nclass CurrentList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { delete_task, edit_task, new_task } = this.props;\r\n        this.delete_task = delete_task;\r\n        this.edit_task = edit_task;\r\n        this.new_task = new_task;\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n        this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n\r\n        this.state = {\r\n            showCompleted: true,\r\n            showUncompleted: true,\r\n            showTaskModal: false,\r\n            showSnackbar: false,\r\n            Task: {\r\n                Importance: 2\r\n            },\r\n            lastDeleted: {}\r\n        }\r\n    }\r\n\r\n    findById(list, ID, flag) {\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].ID === ID) {\r\n                if (!flag) {\r\n                    return list[i].Todos;\r\n                } else {\r\n                    return list[i];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleUndoDelete() {\r\n        this.handleSnackbarClose()\r\n        this.new_task({\r\n            ID: this.props.currentList,\r\n            Task: this.state.lastDeleted\r\n        })\r\n    }\r\n\r\n    handleSnackbarClose() {\r\n        this.setState({\r\n            showSnackbar: false\r\n        })\r\n    }\r\n\r\n    handleModalClose() {\r\n        this.setState({\r\n            showTaskModal: false\r\n        })\r\n    }\r\n\r\n    handleChange(label) {\r\n        let value = this.state[label];\r\n        this.setState({\r\n            [label]: !value\r\n        })\r\n    }\r\n\r\n    handleTaskEdit(label, value) {\r\n        this.setState({\r\n            ...this.state,\r\n            Task: {\r\n                ...this.state.Task,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    filterTasks(flag, tasks = this.findById(this.props.Todo, this.props.currentList, false)) {\r\n        return tasks.filter((task) => {\r\n            if (flag) {\r\n                return !task.Completed;\r\n            }\r\n            return task.Completed;\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.handleModalClose()\r\n        const data = {\r\n            ID: this.props.currentList,\r\n            Task: this.state.Task\r\n        }\r\n        this.edit_task(data)\r\n    }\r\n\r\n    renderItemImportance(item) {\r\n        const { classes } = this.props;\r\n        const { Importance } = item;\r\n        switch (Importance) {\r\n            case 1: return <Avatar className={classes.lowImportance}>\r\n                <i className=\"material-icons\">low_priority</i>\r\n            </Avatar>\r\n            case 2: return <Avatar className={classes.normalImportance}>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n            </Avatar>\r\n            case 3: return <Avatar className={classes.highImportance}>\r\n                <i className=\"material-icons\">priority_high</i>\r\n            </Avatar>\r\n            default: return <Avatar className={classes.normalImportance}>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n            </Avatar>\r\n        }\r\n    }\r\n\r\n    renderItems(item) {\r\n        const { classes } = this.props;\r\n\r\n        return <ListItem\r\n            key={item.ID}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={(e) => {\r\n                if(e.target.localName !== 'div') return;\r\n                \r\n                this.setState({\r\n                    showTaskModal: true,\r\n                    Task: {\r\n                        ...this.state.Task,\r\n                        ...item\r\n                    }\r\n                })\r\n            }}\r\n            className={classes.listItem}\r\n        >\r\n            <ListItemAvatar>\r\n                {this.renderItemImportance(item)}\r\n            </ListItemAvatar>\r\n            <Checkbox\r\n                checked={item.Completed}\r\n                onChange={() => {\r\n                    const data = {\r\n                        ID: this.props.currentList,\r\n                        Task: {\r\n                            ...item,\r\n                            Completed: !item.Completed\r\n                        }\r\n                    }\r\n                    this.edit_task(data)\r\n                }}\r\n            />\r\n            <ListItemText\r\n                className={item.Completed ? classes.listItemCompleted : classes.textColor}\r\n                primary={item.Text}\r\n                // primaryTypographyProps={classes.textColor}\r\n                secondary={item.Notes\r\n                    ? <i className=\"material-icons\">notes</i>\r\n                    : null\r\n                }\r\n            />\r\n            <ListItemSecondaryAction>\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showTaskModal: true,\r\n                            Task: {\r\n                                ...this.state.Task,\r\n                                ...item\r\n                            }\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\">\r\n                        edit\r\n                    </i>\r\n                </IconButton>\r\n                <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showSnackbar: true,\r\n                            lastDeleted: {\r\n                                ...item\r\n                            }\r\n                        })\r\n                        const data = {\r\n                            ID: this.props.currentList,\r\n                            Task: item\r\n                        }\r\n                        this.delete_task(data)\r\n                    }}>\r\n                    <i className=\"material-icons\">\r\n                        delete_forever\r\n                    </i>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <List className={classes.root}>\r\n                <ListSubheader onClick={() => this.handleChange(\"showUncompleted\")}>\r\n                    <IconButton onClick={() => this.handleChange(\"showUncompleted\")}>\r\n                        <i className={\"material-icons\"}>\r\n                            {!this.state.showUncompleted ? \"keyboard_arrow_down\" : \"keyboard_arrow_up\"}\r\n                        </i>\r\n                    </IconButton>\r\n                    Uncompleted\r\n                </ListSubheader>\r\n                {\r\n                    this.state.showUncompleted && this.filterTasks(true).map((item) => {\r\n                        return (\r\n                            this.renderItems(item)\r\n                        )\r\n                    })\r\n                }\r\n                <ListSubheader onClick={() => this.handleChange(\"showCompleted\")}>\r\n                    <IconButton onClick={() => this.handleChange(\"showCompleted\")}>\r\n                        <i className={\"material-icons\"}>\r\n                            {!this.state.showCompleted ? \"keyboard_arrow_down\" : \"keyboard_arrow_up\"}\r\n                        </i>\r\n                    </IconButton>\r\n                    Completed\r\n                </ListSubheader>\r\n                {\r\n                    this.state.showCompleted && this.filterTasks(false).map((item) => {\r\n                        return (\r\n                            this.renderItems(item)\r\n                        )\r\n                    })\r\n                }\r\n                <Divider />\r\n                {\r\n                    this.state.showTaskModal\r\n                        ? <TaskView\r\n                            Task={this.state.Task}\r\n                            showTaskModal={this.state.showTaskModal}\r\n                            listID={this.props.currentList}\r\n                            handleModalClose={this.handleModalClose}\r\n                        />\r\n                        : null\r\n                }\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={this.state.showSnackbar}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleSnackbarClose}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span id=\"message-id\">Task deleted</span>}\r\n                    action={[\r\n                        <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n                            UNDO\r\n                        </Button>,\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.handleSnackbarClose}\r\n                        >\r\n                            <i className=\"material-icons\">close</i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\nCurrentList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Todo } = state;\r\n\r\n        return {\r\n            Todo,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(CurrentList);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nclass ListEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_list, edit_list } = this.props;\r\n        this.new_list = new_list;\r\n        this.edit_list = edit_list;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            list: {\r\n                ID: \"\",\r\n                ListName: \"\",\r\n                Archived: false,\r\n                Todos: [],\r\n                ...this.props.list\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.list.ID ? true : false;\r\n    }\r\n\r\n    handleChange(label, value) {\r\n        this.setState({\r\n            list: {\r\n                ...this.state.list,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_list(this.state.list)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_list({\r\n                ...this.state.list,\r\n                ID\r\n            });\r\n        }\r\n\r\n        this.props.handleClose();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {\r\n                        this.isEditing()\r\n                            ? \"Edit list\"\r\n                            : \"Add new list\"\r\n                    }\r\n                </DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">Name your list</InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.list.ListName}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"ListName\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(ListEdit);","var User = {\r\n    name: \"GSM\"\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport compose from 'recompose/compose';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\n//import './App.css';\r\nimport Lists from \"./Components/Lists\";\r\nimport CurrentList from \"./Components/CurrentList\";\r\nimport ListEdit from './Components/ListEdit';\r\nimport TaskView from './Components/TaskView';\r\n\r\nimport User from '../../Data/User';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n  ...ToDoActions\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 420,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass ToDo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.exitPopups = this.exitPopups.bind(this);\r\n    this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n    this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n\r\n    const { delete_list, new_list } = this.props;\r\n    this.delete_list = delete_list;\r\n    this.new_list = new_list;\r\n\r\n    this.state = {\r\n      tdl: [...this.props.Todo],\r\n      UserName: User.name,\r\n      CurrentList: 1,\r\n      showNewListPopup: false,\r\n      showNewTaskPopup: false,\r\n      lastDeletedList: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      tdl: [...this.props.Todo]\r\n    })\r\n  }\r\n\r\n\r\n  findById(list, ID, flag) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].ID === ID) {\r\n        if (!flag) {\r\n          return list[i].Todos;\r\n        } else {\r\n          return list[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  newList = (list) => {\r\n    this.setState({\r\n      tdl: [\r\n        ...this.state.tdl,\r\n        list\r\n      ],\r\n      showNewListPopup: false\r\n    })\r\n  }\r\n\r\n  currentList() {\r\n    return this.findById(this.props.Todo, this.state.CurrentList, true);\r\n  }\r\n\r\n  nextCurrent() {\r\n    return this.props.Todo.filter((list) => {\r\n      if (list.ID !== this.state.CurrentList) {\r\n        return true;\r\n      }\r\n      return false;\r\n    })[0].ID\r\n  }\r\n\r\n  handleUndoDelete() {\r\n    this.handleSnackbarClose()\r\n    this.new_list(this.state.lastDeletedList)\r\n  }\r\n\r\n  handleSnackbarClose() {\r\n    this.setState({\r\n      showSnackbar: false\r\n    })\r\n  }\r\n\r\n  exitPopups() {\r\n    this.setState({\r\n      showNewListPopup: false,\r\n      showNewTaskPopup: false,\r\n      showEditListPopup: false\r\n    })\r\n  }\r\n\r\n  renderMoreListOptions() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showNewListPopup: true\r\n            })\r\n          }}>\r\n          New list\r\n          </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"medium\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showEditListPopup: true\r\n            })\r\n          }}>\r\n          Edit list\r\n          </Button>\r\n        <Button\r\n          variant=\"text\"\r\n          color=\"default\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showSnackbar: true,\r\n              CurrentList: this.nextCurrent(),\r\n              lastDeletedList: {\r\n                ...this.currentList()\r\n              }\r\n            })\r\n\r\n            this.delete_list(this.currentList())\r\n\r\n          }}>\r\n          Delete list\r\n          </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Lists\r\n          lists={[...this.state.tdl]}\r\n          current={this.state.CurrentList}\r\n          cancel={this.exitPopups}\r\n          newList={\r\n            () => {\r\n              this.setState({\r\n                showNewListPopup: true\r\n              })\r\n            }\r\n          }\r\n          changeCurrent={\r\n            (ID) => {\r\n              this.setState({\r\n                CurrentList: ID\r\n              })\r\n            }\r\n          }\r\n        />\r\n        <CurrentList\r\n          currentList={this.state.CurrentList}\r\n          toggleItem={this.toggleItem}\r\n          deleteItem={this.deleteItem}\r\n        />\r\n        {\r\n          this.state.showNewTaskPopup\r\n            ? <TaskView\r\n              showTaskModal={this.state.showNewTaskPopup}\r\n              listName={this.currentList().ListName}\r\n              listID={this.state.CurrentList}\r\n              handleModalClose={this.exitPopups}\r\n              newTask={this.newTask}\r\n            />\r\n            : null\r\n        }\r\n        {\r\n          this.state.showNewListPopup\r\n            ? <ListEdit\r\n              open={this.state.showNewListPopup}\r\n              listName={this.currentList().ListName}\r\n              handleClose={this.exitPopups}\r\n            />\r\n            : null\r\n        }\r\n        {\r\n          this.state.showEditListPopup\r\n            ? <ListEdit\r\n              open={this.state.showEditListPopup}\r\n              list={this.currentList()}\r\n              handleClose={this.exitPopups}\r\n            />\r\n            : null\r\n        }\r\n        <Tooltip TransitionComponent={Zoom} title=\"Add new TASK\">\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            className={classes.fab}\r\n            onClick={() => {\r\n              this.setState({\r\n                showNewTaskPopup: true\r\n              })\r\n            }}>\r\n            <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>add_circle_outline</i>\r\n            New task\r\n          </Fab>\r\n        </Tooltip>\r\n        {this.renderMoreListOptions()}\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          open={this.state.showSnackbar}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">List deleted</span>}\r\n          action={[\r\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n              UNDO\r\n            </Button>,\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={this.handleSnackbarClose}\r\n            >\r\n              <i className=\"material-icons\">close</i>\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToDo.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(state => {\r\n    const { Todo } = state;\r\n\r\n    return {\r\n      Todo,\r\n    };\r\n  },\r\n    dispatch => {\r\n      return bindActionCreators(MainActions, dispatch);\r\n    })\r\n)(ToDo);","import React, { Component } from 'react';\r\nimport ReactQuill from 'react-quill';\r\n\r\nclass TextEditor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.modules = {\r\n            toolbar: [\r\n                [{ 'header': [1, 2, false] }],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\r\n                ['link', 'image'],\r\n                ['clean']\r\n            ],\r\n        }\r\n\r\n        this.formats = [\r\n            'header',\r\n            'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n            'list', 'bullet', 'indent',\r\n            'link', 'image'\r\n        ]\r\n        this.state = { text: '' }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(value) {\r\n        this.setState({ text: value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactQuill\r\n                value={this.props.value}\r\n                onChange={this.props.handleChange}\r\n                theme=\"snow\"\r\n                modules={this.modules}\r\n                formats={this.formats}\r\n                style={{\r\n                    height: \"375px\",\r\n                    marginBottom: \"45px\",\r\n                    backgroundColor: 'white',\r\n                    color: 'black'\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextEditor;","var darkColors = [\r\n    \"#ba000d\",\r\n    \"#4a148c\",\r\n    \"#0d47a1\",\r\n    \"#1b5e20\",\r\n    \"#0069c0\",\r\n    \"#ff3d00\",\r\n    \"#4e342e\",\r\n    \"#000000\",\r\n];\r\n\r\nexport default darkColors;","export function new_note(data) {\r\n    return {\r\n        type: 'NEW_NOTE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_note(data) {\r\n    return {\r\n        type: 'EDIT_NOTE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_note(data) {\r\n    return {\r\n        type: 'DELETE_NOTE',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport TextEditor from \"../../Components/TextEditor\";\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { CirclePicker } from 'react-color';\r\nimport darkColors from \"../../Data/Settings/darkPickerColors\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as NotesActions from \"../../Actions/NotesActions\";\r\n\r\nconst MainActions = {\r\n    ...NotesActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    note: {\r\n        width: '100%',\r\n        maxWidth: 530,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    editorSpace: {\r\n        width: '100%',\r\n        maxWidth: 530,\r\n        backgroundColor: theme.palette.background.paper,\r\n        height: 375,\r\n    },\r\n\r\n    avatar: {\r\n        width: 20,\r\n        height: 20,\r\n        marginLeft: 10,\r\n    },\r\n\r\n    Button: {\r\n        display: \"inline-block\"\r\n    },\r\n\r\n    titleInput: {\r\n        // height: 30\r\n    }\r\n});\r\n\r\nclass NotesView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_note, delete_note, edit_note } = this.props;\r\n        this.new_note = new_note;\r\n        this.delete_note = delete_note;\r\n        this.edit_note = edit_note;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            Note: {\r\n                ID: null,\r\n                Title: \"\",\r\n                Content: \"\",\r\n                Color: \"#0d47a1\",\r\n                Date: new Date(),\r\n                ...this.props.Note\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Note.ID ? true : false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!this.props.Note || prevProps.Note.ID === this.props.Note.ID) return null;\r\n        if (!this.props.isNew) {\r\n            return this.setState({\r\n                Note: {\r\n                    ID: null,\r\n                    Title: \"\",\r\n                    Content: \"\",\r\n                    Color: \"#0d47a1\",\r\n                    Date: new Date(),\r\n                    ...this.props.Note\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            return this.setState({\r\n                Note: {\r\n                    ...this.props.Note\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange(newValue) {\r\n        this.setState({\r\n            Note: {\r\n                ...this.state.Note,\r\n                Content: newValue\r\n            }\r\n        })\r\n    }\r\n\r\n    handleValueChange(label, value) {\r\n        this.setState({\r\n            Note: {\r\n                ...this.state.Note,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete() {\r\n        this.delete_note(this.state.Note)\r\n        // this.props.changeCurrentOnAdd()\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_note(this.state.Note)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_note({\r\n                ...this.state.Note,\r\n                ID\r\n            });\r\n            this.props.changeCurrentOnAdd(ID)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <Paper elevation={12} className={classes.note}>\r\n                    <TextField\r\n                        id=\"full-width\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Avatar\r\n                                        style={{ backgroundColor: this.state.Note.Color }}\r\n                                        className={classes.avatar}\r\n                                    >\r\n                                        {this.state.Note.Title[0]}\r\n                                    </Avatar>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        className={classes.titleInput}\r\n                        required\r\n                        placeholder=\"Enter title here...\"\r\n                        fullWidth\r\n                        value={this.state.Note.Title}\r\n                        onChange={(e) => {\r\n                            this.handleValueChange(\"Title\", e.target.value)\r\n                        }}\r\n                    />\r\n                    <TextEditor\r\n                        value={this.state.Note.Content}\r\n                        handleChange={this.handleChange}\r\n                    />\r\n                    <div style={{ display: \"inline-block\" }}>\r\n                        <CirclePicker\r\n                            color={this.state.Note.Color}\r\n                            width=\"260px\"\r\n                            colors={darkColors}\r\n                            circleSpacing={3}\r\n                            onChange={(value) => {\r\n                                this.handleValueChange(\"Color\", value.hex)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.isEditing()\r\n                            ? <Button\r\n                                color=\"secondary\"\r\n                                className={classes.Button}\r\n                                onClick={this.handleDelete}>\r\n                                Delete\r\n                                </Button>\r\n                            : <Button\r\n                                color=\"secondary\"\r\n                                className={classes.Button}\r\n                                onClick={this.props.handleCancel}>\r\n                                Cancel\r\n                                </Button>\r\n                    }\r\n                    <Button className={classes.Button} type=\"submit\" color=\"primary\">\r\n                        Save\r\n                        </Button>\r\n                </Paper>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(() => {\r\n        return {}\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(NotesView);","export function increase(data) {\r\n    return {\r\n        type: 'INCREASE',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function decrease(data) {\r\n    return {\r\n        type: 'DECREASE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function new_counter(data) {\r\n    return {\r\n        type: 'NEW_COUNTER',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_counter(data) {\r\n    return {\r\n        type: 'EDIT_COUNTER',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_counter(data) {\r\n    return {\r\n        type: 'DELETE_COUNTER',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport NotesView from \"./NotesView\";\r\nimport _ from \"lodash\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\n//import { Fab } from '@material-ui/core';\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    notesList: {\r\n        width: '100%',\r\n        maxWidth: 240,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginRight: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst EmptyNote = {\r\n    ID: null,\r\n    Title: \"\",\r\n    Content: \"\",\r\n    Color: \"#0d47a1\",\r\n    Date: new Date(),\r\n}\r\n\r\nclass Notes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.changeCurrentOnAdd = this.changeCurrentOnAdd.bind(this);\r\n\r\n        this.state = {\r\n            currentNote: this.getFirst(),\r\n            isNew: false,\r\n        }\r\n    }\r\n\r\n    /* static getDerivedStateFromProps(props, state) {\r\n        return \r\n    } */\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.Notes === this.props.Notes) return null;\r\n\r\n        if (!this.props.Notes.length) {\r\n            return this.setState({\r\n                currentNote: EmptyNote\r\n            })\r\n        }\r\n\r\n        return this.setState({\r\n            currentNote: this.props.Notes[0]\r\n        })\r\n    }\r\n\r\n\r\n    getFirst(arr = this.props.Notes) {\r\n        if (!arr.length) return EmptyNote;\r\n\r\n        return arr[0]\r\n    }\r\n\r\n    renderNotesList() {\r\n        const { classes, Notes } = this.props;\r\n\r\n        if (!Notes || !Notes.length) return null;\r\n\r\n        return (\r\n            <Paper elevation={5} className={classes.notesList}>\r\n                <List component=\"nav\" dense>\r\n                    {\r\n                        Notes.map((note, index) => {\r\n                            return (\r\n                                <Zoom in={true}\r\n                                    key={note.ID}\r\n                                    style={{ transitionDelay: index * 100 }}\r\n                                >\r\n                                    <div>\r\n                                        <ListItem\r\n                                            dense\r\n                                            button\r\n                                            onClick={() => {\r\n                                                this.setState({\r\n                                                    currentNote: _.find(this.props.Notes, { ID: note.ID })\r\n                                                })\r\n                                            }}\r\n                                        >\r\n                                            <Avatar\r\n                                                style={{\r\n                                                    backgroundColor: note.Color,\r\n                                                    marginRight: 10,\r\n                                                }}\r\n                                            >\r\n                                                {note.Title[0]}\r\n                                            </Avatar>\r\n                                            <ListItemText primary={note.Title} />\r\n                                        </ListItem>\r\n                                        {\r\n                                            !(this.props.Notes.length - 1 === index)\r\n                                                ? <Divider variant=\"inset\" />\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </Zoom>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new NOTE\">\r\n                <Zoom in={true}>\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        style={{ marginRight: '10px' }}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                isNew: true,\r\n                                currentNote: {\r\n                                    ID: null,\r\n                                    Title: \"\",\r\n                                    Content: \"\",\r\n                                    Color: \"#0d47a1\",\r\n                                    Date: new Date()\r\n                                }\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\">add_circle</i>\r\n                    </Fab>\r\n                </Zoom>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    handleCancel() {\r\n        this.setState({\r\n            isNew: false,\r\n            currentNote: this.getFirst()\r\n        })\r\n    }\r\n\r\n    changeCurrentOnAdd(ID) {\r\n        this.setState({\r\n            isNew: false,\r\n        })\r\n    }\r\n\r\n    getNote() {\r\n        return {\r\n            ID: null,\r\n            Title: \"\",\r\n            Content: \"\",\r\n            Color: \"#0d47a1\",\r\n            Date: new Date(),\r\n            ...(this.state.isNew ? { ID: null } : _.find(this.props.Notes, { ID: this.state.currentID }))\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={10}\r\n                    className={\"\"}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    style={{ marginTop: 50 }}\r\n                >\r\n                    {this.renderFabButton()}\r\n                    {this.renderNotesList()}\r\n                    <Zoom in={true} style={{ transitionDelay: 500 }}>\r\n                        <NotesView\r\n                            Note={this.state.currentNote}\r\n                            handleCancel={this.handleCancel}\r\n                            isNew={this.state.isNew}\r\n                            changeCurrentOnAdd={this.changeCurrentOnAdd}\r\n                        />\r\n                    </Zoom>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Notes } = state;\r\n\r\n        return {\r\n            Notes,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Notes);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport { CirclePicker } from 'react-color';\r\nimport darkColors from \"../../Data/Settings/darkPickerColors\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nclass CounterView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_counter, delete_counter, edit_counter } = this.props;\r\n        this.new_counter = new_counter;\r\n        this.delete_counter = delete_counter;\r\n        this.edit_counter = edit_counter;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            Counter: {\r\n                ID: null,\r\n                Title: \"\",\r\n                Value: 0,\r\n                Date: new Date(),\r\n                Color: \"#0d47a1\",\r\n                Goal: 0,\r\n                ...this.props.Counter\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Counter.ID ? true : false;\r\n    }\r\n\r\n    handleChange(label, value) {\r\n        this.setState({\r\n            Counter: {\r\n                ...this.state.Counter,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.handleClose()\r\n        this.delete_counter(this.state.Counter)\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_counter(this.state.Counter)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_counter({\r\n                ...this.state.Counter,\r\n                ID\r\n            });\r\n        }\r\n\r\n        this.props.handleClose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {\r\n                        this.isEditing()\r\n                            ? \"Edit counter\"\r\n                            : \"Add new counter\"\r\n                    }\r\n                    {\r\n                        this.isEditing()\r\n                        && <Tooltip TransitionComponent={Zoom} title=\"DELETE COUNTER\">\r\n                            <IconButton\r\n                                key=\"delete\"\r\n                                aria-label=\"Delete\"\r\n                                color=\"inherit\"\r\n                                onClick={this.handleDelete}\r\n                            >\r\n                                <i className=\"material-icons\">delete_forever</i>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    }\r\n                </DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControl>\r\n                            <TextField\r\n                                required\r\n                                autoFocus\r\n                                label=\"Name your counter\"\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Title}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Title\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">\r\n                                {\r\n                                    this.isEditing()\r\n                                        ? \"Value\"\r\n                                        : \"Starting value\"\r\n                                }\r\n                            </InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Value}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Value\", parseInt(e.target.value, 10))\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">Counter goal</InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Goal}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Goal\", parseInt(e.target.value, 10))\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <br />\r\n                        <FormControl>\r\n                            <CirclePicker\r\n                                color={this.state.Counter.Color}\r\n                                width=\"180px\"\r\n                                colors={darkColors}\r\n                                circleSpacing={17}\r\n                                onChange={(value) => {\r\n                                    this.handleChange(\"Color\", value.hex)\r\n                                }}\r\n                            />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleClose} color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(CounterView);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport CounterView from \"./CounterView\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: '20px',\r\n        borderRadius: '100px',\r\n        position: 'relative',\r\n        color: \"#FFFFFF\"\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n\r\n    white: {\r\n        color: \"#fff\"\r\n    },\r\n\r\n    CardContent: {\r\n        display: 'inline-block',\r\n    },\r\n\r\n    title: {\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        display: \"inline-block\",\r\n        marginRight: \"8px\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    badge: {\r\n        top: -2,\r\n        right: -20,\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    leftDiv: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        left: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        margin: \"1px\",\r\n        paddingRight: \"5px\",\r\n        borderRight: \"1px solid darkgrey\",\r\n        verticalAlign: \"center\"\r\n    },\r\n\r\n    rightDiv: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        right: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        margin: \"1px\",\r\n        paddingLeft: \"5px\",\r\n        borderLeft: \"1px solid grey\"\r\n    },\r\n\r\n    minusButton: {\r\n        margin: \"1px\"\r\n    },\r\n\r\n    bar: {\r\n        position: 'absolute',\r\n        bottom: \"0\",\r\n        right: \"0\",\r\n        left: \"0\",\r\n    },\r\n\r\n    completedProgress: {\r\n        backgroundColor: '#76ff03',\r\n    },\r\n\r\n    uncompletedProgress: {\r\n        backgroundColor: '#f50057',\r\n    },\r\n});\r\n\r\nclass Counters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.counterModal = this.counterModal.bind(this);\r\n        this.exitModals = this.exitModals.bind(this);\r\n\r\n        const { increase, decrease } = this.props;\r\n        this.increase = increase;\r\n        this.decrease = decrease;\r\n\r\n        this.state = {\r\n            showEditModal: false,\r\n            showNewCounterPopup: false,\r\n            CounterToEdit: {}\r\n        }\r\n    }\r\n\r\n    counterModal(Counter) {\r\n        this.setState({\r\n            showEditModal: true,\r\n            CounterToEdit: { ...Counter }\r\n        })\r\n    }\r\n\r\n    exitModals() {\r\n        this.setState({\r\n            showEditModal: false,\r\n            showNewCounterPopup: false\r\n        })\r\n    }\r\n\r\n    renderProgress(Counter) {\r\n        if (!Counter.Goal) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <LinearProgress\r\n                color={\r\n                    this.progress(Counter) === 100\r\n                        ? \"primary\"\r\n                        : \"secondary\"\r\n                }\r\n                variant=\"determinate\"\r\n                value={this.progress(Counter)}\r\n                className={classes.bar}\r\n            />\r\n        )\r\n    }\r\n\r\n    progress(Counter) {\r\n        if (Counter.Value >= Counter.Goal) return 100;\r\n\r\n        return ((100 * Counter.Value) / Counter.Goal);\r\n    }\r\n\r\n    renderCounters() {\r\n        if (!this.props.Counters || !this.props.Counters.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return this.props.Counters.map((Counter, index) => {\r\n            return (\r\n                <Slide\r\n                    direction=\"up\"\r\n                    in={true}\r\n                    key={Counter.ID}\r\n                    style={{transitionDelay: 100*index}}\r\n                    mountOnEnter\r\n                    unmountOnExit\r\n                >\r\n                    <Card\r\n                        className={classes.card}\r\n                        raised\r\n                        style={{ backgroundColor: Counter.Color }}\r\n                    >\r\n                        <CardContent\r\n                            className={classes.CardContent}\r\n                            onClick={() => this.counterModal(Counter)}\r\n                        >\r\n                            <Badge\r\n                                badgeContent={Counter.Value}\r\n                                color=\"secondary\"\r\n                                classes={{ badge: classes.badge }}\r\n                            >\r\n                                <Typography className={classes.title}>\r\n                                    {Counter.Title}\r\n                                </Typography>\r\n                            </Badge>\r\n                        </CardContent>\r\n                        <div className={classes.leftDiv}>\r\n                            <IconButton\r\n                                key=\"close\"\r\n                                aria-label=\"Close\"\r\n                                color=\"inherit\"\r\n                                className={classes.minusButton}\r\n                                onClick={() => { this.decrease(Counter.ID) }}\r\n                            >\r\n                                <i className=\"material-icons\">remove_circle_outline</i>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className={classes.rightDiv}>\r\n                            <IconButton\r\n                                key=\"close\"\r\n                                aria-label=\"Close\"\r\n                                color=\"inherit\"\r\n                                onClick={() => { this.increase(Counter.ID) }}\r\n                            >\r\n                                <i className=\"material-icons\">add_circle_outline</i>\r\n                            </IconButton>\r\n                        </div>\r\n                        {this.renderProgress(Counter)}\r\n                    </Card>\r\n                </Slide>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new COUNTER\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showNewCounterPopup: true\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{marginRight: \"10px\"}}>add_circle</i>\r\n                    New Counter\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    renderNewCounterModal() {\r\n        return this.state.showNewCounterPopup && <CounterView\r\n            open={this.state.showNewCounterPopup}\r\n            handleClose={this.exitModals}\r\n        />\r\n    }\r\n\r\n    renderEditCounterModal() {\r\n        return this.state.showEditModal && <CounterView\r\n            open={this.state.showEditModal}\r\n            Counter={this.state.CounterToEdit}\r\n            handleClose={this.exitModals}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderCounters()}\r\n                {this.renderFabButton()}\r\n                {this.renderNewCounterModal()}\r\n                {this.renderEditCounterModal()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Counters } = state;\r\n\r\n        return {\r\n            Counters,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Counters);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(2),\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n    },\r\n\r\n    convertDiv: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        width: 250,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n\r\n    menu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass Convert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            input: \"\",\r\n            convertorID: 2,\r\n            output: \"\",\r\n            convertors: [\r\n                {\r\n                    ID: 0,\r\n                    Label: \"UPPERCASE\"\r\n                },\r\n                {\r\n                    ID: 1,\r\n                    Label: \"lowercase\"\r\n                },\r\n                {\r\n                    ID: 2,\r\n                    Label: \"Reverse\"\r\n                },\r\n                {\r\n                    ID: 3,\r\n                    Label: \"Morse code\"\r\n                },\r\n                {\r\n                    ID: 4,\r\n                    Label: \"ROT13\"\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange(event, name) {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        }, () => {\r\n            this.setState({\r\n                output: this.Convert()\r\n            })\r\n        });\r\n    };\r\n\r\n    Convert() {\r\n        const { input } = this.state;\r\n\r\n        switch (this.state.convertorID) {\r\n            case 0: return input.toUpperCase();\r\n            case 1: return input.toLowerCase();\r\n            case 2: return input.split(\"\").reverse().join(\"\");\r\n            case 3: return this.Morse(input);\r\n            case 4: return this.ROT13(input);\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    ROT13(str) {\r\n        var input = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n        var output = 'NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm';\r\n        var index = x => input.indexOf(x);\r\n        var translate = x => index(x) > -1 ? output[index(x)] : x;\r\n        return str.split('').map(translate).join('');\r\n    }\r\n\r\n    Morse(input) {\r\n        var letters = [' ', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\r\n        var morseLetters = [\"\\xa0\\xa0\\xa0\\xa0\", \". ___\", \"___ . . .\", \"___ . ___ .\", \"___ . .\", \".\", \". . ___ .\", \"___ ___ .\", \". . . .\", \". .\", \". ___ ___ ___\", \"___ . ___\", \". ___ . .\", \"___ ___\", \"___ .\", \"___ ___ ___\", \". ___ ___ .\", \"___ ___ . ___\", \". ___ .\", \". . .\", \"_\", \". . ___\", \". . . ___\", \". ___ ___\", \"___ . . ___\", \"___ . ___ ___\", \"___ ___ . .\", \". ___ ___ ___ ___\", \". . ___ ___ ___\", \". . . ___ ___\", \". . . . ___\", \". . . . .\", \"___ . . . .\", \"___ ___ . . .\", \"___ ___ ___ . .\", \"___ ___ ___ ___ .\", \"___ ___ ___ ___ ___\"];\r\n\r\n        var newText = \"\";\r\n\r\n        for (var i = 0; i < input.length; i++) {\r\n            for (var j = 0; j < 37; j++) {\r\n                if (input[i].toLowerCase() === letters[j]) {\r\n                    newText += morseLetters[j];\r\n                    newText += \"\\xa0\\xa0\\xa0\";\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return newText;\r\n    }\r\n\r\n    renderInputCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.root} elevation={10}>\r\n            <TextField\r\n                id=\"multiline-flexible\"\r\n                label=\"Input\"\r\n                multiline\r\n                fullWidth\r\n                rows=\"4\"\r\n                rowsMax=\"4\"\r\n                value={this.state.input}\r\n                onChange={(e) => this.handleChange(e, 'input')}\r\n                margin=\"normal\"\r\n            />\r\n        </Card>\r\n    }\r\n\r\n    renderConvertTypeCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.convertDiv} elevation={2}>\r\n            <TextField\r\n                id=\"select-convertor\"\r\n                select\r\n                value={this.state.convertorID}\r\n                onChange={(e) => this.handleChange(e, 'convertorID')}\r\n                SelectProps={{\r\n                    MenuProps: {\r\n                        className: classes.menu,\r\n                    },\r\n                }}\r\n                helperText=\"Select convert method\"\r\n                margin=\"normal\"\r\n            >\r\n                {this.state.convertors.map(option => (\r\n                    <MenuItem key={option.ID} value={option.ID}>\r\n                        {option.Label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </Card>\r\n    }\r\n\r\n    renderOutputCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.root} elevation={10}>\r\n            <TextField\r\n                id=\"multiline-flexible\"\r\n                label=\"Output\"\r\n                multiline\r\n                fullWidth\r\n                rows=\"4\"\r\n                rowsMax=\"4\"\r\n                value={this.state.output}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n            />\r\n        </Card>\r\n    }\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderInputCard()}\r\n                {this.renderArrowDown()}\r\n                {this.renderConvertTypeCard()}\r\n                {this.renderArrowDown()}\r\n                {this.renderOutputCard()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Convert);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport Success from '../../../Components/SnackBars/SnackSuccess';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: 10,\r\n        position: 'relative',\r\n    },\r\n    copyButton: {\r\n        display: 'inline-block',\r\n        paddingLeft: \"5px\",\r\n        position: 'absolute',\r\n        right: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        verticalAlign: \"10px\"\r\n    },\r\n    text: {\r\n        display: \"inline-block\"\r\n    },\r\n    decorationsWrapper: {\r\n        maxHeight: \"25%\",\r\n        overflowY: \"auto\",\r\n    }\r\n});\r\n\r\nclass Decorate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSBClose = this.handleSBClose.bind(this);\r\n\r\n        this.state = {\r\n            text: \"\",\r\n            snackBarSuccess: false\r\n        }\r\n\r\n        this.Decorations = [\r\n            {\r\n                left: \"▁ ▂ ▄ ▅ ▆ ▇ █ [\",\r\n                right: \"] █ ▇ ▆ ▅ ▄ ▂ ▁\",\r\n            },\r\n            {\r\n                left: \"•´¯`•. [\",\r\n                right: \"] .•´¯`•\",\r\n            },\r\n            {\r\n                left: \"(-_-) [\",\r\n                right: \"] (-_-)\",\r\n            },\r\n            {\r\n                left: \"▀▄▀▄▀▄ [\",\r\n                right: \"] ▄▀▄▀▄▀\",\r\n            },\r\n            {\r\n                left: \"▌│█║▌║▌║ [\",\r\n                right: \"] ║▌║▌║█│▌\",\r\n            },\r\n            {\r\n                left: \"๑۞๑,¸¸,ø¤º°`°๑۩ [\",\r\n                right: \"] ๑۩ ,¸¸,ø¤º°`°๑۞๑\",\r\n            },\r\n            {\r\n                left: \"↦↦↦↦↦ [\",\r\n                right: \"] ↤↤↤↤↤\",\r\n            },\r\n            {\r\n                left: \"░▒▓█ [\",\r\n                right: \"] █▓▒░\",\r\n            },\r\n            {\r\n                left: \"➶➶➶➶➶ [\",\r\n                right: \"] ➷➷➷➷➷\",\r\n            },\r\n            {\r\n                left: \"★彡 [\",\r\n                right: \"] 彡★\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    handleChange(event, name) {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    copyToClipboard(text) {\r\n        var data = new DataTransfer();\r\n        data.items.add(\"text/plain\", text);\r\n        navigator.clipboard.writeText(text);\r\n        this.setState({\r\n            snackBarSuccess: true\r\n        });\r\n    }\r\n\r\n    renderDecorations() {\r\n        const { classes } = this.props;\r\n\r\n        return <div className={classes.decorationsWrapper}>\r\n            {\r\n                this.Decorations.map((item, index) => {\r\n                    var textToDisplay = `${item.left} ${this.state.text} ${item.right}`;\r\n                    return <Card className={classes.root} elevation={1} key={index}>\r\n                        <Typography component=\"p\" className={classes.text}>\r\n                            {\r\n                                textToDisplay\r\n                            }\r\n                        </Typography>\r\n                        <div className={classes.copyButton}>\r\n                            <Tooltip TransitionComponent={Zoom} title=\"Copy to clipboard\">\r\n                                <IconButton color=\"secondary\" aria-label=\"Copy\" onClick={() => {\r\n                                    this.copyToClipboard(textToDisplay)\r\n                                }}>\r\n                                    {\r\n                                        <i className=\"material-icons\">\r\n                                            send\r\n                                        </i>\r\n                                    }\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Card>\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n\r\n    handleSBClose() {\r\n        this.setState({\r\n            snackBarSuccess: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Card className={classes.root} elevation={10}>\r\n                    <Typography component=\"p\">\r\n                        You can use this to decorate your string with additional characters.\r\n                    </Typography>\r\n                    <TextField\r\n                        id=\"text\"\r\n                        label=\"Text\"\r\n                        className={classes.textField}\r\n                        value={this.state.text}\r\n                        onChange={(e) => this.handleChange(e, 'text')}\r\n                        margin=\"normal\"\r\n                        inputProps={{\r\n                            autoComplete: \"off\"\r\n                        }}\r\n                    />\r\n                </Card>\r\n                {this.renderDecorations()}\r\n                <Success\r\n                    open={this.state.snackBarSuccess}\r\n                    handleClose={this.handleSBClose}\r\n                    text=\"Copied to clipboard!\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Decorate);","import React, { Component } from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n/* myComponents */\r\nimport Convert from \"./Components/Convert\";\r\nimport Decorate from \"./Components/Decorate\";\r\n\r\nclass String extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            current: 0\r\n        }\r\n    }\r\n\r\n    handleChange(e, value) {\r\n        this.setState({\r\n            current: value\r\n        })\r\n    }\r\n\r\n    renderTabs() {\r\n        return (\r\n            <Paper square style={{ width: 500, marginLeft: \"auto\", marginRight: \"auto\", marginBottom:\"20px\" }}>\r\n                <Tabs\r\n                    value={this.state.current}\r\n                    onChange={this.handleChange}\r\n                    variant=\"fullWidth\"\r\n                    indicatorColor=\"secondary\"\r\n                    textColor=\"secondary\"\r\n                >\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">autorenew</i>\r\n                        }\r\n                        label=\"CONVERT\"\r\n                    />\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">text_format</i>\r\n                        }\r\n                        label=\"DECORATE\"\r\n                    />\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">text_fields</i>\r\n                        }\r\n                        label=\"STYLE\"\r\n                        disabled\r\n                    />\r\n                </Tabs>\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n    renderTabContent() {\r\n        switch(this.state.current) {\r\n            case 0: return <Convert/>;\r\n            case 1: return <Decorate/>;\r\n            default: return <Convert/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderTabs()}\r\n                {this.renderTabContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default String;","export function rnd_num(min, max) {\r\n    min = parseInt(min, 10);\r\n    max = parseInt(max, 10);\r\n    if (!(max > min)) return;\r\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n};\r\n\r\nexport function rnd_color() {\r\n    return \"rgb(\" + rnd_num(0, 255) + \", \" + rnd_num(0, 255) + \", \" + rnd_num(0, 255) + \")\";\r\n};\r\n\r\nexport default {\r\n    rnd_num,\r\n    rnd_color\r\n};","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showNumbers: {\r\n        width: \"auto\",\r\n        maxWidth: 700,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    textField1: {\r\n        width: \"145px\",\r\n        marginRight: \"10px\"\r\n    },\r\n    textField2: {\r\n        width: \"145px\",\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass RndNumber extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: {\r\n                NumberOfIntegers: 10,\r\n                Min: 1,\r\n                Max: 10,\r\n                NumberOfColumns: 3,\r\n                Highlight: 2,\r\n                NumbersToShow: [\r\n                    []\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateNumbers()\r\n    }\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    handleNumberChange(e, label) {\r\n        var value = e.target.value;\r\n        this.setState({\r\n            Number: {\r\n                ...this.state.Number,\r\n                [label]: value\r\n            }\r\n        }, () => {\r\n            if (label === \"Highlight\") return;\r\n            if (value === \"\") return;\r\n            this.generateNumbers()\r\n        });\r\n    }\r\n\r\n    showNumbers() {\r\n        const state = this.state.Number;\r\n\r\n        return state.NumbersToShow.map((arr, i) => {\r\n            return (\r\n                <Fragment key={i}>\r\n                    <p>\r\n                        {\r\n                            arr.map((num, index) => {\r\n                                return <span\r\n                                    key={index}\r\n                                    style={\r\n                                        num === parseInt(state.Highlight, 10)\r\n                                            ? { color: \"red\" }\r\n                                            : {}\r\n                                    }\r\n                                >\r\n                                    {\r\n                                        index === arr.length - 1\r\n                                            ? num\r\n                                            : num + \", \"\r\n                                    }\r\n                                </span>;\r\n                            })\r\n                        }\r\n                    </p>\r\n                    {\r\n                        i === state.NumbersToShow.length - 1\r\n                            ? null\r\n                            : <Divider />\r\n                    }\r\n                </Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n    generateNumbers() {\r\n        const state = this.state.Number;\r\n\r\n        if (!state.NumberOfColumns) return;\r\n\r\n        var rows = parseInt(state.NumberOfColumns, 10) >= parseInt(state.NumberOfIntegers, 10)\r\n            ? state.NumberOfIntegers\r\n            : state.NumberOfColumns\r\n\r\n        var mainArr = [];\r\n        for (let i = 0; i < rows; i++) {\r\n            mainArr.push([])\r\n        }\r\n\r\n        var current = 0;\r\n        for (let n = 0; n < state.NumberOfIntegers; n++) {\r\n            mainArr[current].push(rnd_num(this.state.Number.Min, this.state.Number.Max))\r\n            current++\r\n            if (current === mainArr.length) {\r\n                current = 0;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Number: {\r\n                ...this.state.Number,\r\n                NumbersToShow: [...mainArr]\r\n            }\r\n        })\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"RANDOMISE\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.generateNumbers()\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                        autorenew\r\n                    </i>\r\n                    RANDOMISE\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Card elevation={5} className={classes.content}>\r\n                    <TextField\r\n                        id=\"NumberOfIntegers\"\r\n                        defaultValue={this.state.Number.NumberOfIntegers}\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        label=\"Number of integers to generate\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"NumberOfIntegers\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"min\"\r\n                        defaultValue={this.state.Number.Min}\r\n                        className={classes.textField1}\r\n                        helperText=\"Minimum\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Min\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"max\"\r\n                        defaultValue={this.state.Number.Max}\r\n                        className={classes.textField2}\r\n                        helperText=\"Maximum\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Max\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"min\"\r\n                        defaultValue={this.state.Number.Highlight}\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Highlight\") }}\r\n                        className={classes.textField1}\r\n                        helperText=\"Highlight number\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                        id=\"max\"\r\n                        defaultValue={this.state.Number.NumberOfColumns}\r\n                        className={classes.textField2}\r\n                        helperText=\"Rows\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"NumberOfColumns\") }}\r\n                    />\r\n                </Card>\r\n                {this.renderArrowDown()}\r\n                <Card elevation={2} className={classes.showNumbers}>\r\n                    {this.showNumbers()}\r\n                </Card>\r\n                {this.renderFabButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RndNumber);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { rnd_color } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    propsDiv: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showColor: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        minHeight: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        transitionDuration: \"0.4s\",\r\n        cursor: \"pointer\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n});\r\n\r\nclass RndColor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.changeColor = this.changeColor.bind(this);\r\n\r\n        this.state = {\r\n            Color: rnd_color()\r\n        }\r\n    }\r\n\r\n    changeColor() {\r\n        this.setState({\r\n            Color: rnd_color()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"flip\"\r\n                    className={classes.button}\r\n                    onClick={() => this.changeColor()}\r\n                    color=\"secondary\"\r\n                >\r\n                    <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                        flip_to_front\r\n                    </i>\r\n                    New color\r\n        \t    </Fab>\r\n                <Card elevation={15} className={classes.showColor}>\r\n                    <div\r\n                        className={classes.showColor}\r\n                        style={{ backgroundColor: this.state.Color }}\r\n                        onClick={this.changeColor}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RndColor);","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    showCoin: {\r\n        borderRadius: \"100%\",\r\n        width: 300,\r\n        height: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"center\",\r\n        lineHeight: \"258px\",\r\n        transitionDuration: \"0.4s\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    progress: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    },\r\n});\r\n\r\nclass Coin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            Coin: {\r\n                Title: \"\",\r\n                progress: 0\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleFlip();\r\n    }\r\n    \r\n    progress = () => {\r\n        const { progress } = this.state.Coin;\r\n        this.setState({\r\n            Coin: {\r\n                ...this.state.Coin,\r\n                progress: progress + 1,\r\n                Title: \"\",\r\n            }\r\n        }, () => {\r\n            if (progress >= 100) {\r\n                clearInterval(this.timer);\r\n                this.setState({\r\n                    Coin: {\r\n                        ...this.state.Coin,\r\n                        Title: rnd_num(0, 1) === 0 ? \"TAILS\" : \"HEADS\",\r\n                        progress: 0\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    handleFlip() {\r\n        if (this.state.Coin.progress === 0) {\r\n            this.timer = setInterval(this.progress, 10);\r\n        } else {\r\n            clearInterval(this.timer);\r\n            this.setState({\r\n                Coin: {\r\n                    ...this.state.Coin,\r\n                    progress: 0\r\n                }\r\n            });\r\n            this.timer = setInterval(this.progress, 10);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return <Fragment>\r\n            <Fab\r\n                variant=\"extended\"\r\n                aria-label=\"flip\"\r\n                className={classes.button}\r\n                onClick={() => this.handleFlip()}\r\n                color=\"secondary\"\r\n            >\r\n                <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                    autorenew\r\n                </i>\r\n                Flip\r\n        \t</Fab>\r\n            <Card\r\n                elevation={15}\r\n                className={classes.showCoin}\r\n                color=\"primary\"\r\n                style={\r\n                    this.state.Coin.Title === \"HEADS\"\r\n                        ? { backgroundColor: \"black\", color: \"white\" }\r\n                        : { backgroundColor: \"white\", color: \"black\" }\r\n                }\r\n            >\r\n                {\r\n                    this.state.Coin.progress > 0\r\n                        ? <CircularProgress\r\n                            className={classes.progress}\r\n                            color=\"secondary\"\r\n                            variant=\"determinate\"\r\n                            size={60}\r\n                            value={this.state.Coin.progress}\r\n\r\n                        />\r\n                        : <h1>{this.state.Coin.Title}</h1>\r\n                }\r\n            </Card>\r\n        </Fragment>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Coin);","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n\r\n    diceSpan: {\r\n        margin: theme.spacing(2),\r\n        fontSize: \"32px\",\r\n        backgroundColor: \"black\",\r\n        color: \"white\"\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n    showDices: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    }\r\n});\r\n\r\nclass Dice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Dice: {\r\n                NumberOfDices: 6,\r\n                Dices: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateDices()\r\n    }\r\n\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fab\r\n                variant=\"extended\"\r\n                color=\"primary\"\r\n                className={classes.fab}\r\n                onClick={() => {\r\n                    this.generateDices()\r\n                }}>\r\n                <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                    border_outer\r\n                </i>\r\n                Roll\r\n            </Fab>\r\n        )\r\n    }\r\n\r\n    diceInner(dice) {\r\n        switch (dice) {\r\n            case 6: return \"https://png.icons8.com/material/50/000000/6.png\";\r\n            case 1: return \"https://png.icons8.com/material/50/000000/1.png\";\r\n            case 2: return \"https://png.icons8.com/material/50/000000/2.png\";\r\n            case 3: return \"https://png.icons8.com/material/50/000000/3.png\";\r\n            case 4: return \"https://png.icons8.com/material/50/000000/4.png\";\r\n            case 5: return \"https://png.icons8.com/material/50/000000/5.png\";\r\n            default: return;\r\n        }\r\n    }\r\n\r\n    generateDices() {\r\n        var arr = [];\r\n        for (let i = 0; i < this.state.Dice.NumberOfDices; i++) {\r\n            arr.push(rnd_num(1, 6));\r\n        }\r\n\r\n        this.setState({\r\n            Dice: {\r\n                ...this.state.Dice,\r\n                Dices: [...arr]\r\n            }\r\n        })\r\n    }\r\n\r\n    showDices() {\r\n        return this.state.Dice.Dices.map((dice, index) => {\r\n            return <img\r\n                alt=\"dice\"\r\n                className=\"diceSpan\"\r\n                src={this.diceInner(dice)}\r\n                key={index}\r\n            />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Card elevation={5} className={classes.content}>\r\n                    <TextField\r\n                        id=\"NumberOfDices\"\r\n                        defaultValue={this.state.Dice.NumberOfDices}\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        label=\"Number of dices to roll\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                Dice: {\r\n                                    ...this.state.Dice,\r\n                                    NumberOfDices: e.target.value\r\n                                }\r\n                            }, () => { this.generateDices() })\r\n                        }}\r\n                    />\r\n                </Card>\r\n                {this.renderArrowDown()}\r\n                <Card elevation={2} className={classes.showDices}>\r\n                    {this.showDices()}\r\n                </Card>\r\n                {this.renderFabButton()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Dice);","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport RndNumber from \"./Components/Rnd_number\";\r\nimport RndColor from './Components/Rnd_color';\r\nimport Coin from './Components/Coin';\r\nimport Dice from './Components/Dice';\r\n\r\nconst styles = theme => ({\r\n    menuCard: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\"\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    showCoin: {\r\n        borderRadius: \"100%\",\r\n        width: 300,\r\n        height: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"center\",\r\n        lineHeight: \"258px\",\r\n        transitionDuration: \"0.4s\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    progress: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    },\r\n\r\n    diceSpan: {\r\n        margin: theme.spacing(2),\r\n        fontSize: \"32px\",\r\n        backgroundColor: \"black\",\r\n        color: \"white\"\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n    showDices: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    }\r\n});\r\n\r\nclass Randomiser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleMenuClick = this.handleMenuClick.bind(this);\r\n\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            current: 0,\r\n        }\r\n    }\r\n\r\n    handleMenuClick(ID) {\r\n        this.setState({\r\n            current: ID\r\n        });\r\n    }\r\n\r\n    renderContent() {\r\n        switch (this.state.current) {\r\n            case 0: return <RndNumber />;\r\n            case 1: return <RndColor />;\r\n            case 2: return <Coin />;\r\n            case 3: return <Dice />;\r\n            default: return <RndNumber />;\r\n        }\r\n    }\r\n\r\n    renderChips() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.menuCard}>\r\n                    <Chip\r\n                        avatar={<Avatar>NU</Avatar>}\r\n                        label=\"Numbers\"\r\n                        color=\"primary\"\r\n                        variant={this.state.current === 0 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(0)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>CO</Avatar>}\r\n                        label=\"Color\"\r\n                        color=\"secondary\"\r\n                        variant={this.state.current === 1 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(1)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>CF</Avatar>}\r\n                        label=\"Coin flipper\"\r\n                        variant={this.state.current === 2 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(2)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>DR</Avatar>}\r\n                        label=\"Dice roller\"\r\n                        variant={this.state.current === 3 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(3)}\r\n                        className={classes.chip}\r\n                    />\r\n                </div>\r\n                {this.renderContent()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderChips()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRandomiser.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Randomiser);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    display: 'flex',\r\n    width: '300px',\r\n    margin: '10px',\r\n  },\r\n  avatar: {\r\n    width: 25,\r\n    height: 25,\r\n    marginRight: 4,\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    lineHeight: '25px',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 48,\r\n    width: 48,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  editIcon: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  deleteIcon: {\r\n    color: '',\r\n  },\r\n});\r\n\r\nfunction MediaControlCard(props) {\r\n  const { classes, theme } = props;\r\n\r\n  return (\r\n    <Card className={classes.card} elevation={10}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            style={{ backgroundColor: props.quiz.Color }}\r\n          >\r\n            {\r\n              props.quiz.Name[0]\r\n            }\r\n          </Avatar>\r\n          <h5 style={{ display: 'inline-block' }}>\r\n            {props.quiz.Name.slice(1)}\r\n          </h5>\r\n          <p variant=\"subtitle1\" color=\"textSecondary\">\r\n            {props.quiz.ShortDescription}\r\n          </p>\r\n        </CardContent>\r\n        <div className={classes.controls}>\r\n          <IconButton aria-label=\"Play\" onClick={() => {props.onPlay(props.quiz.ID)}}>\r\n            <PlayArrowIcon className={classes.playIcon} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Edit\">\r\n            <EditIcon className={classes.editIcon} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Delete\" onClick={() => props.onDelete(props.quiz.ID)}>\r\n            <DeleteIcon className={classes.deleteIcon} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMediaControlCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MediaControlCard);","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nclass Error extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.props.open}\r\n                autoHideDuration={this.props.autoHideDuration ? this.props.autoHideDuration : 3000}\r\n                onClose={this.props.handleClose}\r\n            >\r\n                <SnackbarContent\r\n                    className={classNames(classes.error)}\r\n                    aria-describedby=\"client-snackbar\"\r\n                    message={\r\n                        <span id=\"client-snackbar\" className={classes.message}>\r\n                            <i className={classNames(classes.icon, classes.iconVariant, \"material-icons\")}>\r\n                            error_outline\r\n                            </i>\r\n                            {this.props.text.length ? this.props.text : \"Wrong\"}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.props.handleClose}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                close\r\n                            </i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Error);","import React, { Component, Fragment } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass Summary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.showSummary}\r\n                onClose={this.props.handleSummaryClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">{\"Summary of -\" + this.props.QuizName + \"-\"}</DialogTitle>\r\n                <Divider variant=\"middle\" />\r\n                {\r\n                    this.props.results.map((r, index) => {\r\n                        return (\r\n                            <Fragment key={index}>\r\n                                <div style={{ padding: 12 }}>\r\n                                    <p style={{ display: 'inline' }}>\r\n                                        <b>\r\n                                            {\r\n                                                `#${index + 1}: ${r.QuestionText}`\r\n                                            }\r\n                                        </b>\r\n                                    </p>\r\n                                    <i\r\n                                        className=\"material-icons\"\r\n                                        style={\r\n                                            { \r\n                                                display: 'inline',\r\n                                                color: r.isCorrect ? 'green' : 'red',\r\n                                                marginLeft: 3\r\n                                         }\r\n                                        }>\r\n                                        {r.isCorrect ? 'done_all' : 'close'}\r\n                                    </i>\r\n                                    <p>Your answer: {r.UserAnswer}</p>\r\n                                    {\r\n                                        !r.isCorrect\r\n                                            ? <p>Correct answer: {r.CorrectAnswer}</p>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n\r\n                                <Divider variant=\"middle\" />\r\n                            </Fragment>\r\n                        )\r\n                    })\r\n                }\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={this.props.handleSummaryClose}\r\n                >\r\n                    Back to menu\r\n                </Button>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Summary);","export function delete_quiz(data) {\r\n    return {\r\n        type: 'DELETE_QUIZ',\r\n        data\r\n    };\r\n};\r\n\r\nexport function new_quiz(data) {\r\n    return {\r\n        type: 'NEW_QUIZ',\r\n        data\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showNumbers: {\r\n        width: \"auto\",\r\n        maxWidth: 700,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    },\r\n    textField1: {\r\n        width: \"145px\",\r\n        marginRight: \"10px\"\r\n    },\r\n    textField2: {\r\n        width: \"145px\",\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass EditQuiz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Quiz: {\r\n                ID: 0,\r\n                Name: '',\r\n                ShortDescription: '',\r\n                Color: '#000',\r\n                Tags: [],\r\n                Questions: [\r\n                    {\r\n                        ID: 0,\r\n                        Text: '',\r\n                        Answers: [\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: true\r\n                            },\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            CurrentID: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const ID = _.uniqueId();\r\n\r\n        this.setState({\r\n            Quiz: {\r\n                ID: _.uniqueId(),\r\n                Name: '',\r\n                ShortDescription: '',\r\n                Color: '#000',\r\n                Tags: [],\r\n                Questions: [\r\n                    {\r\n                        ID,\r\n                        Text: '',\r\n                        Answers: [\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: true\r\n                            },\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            CurrentID: ID,\r\n        })\r\n    }\r\n    \r\n\r\n    handleQuestionChange({ target: { value } }, ID) {\r\n        this.setState({\r\n            Quiz: {\r\n                ...this.state.Quiz,\r\n                Questions: [\r\n                    ...this.state.Quiz.Questions.map((Q) => {\r\n                        if(Q.ID !== ID) return Q;\r\n                        return {\r\n                            ...Q,\r\n                            Text: value\r\n                        }\r\n                    })\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    handleAnswerChange({ target: { value } }, index) {\r\n        const ID = this.state.CurrentID;\r\n\r\n        this.setState({\r\n            Quiz: {\r\n                ...this.state.Quiz,\r\n                Questions: [\r\n                    ...this.state.Quiz.Questions.map((Q) => {\r\n                        if(Q.ID !== ID) return Q;\r\n                        return {\r\n                            ...Q,\r\n                            Answers: [\r\n                                ..._.find(this.state.Quiz.Questions, {ID}).Answers.map((A, i) => {\r\n                                    if(i !== index) return A;\r\n                                    return {\r\n                                        ...A,\r\n                                        Text: value\r\n                                    }\r\n                                })\r\n                            ]\r\n                        }\r\n                    })\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    renderFields() {\r\n        const { classes } = this.props;\r\n        const { Questions } = this.state.Quiz;\r\n        const { CurrentID } = this.state;\r\n        const CurrentQuestion = _.find(Questions, { ID: CurrentID });\r\n        const { Answers } = CurrentQuestion;\r\n\r\n\r\n        return (\r\n            <Card elevation={5} className={classes.content}>\r\n                <TextField\r\n                    defaultValue={CurrentQuestion.Text}\r\n                    className={classes.textField}\r\n                    fullWidth\r\n                    label=\"Question\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleQuestionChange(e, CurrentID) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[0].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"First answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 0) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[1].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Second answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 1) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[2].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Third answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 2) }}\r\n                />\r\n                <TextField\r\n                    id=\"min\"\r\n                    defaultValue={Answers[3].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Fourth answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 3) }}\r\n                />\r\n\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderFields()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(EditQuiz);","import React, { Component, Fragment } from 'react'\r\nimport QuizTile from './QuizTile';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nimport Success from '../../Components/SnackBars/SnackSuccess';\r\nimport Error from '../../Components/SnackBars/SnackError';\r\nimport Summary from './Summary';\r\n\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as QuizActions from \"../../Actions/QuizActions\";\r\n\r\nimport EditQuiz from './EditQuiz';\r\n\r\nconst MainActions = {\r\n    ...QuizActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        maxWidth: '50%',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        marginBottom: 50,\r\n    },\r\n    Answers: {\r\n        cursor: 'pointer',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass Quizes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPage: \"start\", // Think about it\r\n            toEdit: {},\r\n            toPlay: {},\r\n            shuffledQuestions: [],\r\n            nextQuestion: 0,\r\n            isFinished: false,\r\n            answerResults: [],\r\n            showSnackbar: false,\r\n            showDeleteSnackbar: false,\r\n            snackMessage: '',\r\n            snackType: '',\r\n            showSummary: false,\r\n            lastDeletedQuiz: {}\r\n        }\r\n\r\n        const { delete_quiz, new_quiz } = this.props;\r\n        this.delete_quiz = delete_quiz;\r\n        this.new_quiz = new_quiz;\r\n\r\n        this.handlePlay = this.handlePlay.bind(this);\r\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n        this.handleSummaryClose = this.handleSummaryClose.bind(this);\r\n        this.handleDeleteQuiz = this.handleDeleteQuiz.bind(this);\r\n        this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n        //this.handleAnswer = this.handleAnswer.bind(this);\r\n    }\r\n\r\n    handleSummaryClose() {\r\n        this.setState({\r\n            showSummary: false,\r\n            toPlay: {},\r\n            shuffledQuestions: [],\r\n            nextQuestion: 0,\r\n            isFinished: true,\r\n            answerResults: [],\r\n        })\r\n    }\r\n\r\n    handleSnackbarClose() {\r\n        this.setState({\r\n            showSnackbar: false,\r\n            showDeleteSnackbar: false\r\n        })\r\n    }\r\n\r\n    getNextQuestion() {\r\n        return this.state.shuffledQuestions[this.state.nextQuestion];\r\n    }\r\n\r\n    returnShuffledQuiz(QuestionsArray) {\r\n        return _.shuffle(QuestionsArray.map((Question) => {\r\n            return {\r\n                ...Question,\r\n                Answers: _.shuffle(Question.Answers)\r\n            }\r\n        }))\r\n    }\r\n\r\n    handleDeleteQuiz(ID) {\r\n        this.delete_quiz({ ID });\r\n\r\n        this.setState({\r\n            lastDeletedQuiz: _.find(this.props.Quizes, {ID}),\r\n            showDeleteSnackbar: true,\r\n        })\r\n    }\r\n\r\n    handleUndoDelete() {\r\n        this.new_quiz(this.state.lastDeletedQuiz);\r\n\r\n        this.setState({\r\n            showDeleteSnackbar: false,\r\n        })\r\n    }\r\n\r\n    handlePlay(ID) {\r\n        const obj = _.find(this.props.Quizes, { ID: ID })\r\n\r\n        this.setState({\r\n            currentPage: \"QuizPlay\", // Think about it\r\n            toPlay: obj,\r\n            shuffledQuestions: this.returnShuffledQuiz(obj.Questions), // We randomise order of questions and answers\r\n            nextQuestion: 0,\r\n            isFinished: false,\r\n            answerResults: [],\r\n        })\r\n    }\r\n\r\n    renderDefaultQuizes() {\r\n        if (!this.props.Quizes || !this.props.Quizes.length) return null;\r\n\r\n        return (\r\n            <Grid container justify=\"center\" spacing={10}>\r\n                {\r\n                    this.props.Quizes.map((item) => {\r\n                        return (\r\n                            <Grid key={item.ID} item>\r\n                                <QuizTile\r\n                                    quiz={{ ...item }}\r\n                                    onPlay={this.handlePlay}\r\n                                    onDelete={this.handleDeleteQuiz}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    handleAnswer(Ans) {\r\n        this.setState({\r\n            showSnackbar: true,\r\n            answerResults: [\r\n                ...this.state.answerResults,\r\n                {\r\n                    QuestionText: this.state.shuffledQuestions[this.state.nextQuestion].Text,\r\n                    UserAnswer: Ans.Text,\r\n                    CorrectAnswer: _.find(this.state.shuffledQuestions[this.state.nextQuestion].Answers, { Correct: true }).Text,\r\n                    isCorrect: Ans.Correct,\r\n                }\r\n            ],\r\n            snackMessage: Ans.Correct ? 'Correct!' : 'Not correct!',\r\n            snackType: Ans.Correct ? 'Success' : 'Error'\r\n        }, () => {\r\n            if (this.state.nextQuestion + 2 > this.state.shuffledQuestions.length) {\r\n                this.setState({\r\n                    isFinished: true,\r\n                    showSummary: true,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    nextQuestion: this.state.nextQuestion + 1,\r\n\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    renderPage() {\r\n        const { classes } = this.props;\r\n\r\n        if(this.state.newQuiz) return <EditQuiz />;\r\n\r\n        if (!this.state.toPlay.ID) {\r\n            return (\r\n                <div style={{ width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                    {this.renderDefaultQuizes()}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const Q = this.getNextQuestion();\r\n        return (\r\n            <Fragment>\r\n                <Paper className={classes.root} elevation={5}>\r\n                    <h2>{Q.Text}</h2>\r\n                </Paper>\r\n                <Grid container justify=\"center\" spacing={10}>\r\n                    {\r\n                        Q.Answers.map((Ans, index) => {\r\n                            return (\r\n                                <Grid key={index} item>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className={classes.Answers}\r\n                                        onClick={() => this.handleAnswer(Ans)}\r\n                                    >\r\n                                        {\r\n                                            Ans.Text\r\n                                        }\r\n                                    </Button>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n\r\n    }\r\n\r\n    renderSnackBar() {\r\n        //const { classes } = this.props;\r\n\r\n        return this.state.snackType === \"Success\"\r\n            ? <Success\r\n                open={this.state.showSnackbar}\r\n                handleClose={this.handleSnackbarClose}\r\n                text={this.state.snackMessage}\r\n                autoHideDuration={1500}\r\n            />\r\n            : <Error\r\n                open={this.state.showSnackbar}\r\n                handleClose={this.handleSnackbarClose}\r\n                text={this.state.snackMessage}\r\n                autoHideDuration={1500}\r\n            />\r\n    }\r\n\r\n    renderUndoDeleteSnackbar() {\r\n        const { classes } = this.props; \r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.state.showDeleteSnackbar}\r\n                autoHideDuration={6000}\r\n                onClose={this.handleSnackbarClose}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">Quiz deleted</span>}\r\n                action={[\r\n                    <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n                        UNDO\r\n                    </Button>,\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={classes.close}\r\n                        onClick={this.handleSnackbarClose}\r\n                    >\r\n                        <i className=\"material-icons\">close</i>\r\n                    </IconButton>,\r\n                ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderSummary() {\r\n        if (!this.state.isFinished) return null;\r\n\r\n        return <Summary\r\n            showSummary={this.state.showSummary}\r\n            handleSummaryClose={this.handleSummaryClose}\r\n            QuizName={this.state.toPlay.Name}\r\n            results={this.state.answerResults}\r\n        />\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new QUIZ\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            newQuiz: true\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{marginRight: \"10px\"}}>add_circle</i>\r\n                    New Quiz\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderPage()}\r\n                {this.renderSnackBar()}\r\n                {this.renderSummary()}\r\n                {this.renderUndoDeleteSnackbar()}\r\n                {this.renderFabButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Quizes } = state;\r\n\r\n        return {\r\n            Quizes,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Quizes);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 275,\r\n        maxWidth: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nconst Facts = (props) => {\r\n    const classes = useStyles();\r\n    const [fact, setFact] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch('http://numbersapi.com/random/year', {\r\n            mode: 'no-cors'\r\n          })\r\n            .then((response) => response.text())\r\n            .then(data => {\r\n                setFact(data)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    {fact}\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(state => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Facts);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: \"380px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: 10,\r\n    },\r\n}));\r\n\r\nconst data = [\r\n    {\r\n        firstIcon: 'group_work',\r\n        title: 'Mastermind',\r\n        url: 'https://mikacinc.github.io/Mastermind/'\r\n    },\r\n    {\r\n        firstIcon: 'memory',\r\n        title: 'Memory game',\r\n        url: 'https://mikacinc.github.io/MemoryGame/'\r\n    },\r\n    {\r\n        firstIcon: 'location_city',\r\n        title: 'Capital Cities',\r\n        url: 'https://mikacinc.github.io/GlavniGradovi/'\r\n    },\r\n    {\r\n        firstIcon: 'add',\r\n        title: 'Do the math',\r\n        url: 'https://mikacinc.github.io/Izracunaj/'\r\n    },\r\n]\r\n\r\nconst Item = ({ item }) => {\r\n    return (\r\n        <ListItem\r\n            onClick={() => {\r\n                window.open(item.url);\r\n            }}\r\n        >\r\n            <ListItemAvatar>\r\n                <Avatar>\r\n                    <i className=\"material-icons\">\r\n                        {item.firstIcon}\r\n                    </i>\r\n                </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n                primary={item.title}\r\n            />\r\n            <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => {\r\n                    window.open(item.url);\r\n                }}>\r\n                    <i className=\"material-icons\">\r\n                        arrow_right\r\n                    </i>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nconst Games = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.root} elevation={3}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    React versions Coming Soon™\r\n                </Typography>\r\n            </Paper>\r\n            <Paper className={classes.root} elevation={7}>\r\n                <List>\r\n                    {\r\n                        data.map((item) => {\r\n                            return (\r\n                                <Item key={item.title} item={item} />\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Games;","import React, { Component } from 'react';\r\nimport WelcomePage from \"./HomePage/WelcomePage\";\r\nimport Calculator from \"./Calculator\";\r\n//import ToDo from \"./ToDo\";\r\nimport UserPage from \"./UserPage\";\r\nimport Time from \"./Time\";\r\nimport Arrays from \"./Arrays\";\r\nimport Uno from \"./Uno\";\r\nimport ToDo from './ToDo';\r\nimport Notes from './Notes';\r\nimport Counters from './Counters';\r\nimport String from './String';\r\nimport Randomiser from './Randomiser';\r\nimport Quizes from './Quizes';\r\nimport Facts from './Facts';\r\nimport Games from './Games';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as GeneralActions from \".././Actions/GeneralActions\";\r\n\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n}\r\n\r\nclass RenderPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { page_change } = this.props\r\n        this.page_change = page_change\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.General.currentPage) {\r\n            case (\"WelcomePage\"):\r\n                return (<WelcomePage />);\r\n            case (\"UserPage\"):\r\n                return (<UserPage />);\r\n            case (\"Calculator\"):\r\n                return (<Calculator />);\r\n            case (\"ToDo\"):\r\n                return (<ToDo />);\r\n            case (\"Time\"):\r\n                return (<Time />);\r\n            case (\"Arrays\"):\r\n                return (<Arrays />);\r\n            case (\"Facts\"):\r\n                return (<Facts />);\r\n            case (\"Uno\"):\r\n                return (<Uno />);\r\n            case (\"Notes\"):\r\n                return (<Notes />);\r\n            case (\"Counters\"):\r\n                return (<Counters />);\r\n            case (\"String\"):\r\n                return (<String />);\r\n            case (\"Randomiser\"):\r\n                return (<Randomiser />);\r\n            case (\"Games\"):\r\n                return (<Games />);\r\n            case (\"Quizes\"):\r\n                return (<Quizes />);\r\n            default:\r\n                return (<WelcomePage />);\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(state => {\r\n    const { General } = state;\r\n\r\n    return {\r\n        General,\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(RenderPage);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Others\r\nimport ExtendedHeader from '.././Others/Header';\r\nimport Profilna from \"../Pictures/avatar.jpg\";\r\n// Pages\r\nimport RenderPage from \".././Content/index\";\r\n\r\nimport * as GeneralActions from \".././Actions/GeneralActions\";\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        zIndex: 4,\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        display: 'flex',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        position: 'flex',\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        dislay: \"block\",\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        minHeight: \"100vh\",\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n    },\r\n    Title: {\r\n        cursor: 'pointer',\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        cursor: \"pointer\",\r\n    },\r\n    bigAvatar: {\r\n        width: 60,\r\n        height: 60,\r\n    },\r\n});\r\n\r\nclass Shell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { page_change, toggle_drawer, toggle_header } = this.props;\r\n        this.page_change = page_change;\r\n        this.toggle_drawer = toggle_drawer;\r\n        this.toggle_header = toggle_header;\r\n    }\r\n\r\n    renderIcon(theme) {\r\n        return (\r\n            <i className=\"material-icons\">\r\n                {theme.direction === 'rtl' ? \"keyboard_arrow_right\" : \"keyboard_arrow_left\"}\r\n            </i>\r\n        )\r\n    }\r\n\r\n    renderMenuItem(page_change, icon, text) {\r\n        return (\r\n            <ListItem\r\n                onClick={() => {\r\n                    this.page_change(page_change)\r\n                }}\r\n                button\r\n            >\r\n                <ListItemIcon>\r\n                    <i className=\"material-icons\">\r\n                        {icon}\r\n                    </i>\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n            </ListItem>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes, theme } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar\r\n                    position=\"absolute\"\r\n                    className={classNames(classes.appBar, this.props.General.isDrawerOpen && classes.appBarShift)}\r\n                >\r\n                    <Toolbar disableGutters={!this.props.General.isDrawerOpen}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"Open drawer\"\r\n                            onClick={() => this.toggle_drawer()}\r\n                            className={classNames(classes.menuButton, this.props.General.isDrawerOpen && classes.hide)}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                menu\r\n                            </i>\r\n                        </IconButton>\r\n\r\n                        <Typography className={classNames(classes.Title, classes.grow)} onClick={() => this.toggle_header()} variant=\"h5\" color=\"inherit\" noWrap>\r\n                            Project // NEON /\r\n                        </Typography>\r\n                        <IconButton onClick={() => this.toggle_header()}>\r\n                            {\r\n                                <i className=\"material-icons\" style={{ color: \"rgb(255, 255, 255)\" }}>\r\n                                    {\r\n                                        this.props.General.isHeaderOpen\r\n                                            ? \"keyboard_arrow_up\"\r\n                                            : \"keyboard_arrow_down\"\r\n                                    }\r\n                                </i>\r\n                            }\r\n                        </IconButton>\r\n\r\n                        <Avatar\r\n                            className={classes.avatar}\r\n                            onClick={() => {\r\n                                window.open('https://mikacinc.github.io/Portfolio/', '_blank');\r\n                            }}\r\n                        >\r\n                            <img\r\n                                alt=\"Mihajlo Marjanović\"\r\n                                src={Profilna}\r\n                            />\r\n                        </Avatar>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classNames(classes.drawerPaper, !this.props.General.isDrawerOpen && classes.drawerPaperClose),\r\n                    }}\r\n                    open={this.props.General.isDrawerOpen}\r\n                >\r\n                    <div className={classes.toolbar}>\r\n                        <IconButton onClick={() => this.toggle_drawer()}>\r\n                            {this.renderIcon(theme)}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <MenuList>\r\n                        {\r\n                            this.renderMenuItem(\"WelcomePage\", \"home\", \"Home\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"UserPage\", \"settings\", \"Settings\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"ToDo\", \"done_all\", \"To-Do list\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Notes\", \"notes\", \"Notes\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Counters\", \"add_circle_outline\", \"Counters\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Time\", \"access_time\", \"Time\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Calculator\", \"dialpad\", \"Calculator\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"String\", \"message\", \"String\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Randomiser\", \"gesture\", \"Randomiser\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Arrays\", \"linear_scale\", \"Arrays\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Facts\", \"filter_none\", \"Fun Facts\")\r\n                        }\r\n                        {\r\n                            //this.renderMenuItem(\"Uno\", \"sim_card\", \"Uno\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Games\", \"videogame_asset\", \"Games\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Quizes\", \"widgets\", \"Quizes\")\r\n                        }\r\n                    </MenuList>\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    {this.props.General.isHeaderOpen ? <ExtendedHeader /> : null}\r\n                    <br />\r\n                    <Zoom in={true} style={{ transitionDelay: 100 }}>\r\n                        <RenderPage />\r\n                    </Zoom>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nShell.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    connect(state => {\r\n        const { General } = state;\r\n\r\n        return {\r\n            General,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Shell);","import React, { Component } from 'react';\r\nimport './App.css';\r\n// Material UI\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\n//import RaisedButton from 'material-ui/RaisedButton';\r\n//import Avatar from 'material-ui/Avatar';\r\n// Dark theme\r\n/*\r\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\r\nimport darkBaseTheme from 'material-ui/styles/baseThemes/darkBaseTheme';\r\n*/\r\n// Shell\r\nimport Shell from './Shell/Shell'\r\n\r\nimport purple from '@material-ui/core/colors/purple';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass App extends Component {\r\n\r\n  getTheme() {\r\n    return createMuiTheme({...this.props.General.theme});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={this.getTheme()}>\r\n        <div className=\"App\">\r\n          <Shell />\r\n        </div>\r\n      </ThemeProvider >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  const { General } = state;\r\n\r\n  return {\r\n      General,\r\n  };\r\n},\r\n  dispatch => {\r\n      return bindActionCreators({}, dispatch);\r\n  })(App);","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","var General = {\r\n    currentPage: \"WelcomePage\",\r\n    isDrawerOpen: false,\r\n    isHeaderOpen: false,\r\n    // themeType: 'light',\r\n    theme: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#3f51b5'\r\n            },\r\n            secondary: {\r\n                main: '#ff3d00'\r\n            }\r\n        },\r\n        typography: {\r\n            useNextVariants: true,\r\n        },\r\n    }\r\n}\r\n\r\nexport default General;","import initialState from \"../.././Data/General\";\r\nimport _ from 'lodash';\r\n\r\nfunction General(state, action) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState\r\n  }\r\n  switch (action.type) {\r\n    case \"PAGE_CHANGE\":\r\n      return {\r\n        ...state,\r\n        currentPage: action.page\r\n      }\r\n    case \"TOGGLE_HEADER\":\r\n      return {\r\n        ...state,\r\n        isHeaderOpen: !state.isHeaderOpen\r\n      }\r\n    case \"TOGGLE_DRAWER\":\r\n      return {\r\n        ...state,\r\n        isDrawerOpen: !state.isDrawerOpen\r\n      }\r\n    // case \"TOGGLE_THEME\":\r\n    //   return {\r\n    //     ...state,\r\n    //     themeType: action.theme\r\n    //   }\r\n    case \"CHANGE_THEME_PROPERTY\":\r\n      return {\r\n        ...state,\r\n        theme: {\r\n          ...state.theme,\r\n          ..._.set(state, `theme.${action.prop}`, action.value)\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default General;","import initialState from \"../.././Data/User\";\r\n\r\nfunction User(state, action) {\r\n    if (typeof state === 'undefined') {\r\n        return initialState\r\n    }\r\n    switch (action.type) {\r\n        case \"NAME_CHANGE\":\r\n            return {\r\n                ...state,\r\n                name: action.name\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default User;","/*\r\nimport slika from \".././Pictures/Uno_cards/blue_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/red_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/green_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/yellow_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/wild_color_changer.png\";\r\nimport slika from \".././Pictures/Uno_cards/wild_pick_four.png\";\r\n*/\r\n\r\n//import karte from \".././Pictures/Uno_cards\";\r\n\r\n//console.log(karte)\r\n\r\nvar Uno = [\r\n    {\r\n        ID: 1,\r\n        Src: \"\",\r\n        Color: \"blue\",\r\n        Number: 0,\r\n    },\r\n    {\r\n        ID: 2,\r\n        Src: \"\",\r\n        Color: \"green\",\r\n        Number: 1,\r\n    },\r\n    {\r\n        ID: 3,\r\n        Src: \"\",\r\n        Color: \"yellow\",\r\n        Number: 2,\r\n    },\r\n];\r\n\r\nexport default Uno;","import initialState from \"../.././Data/Uno\";\r\n\r\nfunction Uno(state, action) {\r\n    if (typeof state === 'undefined') {\r\n        return initialState;\r\n    }\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default Uno;","var ToDoLists = [\r\n    {\r\n        ID: 1,\r\n        ListName: \"Kupovina\",\r\n        Archived: false,\r\n        Todos: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Hleb\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 2\r\n            },\r\n            {\r\n                ID: 11,\r\n                Text: \"Mleko\",\r\n                Completed: true,\r\n                Notes: \"Kupio ili ne?\",\r\n                Importance: 3\r\n            },\r\n            {\r\n                ID: 12,\r\n                Text: \"Sir\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 1\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        ID: 2,\r\n        ListName: \"Muzika\",\r\n        Archived: false,\r\n        Todos: [\r\n            {\r\n                ID: 44,\r\n                Text: \"LSD-Genius\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 1\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default ToDoLists;","import initialState from '../../Data/ToDo';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction ToDoReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n\r\n        case 'NEW_TASK': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty(\"ID\") && data.hasOwnProperty(\"Task\")) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            Todos: [\r\n                                ...item.Todos, {\r\n                                    ...data.Task\r\n                                }\r\n                            ]\r\n                        }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'NEW_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DELETE_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'EDIT_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {...item};\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case \"DELETE_TASK\": {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID') && data.hasOwnProperty('Task')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            Todos: item.Todos.filter((Todo) => {\r\n                                if (Todo.ID !== data.Task.ID) {\r\n                                    return true;\r\n                                }\r\n                                return false;\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case \"EDIT_TASK\": {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty(\"ID\") && data.hasOwnProperty(\"Task\")) {\r\n                return deepFreeze(state.map((list) => {\r\n                    if (list.ID === data.ID) {\r\n                        return {\r\n                            ...list,\r\n                            Todos: list.Todos.map((task) => {\r\n                                if (task.ID === data.Task.ID) {\r\n                                    return {\r\n                                        ...task,\r\n                                        ...data.Task\r\n                                    }\r\n                                } else {\r\n                                    return task\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return list\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ToDoReducer;","var Counters = [\r\n    {\r\n        ID: 1,\r\n        Title: \"Ključevi\",\r\n        Value: 3,\r\n        Date: new Date(),\r\n        Color: \"#000000\",\r\n        Goal: 6\r\n    },\r\n    {\r\n        ID: 2,\r\n        Title: \"Izgovorenih reči\",\r\n        Value: 23,\r\n        Date: new Date(),\r\n        Color: \"#4a148c\",\r\n        Goal: 50\r\n    },\r\n    {\r\n        ID: 3,\r\n        Title: \"Krugova\",\r\n        Value: 8,\r\n        Date: new Date(),\r\n        Color: \"#ff3d00\",\r\n        Goal: 120\r\n    },\r\n];\r\n\r\nexport default Counters;","import initialState from '../../Data/Counters';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction CountersReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n        case 'NEW_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'EDIT_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {\r\n                        ...item\r\n                    };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DELETE_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'INCREASE': {\r\n            const { data } = action;\r\n\r\n            if (data === 0 || !isNaN(data)) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data) {\r\n                        return {\r\n                            ...item,\r\n                            Value: item.Value + 1\r\n                        };\r\n                    }\r\n                    return { ...item };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DECREASE': {\r\n            const { data } = action;\r\n\r\n            if (data === 0 || !isNaN(data)) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data) {\r\n                        return {\r\n                            ...item,\r\n                            Value: item.Value - 1\r\n                        };\r\n                    }\r\n                    return { ...item };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default CountersReducer;","var Notes = [\r\n    {\r\n        ID: 1,\r\n        Title: \"Faza tranzicije\",\r\n        Content: \"Fazu tranzicije osim privatizacije odlikuje tendencija opšte revitalizacije\",\r\n        Color: \"#4e342e\",\r\n        Date: new Date(),\r\n    },\r\n    {\r\n        ID: 2,\r\n        Title: \"Kampovanje\",\r\n        Content: \"1\",\r\n        Color: \"#0d47a1\",\r\n        Date: new Date(),\r\n    },\r\n    {\r\n        ID: 3,\r\n        Title: \"Vrh planine\",\r\n        Content: \"3\",\r\n        Color: \"#4a148c\",\r\n        Date: new Date(),\r\n    },\r\n]\r\n\r\nexport default Notes;","import initialState from '../../Data/Notes';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction CountersReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n\r\n        case 'NEW_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        case 'EDIT_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {\r\n                        ...item\r\n                    };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        case 'DELETE_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default CountersReducer;","const DefaultQuizes = [\r\n    {\r\n        ID: 1,\r\n        Name: \"Glavni gradovi\",\r\n        ShortDescription: \"Da li znaš koji je glavni grad koje države?\",\r\n        Color: \"#000\",\r\n        Tags: [],\r\n        Questions: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Srbija\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Abu Dabi\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Sofija\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Beograd\",\r\n                        Correct: true\r\n                    },\r\n                    {\r\n                        Text: \"Berlin\",\r\n                        Correct: false\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                ID: 2,\r\n                Text: \"Mađarska\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Vašington\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Berlin\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Tirana\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Budimpešta\",\r\n                        Correct: true\r\n                    },\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        ID: 2,\r\n        Name: \"Građa ćelije\",\r\n        ShortDescription: \"Šta je ćelija i od čega se sastoji?\",\r\n        Color: \"#0f0\",\r\n        Tags: [],\r\n        Questions: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Koju ulogu imaju mitohondrije u ćeliji?\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Prenos signala\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Deoba\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Komunikacija sa drugim ćelijama\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Ćelijsko disanje\",\r\n                        Correct: true\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n]\r\n\r\nexport default DefaultQuizes;","import initialState from \"../.././Data/Quizes\";\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction Quizes(state, action) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState\r\n  }\r\n  switch (action.type) {\r\n    case \"qqq\":\r\n      return {};\r\n    case 'DELETE_QUIZ': {\r\n      const { data } = action;\r\n\r\n      if (data && data.hasOwnProperty('ID')) {\r\n        return deepFreeze(state.filter((item) => {\r\n          if (item.ID !== data.ID) {\r\n            return true;\r\n          }\r\n          return false;\r\n        }));\r\n      }\r\n\r\n      return state;\r\n    }\r\n    case 'NEW_QUIZ': {\r\n      const { data } = action;\r\n\r\n      if (data) {\r\n          return [\r\n              ...state,\r\n              {\r\n                  ...data\r\n              }\r\n          ];\r\n      }\r\n\r\n      return state;\r\n  }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default Quizes;","import {combineReducers} from \"redux\";\r\nimport General from \"./GeneralReducer\";\r\nimport User from \"./UserReducer\";\r\nimport Uno from \"./UnoReducer\";\r\nimport Todo from \"./ToDoReducer\";\r\nimport Counters from \"./CountersReducer\";\r\nimport Notes from \"./NotesReducer\";\r\nimport Quizes from \"./QuizesReducer\";\r\n\r\nexport default combineReducers({\r\n    General,\r\n    User,\r\n    Uno,\r\n    Todo,\r\n    Counters,\r\n    Notes,\r\n    Quizes,\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n// Reducer\r\nimport reducer from \"./Reducers/index\";\r\n// redux\r\nimport { createStore } from 'redux'\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(reducer)\r\n\r\n//console.log(store.getState())\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}