{"version":3,"sources":["Others/Header.js","Others/Stats.js","Content/HomePage/WelcomePage.js","Content/Calculator/index.js","Actions/UserActions/index.js","Content/UserPage/index.js","Content/Time/Components/StopWatch.js","Components/SnackBars/SnackSuccess.js","Content/Time/Components/Countdown.js","Content/Time/index.js","Content/Arrays/index.js","Content/Uno/Card.js","Content/Uno/index.js","Content/ToDo/Components/Lists.js","Actions/ToDoActions/index.js","Content/ToDo/Components/TaskView.js","Content/ToDo/Components/CurrentList.js","Content/ToDo/Components/ListEdit.js","Data/User.js","Content/ToDo/index.js","Components/TextEditor.js","Data/Settings/darkPickerColors.js","Actions/NotesActions/index.js","Content/Notes/NotesView.js","Actions/CountersActions/index.js","Content/Notes/index.js","Content/Counters/CounterView.js","Content/Counters/index.js","Content/String/Components/Convert.js","Content/String/Components/Decorate.js","Content/String/index.js","lib/Common/index.js","Content/Randomiser/Components/Rnd_number.js","Content/Randomiser/Components/Rnd_color.js","Content/Randomiser/Components/Coin.js","Content/Randomiser/Components/Dice.js","Content/Randomiser/index.js","Content/Quizes/QuizTile.js","Components/SnackBars/SnackError.js","Content/Quizes/Summary.js","Actions/QuizActions/index.js","Content/Quizes/EditQuiz.js","Content/Quizes/index.js","Actions/GeneralActions/index.js","Content/index.js","Shell/Shell.js","App.js","registerServiceWorker.js","Data/General.js","Reducers/GeneralReducer/index.js","Reducers/UserReducer/index.js","Data/Uno.js","Reducers/UnoReducer/index.js","Data/ToDo.js","Reducers/ToDoReducer/index.js","Data/Counters.js","Reducers/CountersReducer/index.js","Data/Notes.js","Reducers/NotesReducer/index.js","Data/Quizes.js","Reducers/QuizesReducer/index.js","Reducers/index.js","index.js","logo.svg","Pictures/mikac.jpeg"],"names":["ExtendedHeader","react_default","a","createElement","Paper_default","style","width","marginTop","marginBottom","textAlign","display","zDepth","rounded","transitionEnabled","className","src","logo","alt","Component","Stats","WelcomePage","this","props","User","name","Others_Stats","material_ui_Divider_default","inset","marginLeft","marginRight","List","Subheader_default","primaryText","leftAvatar","material_ui_Avatar_default","connect","state","dispatch","bindActionCreators","Calculator","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fN","operation","sN","first","fNum","parseInt","sNum","setState","num","_this2","paperStyle","operationsDiv","backgroundColor","cyan500","color","operationsButtons","fontSize","numbersDiv","grey800","grey400","flatButton","height","borderRadius","actionButton","inputStyle","iconButtons","TextField_default","hintText","value","type","floatingLabelShrinkStyle","floatingLabelText","onInput","event","target","material_ui_IconButton_default","label","onClick","substring","length","clearAll","FlatButton_default","rippleColor","labelStyle","Table","selectable","displayRowCheckbox","displayBorder","addNum","disabled","FloatingActionButton_default","secondary","result","name_change","MainActions","objectSpread","UserActions","UserPage","userName","classes","core_Paper_default","elevation","UserPaper","core_TextField_default","id","variant","onChange","Button_default","button","compose","withStyles","theme","margin","spacing","unit","maxWidth","palette","background","paper","padding","Stopwatch","updateDisplay","bind","assertThisInitialized","flags","action","time","timer","initial","moment","add","format","clearInterval","concat","toConsumableArray","ID","Math","floor","random","_this3","Fade_default","in","Tooltip_default","title","IconButton_default","aria-label","setFlag","index_es","fab","setInterval","map","flag","index","chip","key","Badge_default","badgeContent","Chip_default","avatar","Avatar_default","renderDisplay","renderControls","renderFlags","Success","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","handleClose","SnackbarContent_default","classNames","success","aria-describedby","message","icon","iconVariant","text","close","green","error","dark","info","primary","warning","amber","opacity","alignItems","Countdown","handleSBClose","h","m","s","snackBarSuccess","defineProperty","arr","i","obj","push","InputFields","select","e","handleInputChange","InputProps","startAdornment","InputAdornment_default","position","makeOptionsArr","option","MenuItem_default","subtract","handleStartPause","SnackSuccess","Time","updateNowInState","now","handleDateChange","wrong","date","console","log","selected","Menu","Title","Icon","Current","inter","react","pinkA200","DatePicker_default","mode","from","compareTime","StopWatch","Components_Countdown","Content","renderContentInner","core_List_default","component","dense","item","Zoom_default","transitionDelay","ListItem_default","Avatar","ListItemText_default","Divider_default","Grid_default","container","direction","justify","renderMenu","renderContent","minHeight","justifyContent","root","flexGrow","bottom","right","main","Arrays","handleChange","panel","expanded","divisedBy","n","w","isPrime","newRow","arguments","undefined","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpansionPanelDetails_default","renderNumbers","returnEven","returnOdd","returnFibonacci","returnPrime","returnDivisible","ExpansionPanelActions_default","FormControl_default","Select_default","Card","Color","Number","Uno","Uno_Card","assign","Lists","Todos","filter","task","Completed","Tabs_default","current","changeCurrent","indicatorColor","textColor","scrollButtons","Todo","Tab_default","renderBadgeNumber","ListName","contentAlign","new_task","data","new_list","delete_list","delete_task","edit_task","edit_list","ToDoActions","TaskView","handleTaskEdit","onSubmit","Task","Text","Notes","Importance","preventDefault","isEditing","listID","handleModalClose","Dialog_default","showTaskModal","aria-labelledby","DialogTitle_default","DialogContent_default","FormControlLabel_default","control","Checkbox_default","checked","InputLabel_default","htmlFor","Input_default","autoFocus","fullWidth","multiline","rows","DialogActions_default","CurrentList","_this$props","handleSnackbarClose","handleUndoDelete","showCompleted","showUncompleted","showSnackbar","lastDeleted","list","currentList","findById","lowImportance","normalImportance","highImportance","role","listItem","ListItemAvatar_default","renderItemImportance","listItemCompleted","ListItemSecondaryAction_default","ListSubheader_default","filterTasks","renderItems","Components_TaskView","ContentProps","size","textDecoration","arrow","paddingTop","verticalAlign","buttonDelete","ListEdit","Archived","ToDo","newList","tdl","showNewListPopup","exitPopups","UserName","showNewTaskPopup","lastDeletedList","showEditListPopup","nextCurrent","_this4","Components_Lists","lists","cancel","Components_CurrentList","toggleItem","deleteItem","listName","newTask","Components_ListEdit","TransitionComponent","Zoom","Fab_default","renderMoreListOptions","extendedIcon","TextEditor","modules","toolbar","header","indent","formats","lib_default","darkColors","new_note","edit_note","delete_note","NotesActions","NotesView","handleDelete","Note","Date","prevProps","isNew","newValue","changeCurrentOnAdd","note","required","placeholder","handleValueChange","Components_TextEditor","react_color_lib","colors","circleSpacing","hex","Button","handleCancel","editorSpace","increase","decrease","new_counter","edit_counter","delete_counter","CountersActions","EmptyNote","currentNote","getFirst","prevState","notesList","_","find","currentID","renderFabButton","renderNotesList","Notes_NotesView","CounterView","Counter","Value","Goal","Counters","counterModal","exitModals","showEditModal","showNewCounterPopup","CounterToEdit","LinearProgress_default","progress","bar","Slide_default","mountOnEnter","unmountOnExit","Card_default","card","raised","CardContent_default","CardContent","badge","Typography_default","leftDiv","minusButton","rightDiv","renderProgress","Counters_CounterView","renderCounters","renderNewCounterModal","renderEditCounterModal","white","fontWeight","cursor","top","left","paddingRight","borderRight","paddingLeft","borderLeft","completedProgress","uncompletedProgress","Convert","input","convertorID","output","convertors","Label","toUpperCase","toLowerCase","split","reverse","join","Morse","ROT13","str","x","indexOf","letters","morseLetters","newText","j","rowsMax","convertDiv","SelectProps","MenuProps","menu","helperText","readOnly","arrowDiv","renderInputCard","renderArrowDown","renderConvertTypeCard","renderOutputCard","mixins","gutters","paddingBottom","Decorate","Decorations","DataTransfer","items","navigator","clipboard","writeText","decorationsWrapper","textToDisplay","copyButton","copyToClipboard","textField","inputProps","autoComplete","renderDecorations","maxHeight","overflowY","String","square","Components_Convert","Components_Decorate","renderTabs","renderTabContent","rnd_num","min","max","rnd_color","RndNumber","NumberOfIntegers","Min","Max","NumberOfColumns","Highlight","NumbersToShow","generateNumbers","mainArr","content","defaultValue","handleNumberChange","textField1","textField2","showNumbers","RndColor","changeColor","showColor","propsDiv","transitionDuration","Coin","handleFlip","showCoin","CircularProgress_default","lineHeight","Dice","NumberOfDices","Dices","generateDices","dice","diceInner","showDices","diceSpan","Randomiser","handleMenuClick","Rnd_number","Rnd_color","Components_Coin","Components_Dice","menuCard","renderChips","flexWrap","details","flexDirection","flex","cover","controls","playIcon","editIcon","deleteIcon","withTheme","quiz","Name","slice","ShortDescription","onPlay","PlayArrow_default","Edit_default","onDelete","Delete_default","Error","Summary","showSummary","handleSummaryClose","QuizName","results","r","QuestionText","isCorrect","UserAnswer","CorrectAnswer","delete_quiz","new_quiz","EditQuiz","Quiz","Tags","Questions","Answers","Correct","CurrentID","uniqueId","_ref","Q","_ref2","A","CurrentQuestion","handleQuestionChange","handleAnswerChange","renderFields","QuizActions","Quizes","currentPage","toEdit","toPlay","shuffledQuestions","nextQuestion","isFinished","answerResults","showDeleteSnackbar","snackMessage","snackType","lastDeletedQuiz","handlePlay","handleDeleteQuiz","QuestionsArray","shuffle","Question","returnShuffledQuiz","QuizTile","Ans","newQuiz","Quizes_EditQuiz","renderDefaultQuizes","getNextQuestion","handleAnswer","SnackError","Quizes_Summary","_this5","renderPage","renderSnackBar","renderSummary","renderUndoDeleteSnackbar","page_change","page","GeneralActions","RenderPage","General","HomePage_WelcomePage","Content_UserPage","Content_Calculator","Content_ToDo","Content_Time","Content_Arrays","Content_Uno","Content_Notes","Content_Counters","Content_String","Content_Randomiser","Content_Quizes","Shell","handleDrawerOpen","handleDrawerClose","handleHeaderChange","showHeader","ListItemIcon_default","AppBar_default","appBar","appBarShift","Toolbar_default","disableGutters","menuButton","hide","grow","noWrap","window","Profilna","Drawer_default","drawerPaper","drawerPaperClose","renderIcon","MenuList_default","renderMenuItem","Header","React","zIndex","overflow","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","dislay","whiteSpace","overflowX","breakpoints","up","default","bigAvatar","createMuiTheme","typography","useNextVariants","App","MuiThemeProvider_default","src_Shell_Shell","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","initialState","Src","ToDoLists","ToDoReducer","deepFreeze","hasOwnProperty","CountersReducer","isNaN","DefaultQuizes","combineReducers","store","createStore","reducer","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.aa3d2a1e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from '../logo.svg';\r\n\r\nimport Paper from 'material-ui/Paper';\r\n\r\nclass ExtendedHeader extends Component {\r\n    render() {\r\n        const style = {\r\n            width: \"95%\",\r\n            marginTop: -25,\r\n            marginBottom: 20,\r\n            textAlign: 'center',\r\n            display: 'inline-block',\r\n          };\r\n        return (\r\n            <Paper style={style} zDepth={3} rounded={false} transitionEnabled={true}>\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <h1 className=\"App-title\">Project // NEON /</h1>\r\n                    <p>Built with react.js & redux ++ Material UI</p>\r\n                </header>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExtendedHeader;","import React, { Component } from 'react';\r\n\r\nclass Stats extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Statistics</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stats;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Avatar from 'material-ui/Avatar';\r\nimport { List, ListItem } from 'material-ui/List';\r\nimport Subheader from 'material-ui/Subheader';\r\nimport Divider from 'material-ui/Divider';\r\n//import MobileTearSheet from '.././Others/MobileTearSheet';\r\nimport Paper from 'material-ui/Paper';\r\nimport Stats from \"../.././Others/Stats\";\r\n//import User from \"../.././Data/User\";\r\n//import TextField from 'material-ui/TextField';\r\n\r\nclass WelcomePage extends Component {\r\n    render() {\r\n        const listStyle = {\r\n            width: \"30%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\"\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>WELCOME, {this.props.User.name} !</h1>\r\n                <Stats />\r\n                <Divider inset={false} />\r\n                <br />\r\n                <Paper style={listStyle} zDepth={3} rounded={false} transitionEnabled={true}>\r\n                    <List >\r\n                        <Subheader>Explore NEON</Subheader>\r\n                        <ListItem\r\n                            primaryText=\"Simple Calculator\"\r\n                            leftAvatar={\r\n                                <Avatar>\r\n                                    <i className=\"material-icons\">dialpad</i>\r\n                                </Avatar>\r\n                            }\r\n                        />\r\n                        <Divider inset={true} />\r\n                        <ListItem\r\n                            primaryText=\"To-Do list\"\r\n                            leftAvatar={\r\n                                <Avatar>\r\n                                    <i className=\"material-icons\">done_all</i>\r\n                                </Avatar>\r\n                            }\r\n                        />\r\n                        <Divider inset={true} />\r\n                        <ListItem\r\n                            primaryText=\"Time\"\r\n                            leftAvatar={\r\n                                <Avatar>\r\n                                    <i className=\"material-icons\">\r\n                                        access_time\r\n                                    </i>\r\n                                </Avatar>\r\n                            }\r\n                        />\r\n                    </List>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => {\r\n    const { User } = state;\r\n\r\n    return {\r\n        User,\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(WelcomePage);","import React, { Component } from 'react';\r\n\r\nimport Paper from 'material-ui/Paper';\r\nimport TextField from 'material-ui/TextField';\r\nimport FlatButton from 'material-ui/FlatButton';\r\n//import RaisedButton from 'material-ui/RaisedButton';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableRowColumn,\r\n} from 'material-ui/Table';\r\n\r\nimport {\r\n    cyan500,\r\n    grey800,\r\n    grey400\r\n} from 'material-ui/styles/colors';\r\n\r\n\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fN: \"\",\r\n            operation: \"\",\r\n            sN: \"\",\r\n            first: true,\r\n        }\r\n    }\r\n\r\n    result() {\r\n        if (!this.state.first && this.state.sN) {\r\n            let fNum = parseInt(this.state.fN, 10);\r\n            let sNum = parseInt(this.state.sN, 10);\r\n            switch (this.state.operation) {\r\n                case \"+\":\r\n                    this.setState({\r\n                        fN: fNum + sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"-\":\r\n                    this.setState({\r\n                        fN: fNum - sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"×\":\r\n                    this.setState({\r\n                        fN: fNum * sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"÷\":\r\n                    this.setState({\r\n                        fN: fNum / sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                default:\r\n                    return\r\n            }\r\n        }\r\n    }\r\n\r\n    addNum(num) {\r\n        if (this.state.first) {\r\n            this.setState({\r\n                fN: this.state.fN + num\r\n            })\r\n        } else {\r\n            this.setState({\r\n                sN: this.state.sN + num\r\n            })\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.setState({\r\n            fN: \"\",\r\n            operation: \"\",\r\n            sN: \"\",\r\n            first: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            paperStyle: {\r\n                width: \"380px\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                marginTop: \"10%\"\r\n            },\r\n            operationsDiv: {\r\n                width: \"100%\",\r\n                backgroundColor: cyan500,\r\n                color: \"white\"\r\n            },\r\n            operationsButtons: {\r\n                fontSize: \"30px\",\r\n                color: \"white\"\r\n            },\r\n            numbersDiv: {\r\n                backgroundColor: grey800,\r\n                color: grey400\r\n            },\r\n            flatButton: {\r\n                height: \"60px\",\r\n                width: \"50px\",\r\n                borderRadius: \"100%\"\r\n            },\r\n            actionButton: {\r\n                marginLeft: 17,\r\n                color: \"black\",\r\n                fontSize: \"20px\",\r\n            },\r\n            inputStyle: {\r\n                fontSize: \"32px\",\r\n                textAlign: \"right\",\r\n                width: \"70%\",\r\n                display: \"inline-block\",\r\n            },\r\n            iconButtons: {\r\n                display: \"inline-block\",\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Paper style={style.paperStyle} zDepth={5} rounded={false} transitionEnabled={true}>\r\n                    <TextField\r\n                        hintText=\"insert number...\"\r\n                        value={this.state.first ? this.state.fN : this.state.sN}\r\n                        type=\"number\"\r\n                        style={style.inputStyle}\r\n                        floatingLabelShrinkStyle={{ fontSize: \"20px\", textAlign: \"right\" }}\r\n                        floatingLabelText={this.state.fN + \" \" + this.state.operation + \" \" + this.state.sN}\r\n                        onInput={\r\n                            (event) => {\r\n                                this.state.first ?\r\n                                    this.setState({\r\n                                        fN: event.target.value\r\n                                    })\r\n                                    :\r\n                                    this.setState({\r\n                                        sN: event.target.value\r\n                                    })\r\n                            }\r\n                        }\r\n                    />\r\n                    <IconButton style={style.iconButtons} name={\"del\"} label=\"del\" onClick={\r\n                        (event) => {\r\n                            let fNum = \"\" + this.state.fN;\r\n                            let sNum = \"\" + this.state.sN;\r\n                            if (this.state.first) {\r\n                                if (fNum !== \"\") {\r\n                                    this.setState({\r\n                                        fN: fNum.substring(0, fNum.length - 1)\r\n                                    })\r\n                                }\r\n                            } else {\r\n                                if (sNum !== \"\") {\r\n                                    this.setState({\r\n                                        sN: sNum.substring(0, sNum.length - 1)\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                    }>\r\n                        <i className=\"material-icons\">\r\n                            backspace\r\n                        </i>\r\n                    </IconButton>\r\n                    <IconButton style={style.iconButtons} onClick={()=> {this.clearAll()}}>\r\n                        <i className=\"material-icons\">\r\n                            clear\r\n                        </i>\r\n                    </IconButton>\r\n                    <br />\r\n                    <Paper zDepth={4} style={style.operationsDiv}>\r\n                        <FlatButton style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }} name={\"+\"} rippleColor=\"black\" labelStyle={style.operationsButtons} label=\"+\" onClick={\r\n                            (event) => {\r\n                                this.setState({\r\n                                    operation: \"+\",\r\n                                    first: false,\r\n                                })\r\n                            }\r\n                        } />\r\n                        <FlatButton style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }} name={\"-\"} rippleColor=\"black\" label=\"-\" labelStyle={style.operationsButtons} onClick={\r\n                            (event) => {\r\n                                this.setState({\r\n                                    operation: \"-\",\r\n                                    first: false,\r\n                                })\r\n                            }\r\n                        } />\r\n                        <FlatButton style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }} name={\"×\"} rippleColor=\"black\" label=\"×\" labelStyle={style.operationsButtons} onClick={\r\n                            (event) => {\r\n                                this.setState({\r\n                                    operation: \"×\",\r\n                                    first: false,\r\n                                })\r\n                            }\r\n                        } />\r\n                        <FlatButton style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }} name={\"÷\"} rippleColor=\"black\" label=\"÷\" labelStyle={style.operationsButtons} onClick={\r\n                            (event) => {\r\n                                this.setState({\r\n                                    operation: \"÷\",\r\n                                    first: false,\r\n                                })\r\n                            }\r\n                        } />\r\n                    </Paper>\r\n                    <Table style={style.numbersDiv} selectable={false}>\r\n                        <TableBody displayRowCheckbox={false}>\r\n                            <TableRow displayBorder={false}>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"7\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(7)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"8\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(8)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"9\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(9)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                            </TableRow>\r\n                            <TableRow displayBorder={false}>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"4\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(4)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"5\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(5)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"6\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(6)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                            </TableRow>\r\n                            <TableRow displayBorder={false}>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"1\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(1)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"2\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(2)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"3\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(3)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                            </TableRow>\r\n                            <TableRow displayBorder={false}>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\".\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(\".\")\r\n                                    }} disabled={true} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FlatButton style={style.flatButton} rippleColor=\"white\" label=\"0\" labelStyle={style.operationsButtons} onClick={() => {\r\n                                        this.addNum(0)\r\n                                    }} />\r\n                                </TableRowColumn>\r\n                                <TableRowColumn>\r\n                                    <FloatingActionButton style={style.actionButton} secondary={true} zDepth={4} onClick={() => {\r\n                                        this.result()\r\n                                    }}>\r\n                                        =\r\n                                    </FloatingActionButton>\r\n                                </TableRowColumn>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;","export function name_change(name) {\r\n    return { \r\n        type: \"NAME_CHANGE\",\r\n        name\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport * as UserActions from \"../.././Actions/UserActions\";\r\n\r\nconst MainActions = {\r\n    ...UserActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    UserPaper: {\r\n        margin: theme.spacing.unit * 2,\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        padding: 20\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit\r\n    }\r\n});\r\n\r\nclass UserPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { name_change } = this.props\r\n        this.name_change = name_change\r\n\r\n        this.state = {\r\n            userName: \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Paper elevation={10} className={classes.UserPaper}>\r\n                <TextField\r\n                    id=\"userName-changer\"\r\n                    variant=\"outlined\"\r\n                    label=\"Your name\"\r\n                    value={this.props.User.name}\r\n                    onChange={(event) => {\r\n                        this.name_change(event.target.value)\r\n                    }}\r\n                />\r\n                <br/>\r\n                <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\r\n                    Delete your stats\r\n                    <i className=\"material-icons\" style={{marginLeft: \"7px\"}}>\r\n                        delete_forever\r\n                    </i>\r\n                </Button>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { User } = state;\r\n\r\n        return {\r\n            User,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(UserPage);","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport moment from 'moment';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        marginRight: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n    },\r\n    chip: {\r\n        display: \"block\",\r\n        marginTop: theme.spacing.unit,\r\n    }\r\n});\r\n\r\nclass Stopwatch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateDisplay = this.updateDisplay.bind(this);\r\n\r\n        this.state = {\r\n            display: \"00:00:00\",\r\n            flags: [],\r\n            action: \"pause\",\r\n            time: null\r\n        }\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.initial();\r\n    }\r\n\r\n    renderDisplay() {\r\n        return (\r\n            <h1>\r\n                {this.state.display}\r\n            </h1>\r\n        )\r\n    }\r\n\r\n    updateDisplay() {\r\n        this.setState({\r\n            time: moment(this.state.time.add(1, \"second\"))\r\n        }, () => {\r\n            this.setState({\r\n                display: moment(this.state.time).format(\"HH:mm:ss\")\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    initial() {\r\n        this.setState({\r\n            display: \"00:00:00\",\r\n            flags: [],\r\n            action: \"pause\",\r\n            time: null\r\n        });\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    setFlag() {\r\n        this.setState({\r\n            flags: [\r\n                ...this.state.flags,\r\n                {\r\n                    ID: Math.floor(Math.random() * 1000),\r\n                    time: this.state.display\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    renderControls() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fade in={true}>\r\n                <div>\r\n                    <Tooltip title={this.state.action === \"start\" ? \"Put a flag\" : \"Reset\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                            onClick={() => {\r\n                                this.state.action === \"start\"\r\n                                    ? this.setFlag()\r\n                                    : this.initial()\r\n                            }}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                {this.state.action === \"start\" ? \"outlined_flag\" : \"restore\"}\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        color=\"primary\"\r\n                        className={classes.fab}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n                                time: this.state.display === \"00:00:00\"\r\n                                    ? moment(\"00:00:00\", \"HH:mm:ss\")\r\n                                    : this.state.time\r\n                            }, () => {\r\n                                if (this.state.action === \"start\") {\r\n                                    this.timer = setInterval(this.updateDisplay, 1000);\r\n                                } else {\r\n                                    clearInterval(this.timer);\r\n                                }\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                            {this.state.action === \"start\" ? \"pause\" : \"play_arrow\"}\r\n                        </i>\r\n                        {this.state.action === \"start\" ? \"Pause\" : \"Start\"}\r\n                    </Fab>\r\n\r\n                    <Tooltip title={\"Pin to Home\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                add_location\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n    renderFlags() {\r\n        const { flags } = this.state;\r\n        if (!flags || !flags.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    flags.map((flag, index) => {\r\n                        return (\r\n                            <div\r\n                                className={classes.chip}\r\n                                key={flag.ID}\r\n                            >\r\n                                <Badge\r\n                                    badgeContent={index + 1}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    <Chip\r\n                                        avatar={\r\n                                            <Avatar>\r\n                                                <i className=\"material-icons\">\r\n                                                    flag\r\n                                                </i>\r\n                                            </Avatar>\r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        label={flag.time}\r\n\r\n                                    />\r\n                                </Badge>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderDisplay()}\r\n                {this.renderControls()}\r\n                {this.renderFlags()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Stopwatch);","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nclass Success extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.props.open}\r\n                autoHideDuration={this.props.autoHideDuration ? this.props.autoHideDuration : 3000}\r\n                onClose={this.props.handleClose}\r\n            >\r\n                <SnackbarContent\r\n                    className={classNames(classes.success)}\r\n                    aria-describedby=\"client-snackbar\"\r\n                    message={\r\n                        <span id=\"client-snackbar\" className={classes.message}>\r\n                            <i className={classNames(classes.icon, classes.iconVariant, \"material-icons\")}>\r\n                                check_circle_outline\r\n                            </i>\r\n                            {this.props.text.length ? this.props.text : \"Copied to clipboard!\"}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.props.handleClose}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                close\r\n                            </i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Success);","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport Success from '../../../Components/SnackBars/SnackSuccess';\r\n\r\nimport moment from 'moment';\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        marginRight: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n    },\r\n    chip: {\r\n        display: \"block\",\r\n        marginTop: theme.spacing.unit,\r\n    },\r\n    InputFields: {\r\n        margin: 7,\r\n    }\r\n});\r\n\r\nclass Countdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateDisplay = this.updateDisplay.bind(this);\r\n        this.handleSBClose = this.handleSBClose.bind(this);\r\n\r\n        this.state = {\r\n            display: \"00:00:00\",\r\n            action: \"pause\",\r\n            time: {\r\n                h: 0,\r\n                m: 0,\r\n                s: 20\r\n            },\r\n            snackBarSuccess: false\r\n        }\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.initial();\r\n    }\r\n\r\n    handleInputChange(label, value) {\r\n        this.setState({\r\n            time: {\r\n                ...this.state.time,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    makeOptionsArr(label) {\r\n        if (label === \"h\") {\r\n            let arr = [];\r\n            for (let i = 0; i < 24; i++) {\r\n                let obj = {\r\n                    value: i,\r\n                    label: i,\r\n                }\r\n                arr.push(obj);\r\n            }\r\n\r\n            return arr;\r\n        }\r\n\r\n        let arr = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            let obj = {\r\n                value: i,\r\n                label: i,\r\n            }\r\n            arr.push(obj);\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    renderDisplay() {\r\n        const { classes } = this.props;\r\n        if (this.state.display === \"00:00:00\") {\r\n            return (\r\n                <div className={classes.InputFields}>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Hours\"\r\n                        value={this.state.time.h}\r\n                        onChange={(e) => this.handleInputChange('h', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">H</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"h\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Minutes\"\r\n                        value={this.state.time.m}\r\n                        onChange={(e) => this.handleInputChange('m', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">M</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"m\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Seconds\"\r\n                        value={this.state.time.s}\r\n                        onChange={(e) => this.handleInputChange('s', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">S</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"s\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <h1>\r\n                {moment(this.state.display).format(\"HH:mm:ss\")}\r\n            </h1>\r\n        )\r\n    }\r\n\r\n    updateDisplay() {\r\n        if (this.state.display.format(\"HH:mm:ss\") === \"00:00:00\") {\r\n            clearInterval(this.timer)\r\n            this.initial();\r\n            this.setState({\r\n                snackBarSuccess: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                display: this.state.display.subtract(1, \"second\")\r\n            })\r\n        }\r\n    }\r\n\r\n    initial() {\r\n        this.setState({\r\n            display: \"00:00:00\",\r\n            action: \"pause\",\r\n            time: {\r\n                h: 0,\r\n                m: 0,\r\n                s: 20\r\n            }\r\n        });\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    handleStartPause() {\r\n        if (this.state.display === \"00:00:00\") {\r\n            const { time } = this.state;\r\n            this.setState({\r\n                display: moment(`${time.h}:${time.m}:${time.s}`, \"HH:mm:ss\"),\r\n            });\r\n            this.timer = setInterval(this.updateDisplay, 1000);\r\n            return;\r\n        }\r\n\r\n        if (this.state.action === \"pause\") {\r\n            clearInterval(this.timer);\r\n            return;\r\n        } else {\r\n            this.timer = setInterval(this.updateDisplay, 1000);\r\n            return;\r\n        }\r\n\r\n        /* this.setState({\r\n            action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n            time: this.state.display === \"00:00:00\"\r\n                ? moment(\"00:00:00\", \"HH:mm:ss\")\r\n                : this.state.time\r\n        }, () => {\r\n            if (this.state.action === \"start\") {\r\n                this.timer = setInterval(this.updateDisplay, 1000);\r\n            } else {\r\n                clearInterval(this.timer);\r\n            }\r\n        }) */\r\n    }\r\n\r\n    renderControls() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fade in={true}>\r\n                <div>\r\n                    <Tooltip title={\"Reset\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                            onClick={() => {\r\n                                this.initial()\r\n                            }}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                {\"restore\"}\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        color=\"primary\"\r\n                        className={classes.fab}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n                            }, () => {\r\n                                this.handleStartPause()\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                            {this.state.action === \"start\" ? \"pause\" : \"play_arrow\"}\r\n                        </i>\r\n                        {this.state.action === \"start\" ? \"Pause\" : \"Start\"}\r\n                    </Fab>\r\n\r\n                    <Tooltip title={\"Pin to Home\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                add_location\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n    renderFlags() {\r\n        const { flags } = this.state;\r\n        if (!flags || !flags.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    flags.map((flag, index) => {\r\n                        return (\r\n                            <div\r\n                                className={classes.chip}\r\n                                key={flag.ID}\r\n                            >\r\n                                <Badge\r\n                                    badgeContent={index + 1}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    <Chip\r\n                                        avatar={\r\n                                            <Avatar>\r\n                                                <i className=\"material-icons\">\r\n                                                    flag\r\n                                                </i>\r\n                                            </Avatar>\r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        label={flag.time}\r\n                                    />\r\n                                </Badge>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSBClose() {\r\n        this.setState({\r\n            snackBarSuccess: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderDisplay()}\r\n                {this.renderControls()}\r\n                {this.renderFlags()}\r\n                <Success\r\n                    open={this.state.snackBarSuccess}\r\n                    handleClose={this.handleSBClose}\r\n                    text={\"Countdown finished!\"}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Countdown);","import React, { Component, Fragment } from 'react';\r\n\r\nimport DatePicker from 'material-ui/DatePicker';\r\nimport _ from \"lodash\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Stopwatch from \"./Components/StopWatch.js\";\r\nimport Countdown from \"./Components/Countdown.js\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport * as moment from 'moment';\r\n\r\nimport {\r\n    cyan500,\r\n    pinkA200,\r\n} from 'material-ui/styles/colors';\r\n\r\nconst styles = theme => ({\r\n    Menu: {\r\n        width: '100%',\r\n        maxWidth: 240,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginRight: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    Content: {\r\n        width: '100%',\r\n        maxWidth: 300,\r\n        backgroundColor: theme.palette.background.paper,\r\n        minHeight: 100,\r\n        height: \"auto\",\r\n        padding: 75,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n    fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing.unit * 2,\r\n        right: theme.spacing.unit * 2,\r\n        marginRight: \"10px\"\r\n    },\r\n\r\n    Avatar: {\r\n        backgroundColor: theme.palette.primary.main\r\n    }\r\n});\r\n\r\nclass Time extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            now: moment(),\r\n            selected: {\r\n                date: moment(),\r\n            },\r\n            Menu: [\r\n                {\r\n                    ID: 1,\r\n                    Title: \"Compare time\",\r\n                    Icon: \"compare_arrows\"\r\n                },\r\n                {\r\n                    ID: 2,\r\n                    Title: \"Stopwatch\",\r\n                    Icon: \"timer\"\r\n                },\r\n                {\r\n                    ID: 3,\r\n                    Title: \"Countdown\",\r\n                    Icon: \"timelapse\"\r\n                },\r\n            ],\r\n            Current: 3\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.inter = setInterval(this.updateNowInState, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.inter)\r\n    }\r\n\r\n\r\n    updateNowInState = () => {\r\n        this.setState({\r\n            now: moment()\r\n        })\r\n    }\r\n\r\n\r\n    handleDateChange = (wrong, date) => {\r\n        console.log(date)\r\n        this.setState({\r\n            selected: {\r\n                date\r\n            }\r\n        })\r\n    }\r\n\r\n    compareTime() {\r\n        return (\r\n            <Fade in={true}>\r\n                <Fragment>\r\n                    <h1>\r\n                        <span style={{ color: cyan500 }}>Now: </span>\r\n                        {moment(this.state.now).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}\r\n                    </h1>\r\n                    <br/>\r\n                    <h1>\r\n                        <span style={{ color: pinkA200 }}>Selected: </span>\r\n                        {moment(this.state.selected.date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}\r\n                    </h1>\r\n                    <br />\r\n                    <DatePicker\r\n                        hintText={moment(this.state.selected.date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}\r\n                        mode=\"landscape\"\r\n                        value={this.state.selected.date}\r\n                        onChange={this.handleDateChange}\r\n                    />\r\n                    <br />\r\n                    <Paper style={{ width: \"33%\", marginLeft: \"auto\", marginRight: \"auto\" }} elevation={1}>\r\n                        <p>{moment(this.state.selected.date).from(this.state.now)}</p>\r\n                    </Paper>\r\n                </Fragment>\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n\r\n    renderContentInner() {\r\n        clearInterval(this.inter);\r\n\r\n        switch (this.state.Current) {\r\n            case 1: return this.compareTime();\r\n            case 2: return <Stopwatch />;\r\n            case 3: return <Countdown />;\r\n            default: return <Stopwatch />;\r\n        }\r\n    }\r\n\r\n    renderContent() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper className={classes.Content} elevation={10}>\r\n                {this.renderContentInner()}\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n    renderMenu() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper elevation={3} className={classes.Menu}>\r\n                <List component=\"nav\" dense>\r\n                    {\r\n                        this.state.Menu.map((item, index) => {\r\n                            return (\r\n                                <Zoom in={true}\r\n                                    key={item.ID}\r\n                                    style={{ transitionDelay: index * 100 }}\r\n                                >\r\n                                    <div>\r\n                                        <ListItem\r\n                                            dense\r\n                                            button\r\n                                            onClick={() => {\r\n                                                this.setState({\r\n                                                    Current: item.ID\r\n                                                })\r\n                                            }}\r\n                                        >\r\n                                            <Avatar className={classes.Avatar}>\r\n                                                <i className=\"material-icons\">\r\n                                                    {item.Icon}\r\n                                                </i>\r\n                                            </Avatar>\r\n                                            <ListItemText primary={item.Title} />\r\n                                        </ListItem>\r\n                                        {\r\n                                            !(this.state.Menu.length - 1 === index)\r\n                                                ? <Divider variant=\"inset\" />\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </Zoom>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={16}\r\n                    className={\"\"}\r\n                    alignItems={\"center\"}\r\n                    direction={\"row\"}\r\n                    justify={\"center\"}\r\n                >\r\n                    {this.renderMenu()}\r\n                    <Fade in={true} style={{ transitionDelay: 100 }}>\r\n                        {this.renderContent()}\r\n                    </Fade>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Time);","import React, { Component, Fragment } from 'react';\r\n\r\n//import Paper from '@material-ui/core/Paper';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n\r\n//import Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nclass Arrays extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: null,\r\n            divisedBy: 1,\r\n        };\r\n    }\r\n\r\n    handleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    };\r\n\r\n    returnEven() {\r\n        let arr = []\r\n        for (let i = 1; i < 100; i++) {\r\n            if (i % 2 === 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnOdd() {\r\n        let arr = []\r\n        for (let i = 1; i < 100; i++) {\r\n            if (i % 2 !== 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnFibonacci() {\r\n        let arr = [0, 1]\r\n        for (let i = 0; i <= 20; i++) {\r\n            arr.push(arr[i] + arr[i + 1])\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    isPrime(n) {\r\n        if (n === 2)\r\n            return true;\r\n        if (n === 3)\r\n            return true;\r\n        if (n % 2 === 0)\r\n            return false;\r\n        if (n % 3 === 0)\r\n            return false;\r\n\r\n        let i = 5;\r\n        let w = 2;\r\n\r\n        while (i * i <= n) {\r\n            if (n % i === 0) {\r\n                return false;\r\n            }\r\n            i += w;\r\n            w = 6 - w;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    returnPrime() {\r\n        let arr = []\r\n        for (let i = 2; i < 100; i++) {\r\n            if (this.isPrime(i)) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnDivisible() {\r\n        let arr = []\r\n        for (let i = 1; i <= 100; i++) {\r\n            if (i % this.state.divisedBy === 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    renderNumbers(arr, newRow = 10) {\r\n\r\n        if (!arr || !arr.length) return null;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    arr.map((num, index) => {\r\n                        if (index % newRow === 0 && index !== 0) {\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <span>{num + \", \"}</span>\r\n                                    <br />\r\n                                </Fragment>\r\n                            )\r\n                        } else {\r\n                            return num + \",\";\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { expanded } = this.state;\r\n\r\n        const style = {\r\n            panel: {\r\n                width: \"50%\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n            },\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <ExpansionPanel expanded={expanded === 'panel1'} style={style.panel} onChange={this.handleChange('panel1')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Even numbers between 1 and 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnEven())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel2'} style={style.panel} onChange={this.handleChange('panel2')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Odd numbers between 1 and 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnOdd(), 5)}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel3'} style={style.panel} onChange={this.handleChange('panel3')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        First 20 Fibonacci numbers\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnFibonacci())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel4'} style={style.panel} onChange={this.handleChange('panel4')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Prime numbers from 1 to 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnPrime())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel5'} style={style.panel} onChange={this.handleChange('panel5')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Numbers divisible by {this.state.divisedBy === 1 ? \"...\" : this.state.divisedBy}\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnDivisible())}\r\n                    </ExpansionPanelDetails>\r\n                    <Divider />\r\n                    <ExpansionPanelActions>\r\n                        <FormControl>\r\n                            {\"Show me numbers divisible by: \"}\r\n                            <Select\r\n                                value={this.state.divisedBy}\r\n                                onChange={(event) => this.setState({ divisedBy: event.target.value })}\r\n                            >\r\n                                <MenuItem value={3}>3</MenuItem>\r\n                                <MenuItem value={4}>4</MenuItem>\r\n                                <MenuItem value={5}>5</MenuItem>\r\n                                <MenuItem value={6}>6</MenuItem>\r\n                                <MenuItem value={7}>7</MenuItem>\r\n                                <MenuItem value={8}>8</MenuItem>\r\n                                <MenuItem value={9}>9</MenuItem>\r\n                                <MenuItem value={10}>10</MenuItem>\r\n                                <MenuItem value={15}>15</MenuItem>\r\n                                <MenuItem value={25}>25</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </ExpansionPanelActions>\r\n                </ExpansionPanel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Arrays;","import React, { Component } from 'react';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                backgroundColor: this.props.Color,\r\n                height: \"400px\",\r\n                width: \"200px\"\r\n            }}>\r\n                <h1>{this.props.Number}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Card from \"./Card\";\r\n//import url from \"../.././Pictures/Uno_cards/blue_0.png\";\r\n\r\nclass Uno extends Component {\r\n    render() {\r\n        //var url = \"\";\r\n        console.log(this.props.Uno)\r\n        return (\r\n            <div>\r\n                <h1>Ovo je Uno</h1>\r\n                {\r\n                    this.props.Uno.map((item) => {\r\n                        return (\r\n                            <Card \r\n                                {...item}\r\n                                onClick={()=> {\r\n                                    \r\n                                }}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => {\r\n    const { Uno } = state;\r\n\r\n    return {\r\n        Uno,\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Uno);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        maxWidth: 720,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        contentAlign: \"center\"\r\n    },\r\n\r\n    padding: {\r\n        padding: `0 ${theme.spacing.unit * 2}px`,\r\n    }\r\n});\r\n\r\nclass Lists extends Component {\r\n\r\n    renderBadgeNumber(item) {\r\n        var unCompleted = item.Todos.filter((task)=> {\r\n            if(!task.Completed) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n\r\n        return unCompleted.length;\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <Tabs\r\n                    value={this.props.current}\r\n                    onChange={(event, value) => {\r\n                        this.props.changeCurrent(value)\r\n                    }}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {\r\n                        this.props.Todo.map((item) => {\r\n                            return (\r\n                                <Tab\r\n                                    label={\r\n                                        <Badge \r\n                                        className={classes.padding} \r\n                                        color=\"secondary\" \r\n                                        badgeContent={this.renderBadgeNumber(item)}>\r\n                                            {item.ListName}\r\n                                        </Badge>\r\n                                    }\r\n                                    key={item.ID}\r\n                                    value={item.ID}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </Tabs>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nLists.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Todo } = state;\r\n\r\n        return {\r\n            Todo,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators({}, dispatch);\r\n        })\r\n)(Lists);","export function new_task(data) {\r\n    return {\r\n        type: 'NEW_TASK',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function new_list(data) {\r\n    return {\r\n        type: 'NEW_LIST',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_list(data) {\r\n    return {\r\n        type: 'DELETE_LIST',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_task(data) {\r\n    return {\r\n        type: 'DELETE_TASK',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function edit_task(data) {\r\n    return {\r\n        type: 'EDIT_TASK',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_list(data) {\r\n    return {\r\n        type: 'EDIT_LIST',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nclass TaskView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_task } = this.props;\r\n        this.new_task = new_task;\r\n\r\n        this.handleTaskEdit = this.handleTaskEdit.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            Task: {\r\n                ID: \"\",\r\n                Text: \"\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 2,\r\n                ...this.props.Task\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Task.ID ? true : false;\r\n    }\r\n\r\n    handleTaskEdit(label, value) {\r\n        this.setState({\r\n            ...this.state,\r\n            Task: {\r\n                ...this.state.Task,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        var ID = Math.floor(Math.random() * 1000),\r\n            Task = {};\r\n\r\n        if (this.isEditing()) {\r\n            Task = {\r\n                ...this.state.Task,\r\n            }\r\n            this.props.edit_task({\r\n                ID: this.props.listID,\r\n                Task\r\n            })\r\n        } else {\r\n            Task = {\r\n                ...this.state.Task,\r\n                ID\r\n            }\r\n            this.props.new_task({\r\n                ID: this.props.listID,\r\n                Task\r\n            })\r\n        }\r\n\r\n        this.props.handleModalClose()\r\n    }\r\n\r\n    render() {\r\n        const { Task } = this.state;\r\n        return (\r\n            <Dialog\r\n                open={this.props.showTaskModal}\r\n                onClose={this.props.handleModalClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">{\"Edit task #\" + Task.ID}</DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={Task.Completed}\r\n                                    onChange={() => this.handleTaskEdit(\"Completed\", !Task.Completed)}\r\n                                    value={\"?\"}\r\n                                />\r\n                            }\r\n                            label={\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"text\">Name</InputLabel>\r\n                                    <Input\r\n                                        autoFocus\r\n                                        fullWidth\r\n                                        id=\"text\"\r\n                                        value={Task.Text}\r\n                                        onChange={(e) => {\r\n                                            this.handleTaskEdit(\"Text\", e.target.value)\r\n                                        }} />\r\n                                </FormControl>\r\n                            }\r\n                        />\r\n                        <br />\r\n                        <div>\r\n                            Importance level:\r\n                            <IconButton\r\n                                color={Task.Importance === 1 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 1)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    low_priority\r\n                                </i>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                color={Task.Importance === 2 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 2)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    code\r\n                                </i>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                color={Task.Importance === 3 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 3)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    priority_high\r\n                                </i>\r\n                            </IconButton>\r\n                        </div>\r\n                        {\r\n                            /*\r\n                            <Button variant=\"flat\" color=\"primary\">\r\n                                Move to list\r\n                            <i className=\"material-icons\">send</i>\r\n                            </Button>\r\n                            */\r\n                        }\r\n                        <br />\r\n                        <FormControl>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                label=\"Notes\"\r\n                                fullWidth\r\n                                multiline\r\n                                rows=\"3\"\r\n                                value={Task.Notes}\r\n                                onChange={(e) => {\r\n                                    this.handleTaskEdit(\"Notes\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleModalClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(TaskView);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n//import Chip from '@material-ui/core/Chip';\r\n\r\nimport TaskView from './TaskView';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 420,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    },\r\n\r\n    margin: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n\r\n    listItemCompleted: {\r\n        textDecoration: \"line-through\"\r\n    },\r\n\r\n    arrow: {\r\n        paddingTop: \"15px\",\r\n        verticalAlign: \"center\"\r\n    },\r\n\r\n    avatar: {\r\n        margin: 10,\r\n    },\r\n\r\n    highImportance: {\r\n        color: '#fff',\r\n        backgroundColor: '#f44336'\r\n    },\r\n\r\n    normalImportance: {\r\n        color: '#fff',\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n\r\n    lowImportance: {\r\n        color: '#000',\r\n        backgroundColor: '#4caf50',\r\n    },\r\n\r\n    close: {\r\n        width: theme.spacing.unit * 4,\r\n        height: theme.spacing.unit * 4,\r\n    },\r\n\r\n    buttonDelete: {\r\n        color: '#fff',\r\n        backgroundColor: theme.palette.secondary.main,\r\n    }\r\n});\r\n\r\nclass CurrentList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { delete_task, edit_task, new_task } = this.props;\r\n        this.delete_task = delete_task;\r\n        this.edit_task = edit_task;\r\n        this.new_task = new_task;\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n        this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n\r\n        this.state = {\r\n            showCompleted: true,\r\n            showUncompleted: true,\r\n            showTaskModal: false,\r\n            showSnackbar: false,\r\n            Task: {\r\n                Importance: 2\r\n            },\r\n            lastDeleted: {}\r\n        }\r\n    }\r\n\r\n    findById(list, ID, flag) {\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].ID === ID) {\r\n                if (!flag) {\r\n                    return list[i].Todos;\r\n                } else {\r\n                    return list[i];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleUndoDelete() {\r\n        this.handleSnackbarClose()\r\n        this.new_task({\r\n            ID: this.props.currentList,\r\n            Task: this.state.lastDeleted\r\n        })\r\n    }\r\n\r\n    handleSnackbarClose() {\r\n        this.setState({\r\n            showSnackbar: false\r\n        })\r\n    }\r\n\r\n    handleModalClose() {\r\n        this.setState({\r\n            showTaskModal: false\r\n        })\r\n    }\r\n\r\n    handleChange(label) {\r\n        let value = this.state[label];\r\n        this.setState({\r\n            [label]: !value\r\n        })\r\n    }\r\n\r\n    handleTaskEdit(label, value) {\r\n        this.setState({\r\n            ...this.state,\r\n            Task: {\r\n                ...this.state.Task,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    filterTasks(flag, tasks = this.findById(this.props.Todo, this.props.currentList, false)) {\r\n        return tasks.filter((task) => {\r\n            if (flag) {\r\n                return !task.Completed;\r\n            }\r\n            return task.Completed;\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.handleModalClose()\r\n        const data = {\r\n            ID: this.props.currentList,\r\n            Task: this.state.Task\r\n        }\r\n        this.edit_task(data)\r\n    }\r\n\r\n    renderItemImportance(item) {\r\n        const { classes } = this.props;\r\n        const { Importance } = item;\r\n        switch (Importance) {\r\n            case 1: return <Avatar className={classes.lowImportance}>\r\n                <i className=\"material-icons\">low_priority</i>\r\n            </Avatar>\r\n            case 2: return <Avatar className={classes.normalImportance}>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n            </Avatar>\r\n            case 3: return <Avatar className={classes.highImportance}>\r\n                <i className=\"material-icons\">priority_high</i>\r\n            </Avatar>\r\n            default: return <Avatar className={classes.normalImportance}>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n            </Avatar>\r\n        }\r\n    }\r\n\r\n    renderItems(item) {\r\n        const { classes } = this.props;\r\n\r\n        return <ListItem\r\n            key={item.ID}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={() => {\r\n                const data = {\r\n                    ID: this.props.currentList,\r\n                    Task: {\r\n                        ...item,\r\n                        Completed: !item.Completed\r\n                    }\r\n                }\r\n                this.edit_task(data)\r\n            }}\r\n            className={classes.listItem}\r\n        >\r\n            <ListItemAvatar>\r\n                {this.renderItemImportance(item)}\r\n            </ListItemAvatar>\r\n            <Checkbox\r\n                checked={item.Completed}\r\n            />\r\n            <ListItemText\r\n                className={item.Completed ? classes.listItemCompleted : \"\"}\r\n                primary={item.Text}\r\n                secondary={item.Notes\r\n                    ? <i className=\"material-icons\">notes</i>\r\n                    : null\r\n                }\r\n            />\r\n            <ListItemSecondaryAction>\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showTaskModal: true,\r\n                            Task: {\r\n                                ...this.state.Task,\r\n                                ...item\r\n                            }\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\">\r\n                        edit\r\n                    </i>\r\n                </IconButton>\r\n                <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showSnackbar: true,\r\n                            lastDeleted: {\r\n                                ...item\r\n                            }\r\n                        })\r\n                        const data = {\r\n                            ID: this.props.currentList,\r\n                            Task: item\r\n                        }\r\n                        this.delete_task(data)\r\n                    }}>\r\n                    <i className=\"material-icons\">\r\n                        delete_forever\r\n                    </i>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <List className={classes.root}>\r\n                <ListSubheader onClick={() => this.handleChange(\"showUncompleted\")}>\r\n                    <IconButton onClick={() => this.handleChange(\"showUncompleted\")}>\r\n                        <i className={\"material-icons\"}>\r\n                            {!this.state.showUncompleted ? \"keyboard_arrow_down\" : \"keyboard_arrow_up\"}\r\n                        </i>\r\n                    </IconButton>\r\n                    Uncompleted\r\n                </ListSubheader>\r\n                {\r\n                    this.state.showUncompleted && this.filterTasks(true).map((item) => {\r\n                        return (\r\n                            this.renderItems(item)\r\n                        )\r\n                    })\r\n                }\r\n                <ListSubheader onClick={() => this.handleChange(\"showCompleted\")}>\r\n                    <IconButton onClick={() => this.handleChange(\"showCompleted\")}>\r\n                        <i className={\"material-icons\"}>\r\n                            {!this.state.showCompleted ? \"keyboard_arrow_down\" : \"keyboard_arrow_up\"}\r\n                        </i>\r\n                    </IconButton>\r\n                    Completed\r\n                </ListSubheader>\r\n                {\r\n                    this.state.showCompleted && this.filterTasks(false).map((item) => {\r\n                        return (\r\n                            this.renderItems(item)\r\n                        )\r\n                    })\r\n                }\r\n                <Divider />\r\n                {\r\n                    this.state.showTaskModal\r\n                        ? <TaskView\r\n                            Task={this.state.Task}\r\n                            showTaskModal={this.state.showTaskModal}\r\n                            listID={this.props.currentList}\r\n                            handleModalClose={this.handleModalClose}\r\n                        />\r\n                        : null\r\n                }\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={this.state.showSnackbar}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleSnackbarClose}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span id=\"message-id\">Task deleted</span>}\r\n                    action={[\r\n                        <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n                            UNDO\r\n                        </Button>,\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.handleSnackbarClose}\r\n                        >\r\n                            <i className=\"material-icons\">close</i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\nCurrentList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Todo } = state;\r\n\r\n        return {\r\n            Todo,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(CurrentList);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nclass ListEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_list, edit_list } = this.props;\r\n        this.new_list = new_list;\r\n        this.edit_list = edit_list;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            list: {\r\n                ID: \"\",\r\n                ListName: \"\",\r\n                Archived: false,\r\n                Todos: [],\r\n                ...this.props.list\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.list.ID ? true : false;\r\n    }\r\n\r\n    handleChange(label, value) {\r\n        this.setState({\r\n            list: {\r\n                ...this.state.list,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_list(this.state.list)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_list({\r\n                ...this.state.list,\r\n                ID\r\n            });\r\n        }\r\n\r\n        this.props.handleClose();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {\r\n                        this.isEditing()\r\n                            ? \"Edit list\"\r\n                            : \"Add new list\"\r\n                    }\r\n                </DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">Name your list</InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.list.ListName}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"ListName\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(ListEdit);","var User = {\r\n    name: \"GSM\"\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport compose from 'recompose/compose';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\n//import './App.css';\r\nimport Lists from \"./Components/Lists\";\r\nimport CurrentList from \"./Components/CurrentList\";\r\nimport ListEdit from './Components/ListEdit';\r\nimport TaskView from './Components/TaskView';\r\n\r\nimport User from '../../Data/User';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n  ...ToDoActions\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 420,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n\r\n  extendedIcon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass ToDo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.exitPopups = this.exitPopups.bind(this);\r\n    this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n    this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n\r\n    const { delete_list, new_list } = this.props;\r\n    this.delete_list = delete_list;\r\n    this.new_list = new_list;\r\n\r\n    this.state = {\r\n      tdl: [...this.props.Todo],\r\n      UserName: User.name,\r\n      CurrentList: 1,\r\n      showNewListPopup: false,\r\n      showNewTaskPopup: false,\r\n      lastDeletedList: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      tdl: [...this.props.Todo]\r\n    })\r\n  }\r\n\r\n\r\n  findById(list, ID, flag) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].ID === ID) {\r\n        if (!flag) {\r\n          return list[i].Todos;\r\n        } else {\r\n          return list[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  newList = (list) => {\r\n    this.setState({\r\n      tdl: [\r\n        ...this.state.tdl,\r\n        list\r\n      ],\r\n      showNewListPopup: false\r\n    })\r\n  }\r\n\r\n  currentList() {\r\n    return this.findById(this.props.Todo, this.state.CurrentList, true);\r\n  }\r\n\r\n  nextCurrent() {\r\n    return this.props.Todo.filter((list) => {\r\n      if (list.ID !== this.state.CurrentList) {\r\n        return true;\r\n      }\r\n      return false;\r\n    })[0].ID\r\n  }\r\n\r\n  handleUndoDelete() {\r\n    this.handleSnackbarClose()\r\n    this.new_list(this.state.lastDeletedList)\r\n  }\r\n\r\n  handleSnackbarClose() {\r\n    this.setState({\r\n      showSnackbar: false\r\n    })\r\n  }\r\n\r\n  exitPopups() {\r\n    this.setState({\r\n      showNewListPopup: false,\r\n      showNewTaskPopup: false,\r\n      showEditListPopup: false\r\n    })\r\n  }\r\n\r\n  renderMoreListOptions() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showNewListPopup: true\r\n            })\r\n          }}>\r\n          New list\r\n          </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"medium\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showEditListPopup: true\r\n            })\r\n          }}>\r\n          Edit list\r\n          </Button>\r\n        <Button\r\n          variant=\"text\"\r\n          color=\"default\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showSnackbar: true,\r\n              CurrentList: this.nextCurrent(),\r\n              lastDeletedList: {\r\n                ...this.currentList()\r\n              }\r\n            })\r\n\r\n            this.delete_list(this.currentList())\r\n\r\n          }}>\r\n          Delete list\r\n          </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Lists\r\n          lists={[...this.state.tdl]}\r\n          current={this.state.CurrentList}\r\n          cancel={this.exitPopups}\r\n          newList={\r\n            () => {\r\n              this.setState({\r\n                showNewListPopup: true\r\n              })\r\n            }\r\n          }\r\n          changeCurrent={\r\n            (ID) => {\r\n              this.setState({\r\n                CurrentList: ID\r\n              })\r\n            }\r\n          }\r\n        />\r\n        <CurrentList\r\n          currentList={this.state.CurrentList}\r\n          toggleItem={this.toggleItem}\r\n          deleteItem={this.deleteItem}\r\n        />\r\n        {\r\n          this.state.showNewTaskPopup\r\n            ? <TaskView\r\n              showTaskModal={this.state.showNewTaskPopup}\r\n              listName={this.currentList().ListName}\r\n              listID={this.state.CurrentList}\r\n              handleModalClose={this.exitPopups}\r\n              newTask={this.newTask}\r\n            />\r\n            : null\r\n        }\r\n        {\r\n          this.state.showNewListPopup\r\n            ? <ListEdit\r\n              open={this.state.showNewListPopup}\r\n              listName={this.currentList().ListName}\r\n              handleClose={this.exitPopups}\r\n            />\r\n            : null\r\n        }\r\n        {\r\n          this.state.showEditListPopup\r\n            ? <ListEdit\r\n              open={this.state.showEditListPopup}\r\n              list={this.currentList()}\r\n              handleClose={this.exitPopups}\r\n            />\r\n            : null\r\n        }\r\n        <Tooltip TransitionComponent={Zoom} title=\"Add new TASK\">\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            className={classes.fab}\r\n            onClick={() => {\r\n              this.setState({\r\n                showNewTaskPopup: true\r\n              })\r\n            }}>\r\n            <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>add_circle_outline</i>\r\n            New task\r\n          </Fab>\r\n        </Tooltip>\r\n        {this.renderMoreListOptions()}\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          open={this.state.showSnackbar}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">List deleted</span>}\r\n          action={[\r\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n              UNDO\r\n            </Button>,\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={this.handleSnackbarClose}\r\n            >\r\n              <i className=\"material-icons\">close</i>\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToDo.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(state => {\r\n    const { Todo } = state;\r\n\r\n    return {\r\n      Todo,\r\n    };\r\n  },\r\n    dispatch => {\r\n      return bindActionCreators(MainActions, dispatch);\r\n    })\r\n)(ToDo);","import React, { Component } from 'react';\r\nimport ReactQuill from 'react-quill';\r\n\r\nclass TextEditor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.modules = {\r\n            toolbar: [\r\n                [{ 'header': [1, 2, false] }],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\r\n                ['link', 'image'],\r\n                ['clean']\r\n            ],\r\n        }\r\n\r\n        this.formats = [\r\n            'header',\r\n            'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n            'list', 'bullet', 'indent',\r\n            'link', 'image'\r\n        ]\r\n        this.state = { text: '' }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(value) {\r\n        this.setState({ text: value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactQuill\r\n                value={this.props.value}\r\n                onChange={this.props.handleChange}\r\n                theme=\"snow\"\r\n                modules={this.modules}\r\n                formats={this.formats}\r\n                style={{\r\n                    height: \"375px\",\r\n                    marginBottom: \"45px\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextEditor;","var darkColors = [\r\n    \"#ba000d\",\r\n    \"#4a148c\",\r\n    \"#0d47a1\",\r\n    \"#1b5e20\",\r\n    \"#0069c0\",\r\n    \"#ff3d00\",\r\n    \"#4e342e\",\r\n    \"#000000\",\r\n];\r\n\r\nexport default darkColors;","export function new_note(data) {\r\n    return {\r\n        type: 'NEW_NOTE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_note(data) {\r\n    return {\r\n        type: 'EDIT_NOTE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_note(data) {\r\n    return {\r\n        type: 'DELETE_NOTE',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport TextEditor from \"../../Components/TextEditor\";\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { CirclePicker } from 'react-color';\r\nimport darkColors from \"../../Data/Settings/darkPickerColors\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as NotesActions from \"../../Actions/NotesActions\";\r\n\r\nconst MainActions = {\r\n    ...NotesActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    note: {\r\n        width: '100%',\r\n        maxWidth: 530,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    editorSpace: {\r\n        width: '100%',\r\n        maxWidth: 530,\r\n        backgroundColor: theme.palette.background.paper,\r\n        height: 375,\r\n    },\r\n\r\n    avatar: {\r\n        width: 20,\r\n        height: 20,\r\n        marginLeft: 10,\r\n    },\r\n\r\n    Button: {\r\n        display: \"inline-block\"\r\n    }\r\n});\r\n\r\nclass NotesView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_note, delete_note, edit_note } = this.props;\r\n        this.new_note = new_note;\r\n        this.delete_note = delete_note;\r\n        this.edit_note = edit_note;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            Note: {\r\n                ID: null,\r\n                Title: \"\",\r\n                Content: \"\",\r\n                Color: \"#0d47a1\",\r\n                Date: new Date(),\r\n                ...this.props.Note\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Note.ID ? true : false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!this.props.Note || prevProps.Note.ID === this.props.Note.ID) return null;\r\n        if (!this.props.isNew) {\r\n            return this.setState({\r\n                Note: {\r\n                    ID: null,\r\n                    Title: \"\",\r\n                    Content: \"\",\r\n                    Color: \"#0d47a1\",\r\n                    Date: new Date(),\r\n                    ...this.props.Note\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            return this.setState({\r\n                Note: {\r\n                    ...this.props.Note\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange(newValue) {\r\n        this.setState({\r\n            Note: {\r\n                ...this.state.Note,\r\n                Content: newValue\r\n            }\r\n        })\r\n    }\r\n\r\n    handleValueChange(label, value) {\r\n        this.setState({\r\n            Note: {\r\n                ...this.state.Note,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete() {\r\n        this.delete_note(this.state.Note)\r\n        // this.props.changeCurrentOnAdd()\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_note(this.state.Note)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_note({\r\n                ...this.state.Note,\r\n                ID\r\n            });\r\n            this.props.changeCurrentOnAdd(ID)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <Paper elevation={10} className={classes.note}>\r\n                    <TextField\r\n                        id=\"full-width\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Avatar\r\n                                        style={{ backgroundColor: this.state.Note.Color }}\r\n                                        className={classes.avatar}\r\n                                    >\r\n                                        {this.state.Note.Title[0]}\r\n                                    </Avatar>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        required\r\n                        placeholder=\"Enter title here...\"\r\n                        fullWidth\r\n                        value={this.state.Note.Title}\r\n                        onChange={(e) => {\r\n                            this.handleValueChange(\"Title\", e.target.value)\r\n                        }}\r\n                    />\r\n                    <TextEditor\r\n                        value={this.state.Note.Content}\r\n                        handleChange={this.handleChange}\r\n                    />\r\n                    <div style={{ display: \"inline-block\" }}>\r\n                        <CirclePicker\r\n                            color={this.state.Note.Color}\r\n                            width=\"260px\"\r\n                            colors={darkColors}\r\n                            circleSpacing={3}\r\n                            onChange={(value) => {\r\n                                this.handleValueChange(\"Color\", value.hex)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.isEditing()\r\n                            ? <Button\r\n                                color=\"secondary\"\r\n                                className={classes.Button}\r\n                                onClick={this.handleDelete}>\r\n                                Delete\r\n                                </Button>\r\n                            : <Button\r\n                                color=\"secondary\"\r\n                                className={classes.Button}\r\n                                onClick={this.props.handleCancel}>\r\n                                Cancel\r\n                                </Button>\r\n                    }\r\n                    <Button className={classes.Button} type=\"submit\" color=\"primary\">\r\n                        Save\r\n                        </Button>\r\n                </Paper>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(() => {\r\n        return {}\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(NotesView);","export function increase(data) {\r\n    return {\r\n        type: 'INCREASE',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function decrease(data) {\r\n    return {\r\n        type: 'DECREASE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function new_counter(data) {\r\n    return {\r\n        type: 'NEW_COUNTER',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_counter(data) {\r\n    return {\r\n        type: 'EDIT_COUNTER',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_counter(data) {\r\n    return {\r\n        type: 'DELETE_COUNTER',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport NotesView from \"./NotesView\";\r\nimport _ from \"lodash\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\n//import { Fab } from '@material-ui/core';\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    notesList: {\r\n        width: '100%',\r\n        maxWidth: 240,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginRight: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst EmptyNote = {\r\n    ID: null,\r\n    Title: \"\",\r\n    Content: \"\",\r\n    Color: \"#0d47a1\",\r\n    Date: new Date(),\r\n}\r\n\r\nclass Notes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.changeCurrentOnAdd = this.changeCurrentOnAdd.bind(this);\r\n\r\n        this.state = {\r\n            currentNote: this.getFirst(),\r\n            isNew: false,\r\n        }\r\n    }\r\n\r\n    /* static getDerivedStateFromProps(props, state) {\r\n        return \r\n    } */\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.Notes === this.props.Notes) return null;\r\n\r\n        if (!this.props.Notes.length) {\r\n            return this.setState({\r\n                currentNote: EmptyNote\r\n            })\r\n        }\r\n\r\n        return this.setState({\r\n            currentNote: this.props.Notes[0]\r\n        })\r\n    }\r\n\r\n\r\n    getFirst(arr = this.props.Notes) {\r\n        if (!arr.length) return EmptyNote;\r\n\r\n        return arr[0]\r\n    }\r\n\r\n    renderNotesList() {\r\n        const { classes, Notes } = this.props;\r\n\r\n        if (!Notes || !Notes.length) return null;\r\n\r\n        return (\r\n            <Paper elevation={5} className={classes.notesList}>\r\n                <List component=\"nav\" dense>\r\n                    {\r\n                        Notes.map((note, index) => {\r\n                            return (\r\n                                <Zoom in={true}\r\n                                    key={note.ID}\r\n                                    style={{ transitionDelay: index * 100 }}\r\n                                >\r\n                                    <div>\r\n                                        <ListItem\r\n                                            dense\r\n                                            button\r\n                                            onClick={() => {\r\n                                                this.setState({\r\n                                                    currentNote: _.find(this.props.Notes, { ID: note.ID })\r\n                                                })\r\n                                            }}\r\n                                        >\r\n                                            <Avatar\r\n                                                style={{ backgroundColor: note.Color }}\r\n                                            >\r\n                                                {note.Title[0]}\r\n                                            </Avatar>\r\n                                            <ListItemText primary={note.Title} />\r\n                                        </ListItem>\r\n                                        {\r\n                                            !(this.props.Notes.length - 1 === index)\r\n                                                ? <Divider variant=\"inset\" />\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </Zoom>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new NOTE\">\r\n                <Zoom in={true}>\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        style={{marginRight: '10px'}}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                isNew: true,\r\n                                currentNote: {\r\n                                    ID: null,\r\n                                    Title: \"\",\r\n                                    Content: \"\",\r\n                                    Color: \"#0d47a1\",\r\n                                    Date: new Date()\r\n                                }\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\">add_circle</i>\r\n                    </Fab>\r\n                </Zoom>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    handleCancel() {\r\n        this.setState({\r\n            isNew: false,\r\n            currentNote: this.getFirst()\r\n        })\r\n    }\r\n\r\n    changeCurrentOnAdd(ID) {\r\n        this.setState({\r\n            isNew: false,\r\n        })\r\n    }\r\n\r\n    getNote() {\r\n        return {\r\n            ID: null,\r\n            Title: \"\",\r\n            Content: \"\",\r\n            Color: \"#0d47a1\",\r\n            Date: new Date(),\r\n            ...this.state.isNew\r\n                ? { ID: null }\r\n                : _.find(this.props.Notes, { ID: this.state.currentID })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={16}\r\n                    className={\"\"}\r\n                    alignItems={\"center\"}\r\n                    direction={\"row\"}\r\n                    justify={\"center\"}\r\n                >\r\n                    {this.renderFabButton()}\r\n                    {this.renderNotesList()}\r\n                    <Zoom in={true} style={{ transitionDelay: 500 }}>\r\n                        <NotesView\r\n                            Note={this.state.currentNote}\r\n                            handleCancel={this.handleCancel}\r\n                            isNew={this.state.isNew}\r\n                            changeCurrentOnAdd={this.changeCurrentOnAdd}\r\n                        />\r\n                    </Zoom>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Notes } = state;\r\n\r\n        return {\r\n            Notes,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Notes);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport { CirclePicker } from 'react-color';\r\nimport darkColors from \"../../Data/Settings/darkPickerColors\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nclass CounterView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_counter, delete_counter, edit_counter } = this.props;\r\n        this.new_counter = new_counter;\r\n        this.delete_counter = delete_counter;\r\n        this.edit_counter = edit_counter;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            Counter: {\r\n                ID: null,\r\n                Title: \"\",\r\n                Value: 0,\r\n                Date: new Date(),\r\n                Color: \"#0d47a1\",\r\n                Goal: 0,\r\n                ...this.props.Counter\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Counter.ID ? true : false;\r\n    }\r\n\r\n    handleChange(label, value) {\r\n        this.setState({\r\n            Counter: {\r\n                ...this.state.Counter,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.handleClose()\r\n        this.delete_counter(this.state.Counter)\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_counter(this.state.Counter)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_counter({\r\n                ...this.state.Counter,\r\n                ID\r\n            });\r\n        }\r\n\r\n        this.props.handleClose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {\r\n                        this.isEditing()\r\n                            ? \"Edit counter\"\r\n                            : \"Add new counter\"\r\n                    }\r\n                    {\r\n                        this.isEditing()\r\n                        && <Tooltip TransitionComponent={Zoom} title=\"DELETE COUNTER\">\r\n                            <IconButton\r\n                                key=\"delete\"\r\n                                aria-label=\"Delete\"\r\n                                color=\"inherit\"\r\n                                onClick={this.handleDelete}\r\n                            >\r\n                                <i className=\"material-icons\">delete_forever</i>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    }\r\n                </DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControl>\r\n                            <TextField\r\n                                required\r\n                                autoFocus\r\n                                label=\"Name your counter\"\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Title}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Title\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">\r\n                                {\r\n                                    this.isEditing()\r\n                                        ? \"Value\"\r\n                                        : \"Starting value\"\r\n                                }\r\n                            </InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Value}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Value\", parseInt(e.target.value, 10))\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">Counter goal</InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Goal}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Goal\", parseInt(e.target.value, 10))\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <br />\r\n                        <FormControl>\r\n                            <CirclePicker\r\n                                color={this.state.Counter.Color}\r\n                                width=\"180px\"\r\n                                colors={darkColors}\r\n                                circleSpacing={17}\r\n                                onChange={(value) => {\r\n                                    this.handleChange(\"Color\", value.hex)\r\n                                }}\r\n                            />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleClose} color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(CounterView);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport CounterView from \"./CounterView\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: '20px',\r\n        borderRadius: '100px',\r\n        position: 'relative',\r\n        color: \"#FFFFFF\"\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n\r\n    extendedIcon: {\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing.unit * 2,\r\n        right: theme.spacing.unit * 2,\r\n    },\r\n\r\n    white: {\r\n        color: \"#fff\"\r\n    },\r\n\r\n    CardContent: {\r\n        display: 'inline-block',\r\n    },\r\n\r\n    title: {\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        display: \"inline-block\",\r\n        marginRight: \"8px\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    badge: {\r\n        top: -2,\r\n        right: -20,\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    leftDiv: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        left: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        margin: \"1px\",\r\n        paddingRight: \"5px\",\r\n        borderRight: \"1px solid darkgrey\",\r\n        verticalAlign: \"center\"\r\n    },\r\n\r\n    rightDiv: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        right: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        margin: \"1px\",\r\n        paddingLeft: \"5px\",\r\n        borderLeft: \"1px solid grey\"\r\n    },\r\n\r\n    minusButton: {\r\n        margin: \"1px\"\r\n    },\r\n\r\n    bar: {\r\n        position: 'absolute',\r\n        bottom: \"0\",\r\n        right: \"0\",\r\n        left: \"0\",\r\n    },\r\n\r\n    completedProgress: {\r\n        backgroundColor: '#76ff03',\r\n    },\r\n\r\n    uncompletedProgress: {\r\n        backgroundColor: '#f50057',\r\n    },\r\n});\r\n\r\nclass Counters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.counterModal = this.counterModal.bind(this);\r\n        this.exitModals = this.exitModals.bind(this);\r\n\r\n        const { increase, decrease } = this.props;\r\n        this.increase = increase;\r\n        this.decrease = decrease;\r\n\r\n        this.state = {\r\n            showEditModal: false,\r\n            showNewCounterPopup: false,\r\n            CounterToEdit: {}\r\n        }\r\n    }\r\n\r\n    counterModal(Counter) {\r\n        this.setState({\r\n            showEditModal: true,\r\n            CounterToEdit: { ...Counter }\r\n        })\r\n    }\r\n\r\n    exitModals() {\r\n        this.setState({\r\n            showEditModal: false,\r\n            showNewCounterPopup: false\r\n        })\r\n    }\r\n\r\n    renderProgress(Counter) {\r\n        if (!Counter.Goal) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <LinearProgress\r\n                color={\r\n                    this.progress(Counter) === 100\r\n                        ? \"primary\"\r\n                        : \"secondary\"\r\n                }\r\n                variant=\"determinate\"\r\n                value={this.progress(Counter)}\r\n                className={classes.bar}\r\n            />\r\n        )\r\n    }\r\n\r\n    progress(Counter) {\r\n        if (Counter.Value >= Counter.Goal) return 100;\r\n\r\n        return ((100 * Counter.Value) / Counter.Goal);\r\n    }\r\n\r\n    renderCounters() {\r\n        if (!this.props.Counters || !this.props.Counters.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return this.props.Counters.map((Counter, index) => {\r\n            return (\r\n                <Slide\r\n                    direction=\"up\"\r\n                    in={true}\r\n                    key={Counter.ID}\r\n                    style={{transitionDelay: 100*index}}\r\n                    mountOnEnter\r\n                    unmountOnExit\r\n                >\r\n                    <Card\r\n                        className={classes.card}\r\n                        raised\r\n                        style={{ backgroundColor: Counter.Color }}\r\n                    >\r\n                        <CardContent\r\n                            className={classes.CardContent}\r\n                            onClick={() => this.counterModal(Counter)}\r\n                        >\r\n                            <Badge\r\n                                badgeContent={Counter.Value}\r\n                                color=\"secondary\"\r\n                                classes={{ badge: classes.badge }}\r\n                            >\r\n                                <Typography className={classes.title}>\r\n                                    {Counter.Title}\r\n                                </Typography>\r\n                            </Badge>\r\n                        </CardContent>\r\n                        <div className={classes.leftDiv}>\r\n                            <IconButton\r\n                                key=\"close\"\r\n                                aria-label=\"Close\"\r\n                                color=\"inherit\"\r\n                                className={classes.minusButton}\r\n                                onClick={() => { this.decrease(Counter.ID) }}\r\n                            >\r\n                                <i className=\"material-icons\">remove_circle_outline</i>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className={classes.rightDiv}>\r\n                            <IconButton\r\n                                key=\"close\"\r\n                                aria-label=\"Close\"\r\n                                color=\"inherit\"\r\n                                onClick={() => { this.increase(Counter.ID) }}\r\n                            >\r\n                                <i className=\"material-icons\">add_circle_outline</i>\r\n                            </IconButton>\r\n                        </div>\r\n                        {this.renderProgress(Counter)}\r\n                    </Card>\r\n                </Slide>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new COUNTER\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showNewCounterPopup: true\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{marginRight: \"10px\"}}>add_circle</i>\r\n                    New Counter\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    renderNewCounterModal() {\r\n        return this.state.showNewCounterPopup && <CounterView\r\n            open={this.state.showNewCounterPopup}\r\n            handleClose={this.exitModals}\r\n        />\r\n    }\r\n\r\n    renderEditCounterModal() {\r\n        return this.state.showEditModal && <CounterView\r\n            open={this.state.showEditModal}\r\n            Counter={this.state.CounterToEdit}\r\n            handleClose={this.exitModals}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderCounters()}\r\n                {this.renderFabButton()}\r\n                {this.renderNewCounterModal()}\r\n                {this.renderEditCounterModal()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Counters } = state;\r\n\r\n        return {\r\n            Counters,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Counters);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n    },\r\n\r\n    convertDiv: {\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n        width: 250,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n\r\n    menu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass Convert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            input: \"\",\r\n            convertorID: 2,\r\n            output: \"\",\r\n            convertors: [\r\n                {\r\n                    ID: 0,\r\n                    Label: \"UPPERCASE\"\r\n                },\r\n                {\r\n                    ID: 1,\r\n                    Label: \"lowercase\"\r\n                },\r\n                {\r\n                    ID: 2,\r\n                    Label: \"Reverse\"\r\n                },\r\n                {\r\n                    ID: 3,\r\n                    Label: \"Morse code\"\r\n                },\r\n                {\r\n                    ID: 4,\r\n                    Label: \"ROT13\"\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange(event, name) {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        }, () => {\r\n            this.setState({\r\n                output: this.Convert()\r\n            })\r\n        });\r\n    };\r\n\r\n    Convert() {\r\n        const { input } = this.state;\r\n\r\n        switch (this.state.convertorID) {\r\n            case 0: return input.toUpperCase();\r\n            case 1: return input.toLowerCase();\r\n            case 2: return input.split(\"\").reverse().join(\"\");\r\n            case 3: return this.Morse(input);\r\n            case 4: return this.ROT13(input);\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    ROT13(str) {\r\n        var input = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n        var output = 'NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm';\r\n        var index = x => input.indexOf(x);\r\n        var translate = x => index(x) > -1 ? output[index(x)] : x;\r\n        return str.split('').map(translate).join('');\r\n    }\r\n\r\n    Morse(input) {\r\n        var letters = [' ', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\r\n        var morseLetters = [\"\\xa0\\xa0\\xa0\\xar\n\r\n        var newText = \"\";\r\n\r\n        for (var i = 0; i < input.length; i++) {\r\n            for (var j = 0; j < 37; j++) {\r\n                if (input[i].toLowerCase() === letters[j]) {\r\n                    newText += morseLetters[j];\r\n                    newText += \"\\xa0\\xa0\\xa0\";\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return newText;\r\n    }\r\n\r\n    renderInputCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.root} elevation={10}>\r\n            <TextField\r\n                id=\"multiline-flexible\"\r\n                label=\"Input\"\r\n                multiline\r\n                fullWidth\r\n                rows=\"4\"\r\n                rowsMax=\"4\"\r\n                value={this.state.input}\r\n                onChange={(e) => this.handleChange(e, 'input')}\r\n                margin=\"normal\"\r\n            />\r\n        </Card>\r\n    }\r\n\r\n    renderConvertTypeCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.convertDiv} elevation={2}>\r\n            <TextField\r\n                id=\"select-convertor\"\r\n                select\r\n                value={this.state.convertorID}\r\n                onChange={(e) => this.handleChange(e, 'convertorID')}\r\n                SelectProps={{\r\n                    MenuProps: {\r\n                        className: classes.menu,\r\n                    },\r\n                }}\r\n                helperText=\"Select convert method\"\r\n                margin=\"normal\"\r\n            >\r\n                {this.state.convertors.map(option => (\r\n                    <MenuItem key={option.ID} value={option.ID}>\r\n                        {option.Label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </Card>\r\n    }\r\n\r\n    renderOutputCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.root} elevation={10}>\r\n            <TextField\r\n                id=\"multiline-flexible\"\r\n                label=\"Output\"\r\n                multiline\r\n                fullWidth\r\n                rows=\"4\"\r\n                rowsMax=\"4\"\r\n                value={this.state.output}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n            />\r\n        </Card>\r\n    }\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderInputCard()}\r\n                {this.renderArrowDown()}\r\n                {this.renderConvertTypeCard()}\r\n                {this.renderArrowDown()}\r\n                {this.renderOutputCard()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Convert);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport Success from '../../../Components/SnackBars/SnackSuccess';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: 10,\r\n        position: 'relative',\r\n    },\r\n    copyButton: {\r\n        display: 'inline-block',\r\n        paddingLeft: \"5px\",\r\n        position: 'absolute',\r\n        right: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        verticalAlign: \"10px\"\r\n    },\r\n    text: {\r\n        display: \"inline-block\"\r\n    },\r\n    decorationsWrapper: {\r\n        maxHeight: \"25%\",\r\n        overflowY: \"auto\",\r\n    }\r\n});\r\n\r\nclass Decorate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSBClose = this.handleSBClose.bind(this);\r\n\r\n        this.state = {\r\n            text: \"\",\r\n            snackBarSuccess: false\r\n        }\r\n\r\n        this.Decorations = [\r\n            {\r\n                left: \"▁ ▂ ▄ ▅ ▆ ▇ █ [\",\r\n                right: \"] █ ▇ ▆ ▅ ▄ ▂ ▁\",\r\n            },\r\n            {\r\n                left: \"•´¯`•. [\",\r\n                right: \"] .•´¯`•\",\r\n            },\r\n            {\r\n                left: \"(-_-) [\",\r\n                right: \"] (-_-)\",\r\n            },\r\n            {\r\n                left: \"▀▄▀▄▀▄ [\",\r\n                right: \"] ▄▀▄▀▄▀\",\r\n            },\r\n            {\r\n                left: \"▌│█║▌║▌║ [\",\r\n                right: \"] ║▌║▌║█│▌\",\r\n            },\r\n            {\r\n                left: \"๑۞๑,¸¸,ø¤º°`°๑۩ [\",\r\n                right: \"] ๑۩ ,¸¸,ø¤º°`°๑۞๑\",\r\n            },\r\n            {\r\n                left: \"↦↦↦↦↦ [\",\r\n                right: \"] ↤↤↤↤↤\",\r\n            },\r\n            {\r\n                left: \"░▒▓█ [\",\r\n                right: \"] █▓▒░\",\r\n            },\r\n            {\r\n                left: \"➶➶➶➶➶ [\",\r\n                right: \"] ➷➷➷➷➷\",\r\n            },\r\n            {\r\n                left: \"★彡 [\",\r\n                right: \"] 彡★\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    handleChange(event, name) {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    copyToClipboard(text) {\r\n        var data = new DataTransfer();\r\n        data.items.add(\"text/plain\", text);\r\n        navigator.clipboard.writeText(text);\r\n        this.setState({\r\n            snackBarSuccess: true\r\n        });\r\n    }\r\n\r\n    renderDecorations() {\r\n        const { classes } = this.props;\r\n\r\n        return <div className={classes.decorationsWrapper}>\r\n            {\r\n                this.Decorations.map((item, index) => {\r\n                    var textToDisplay = `${item.left} ${this.state.text} ${item.right}`;\r\n                    return <Card className={classes.root} elevation={1} key={index}>\r\n                        <Typography component=\"p\" className={classes.text}>\r\n                            {\r\n                                textToDisplay\r\n                            }\r\n                        </Typography>\r\n                        <div className={classes.copyButton}>\r\n                            <Tooltip TransitionComponent={Zoom} title=\"Copy to clipboard\">\r\n                                <IconButton color=\"secondary\" aria-label=\"Copy\" onClick={() => {\r\n                                    this.copyToClipboard(textToDisplay)\r\n                                }}>\r\n                                    {\r\n                                        <i className=\"material-icons\">\r\n                                            send\r\n                                        </i>\r\n                                    }\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Card>\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n\r\n    handleSBClose() {\r\n        this.setState({\r\n            snackBarSuccess: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Card className={classes.root} elevation={10}>\r\n                    <Typography component=\"p\">\r\n                        You can use this to decorate your string with additional characters.\r\n                    </Typography>\r\n                    <TextField\r\n                        id=\"text\"\r\n                        label=\"Text\"\r\n                        className={classes.textField}\r\n                        value={this.state.text}\r\n                        onChange={(e) => this.handleChange(e, 'text')}\r\n                        margin=\"normal\"\r\n                        inputProps={{\r\n                            autoComplete: \"off\"\r\n                        }}\r\n                    />\r\n                </Card>\r\n                {this.renderDecorations()}\r\n                <Success\r\n                    open={this.state.snackBarSuccess}\r\n                    handleClose={this.handleSBClose}\r\n                    text=\"Copied to clipboard!\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Decorate);","import React, { Component } from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n/* myComponents */\r\nimport Convert from \"./Components/Convert\";\r\nimport Decorate from \"./Components/Decorate\";\r\n\r\nclass String extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            current: 0\r\n        }\r\n    }\r\n\r\n    handleChange(e, value) {\r\n        this.setState({\r\n            current: value\r\n        })\r\n    }\r\n\r\n    renderTabs() {\r\n        return (\r\n            <Paper square style={{ width: 500, marginLeft: \"auto\", marginRight: \"auto\", marginBottom:\"20px\" }}>\r\n                <Tabs\r\n                    value={this.state.current}\r\n                    onChange={this.handleChange}\r\n                    variant=\"fullWidth\"\r\n                    indicatorColor=\"secondary\"\r\n                    textColor=\"secondary\"\r\n                >\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">autorenew</i>\r\n                        }\r\n                        label=\"CONVERT\"\r\n                    />\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">text_format</i>\r\n                        }\r\n                        label=\"DECORATE\"\r\n                    />\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">text_fields</i>\r\n                        }\r\n                        label=\"STYLE\"\r\n                        disabled\r\n                    />\r\n                </Tabs>\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n    renderTabContent() {\r\n        switch(this.state.current) {\r\n            case 0: return <Convert/>;\r\n            case 1: return <Decorate/>;\r\n            default: return <Convert/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderTabs()}\r\n                {this.renderTabContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default String;","export function rnd_num(min, max) {\r\n    min = parseInt(min, 10);\r\n    max = parseInt(max, 10);\r\n    if (!(max > min)) return;\r\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n};\r\n\r\nexport function rnd_color() {\r\n    return \"rgb(\" + rnd_num(0, 255) + \", \" + rnd_num(0, 255) + \", \" + rnd_num(0, 255) + \")\";\r\n};\r\n\r\nexport default {\r\n    rnd_num,\r\n    rnd_color\r\n};","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showNumbers: {\r\n        width: \"auto\",\r\n        maxWidth: 700,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    textField1: {\r\n        width: \"145px\",\r\n        marginRight: \"10px\"\r\n    },\r\n    textField2: {\r\n        width: \"145px\",\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing.unit * 2,\r\n        right: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nclass RndNumber extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: {\r\n                NumberOfIntegers: 10,\r\n                Min: 1,\r\n                Max: 10,\r\n                NumberOfColumns: 3,\r\n                Highlight: 2,\r\n                NumbersToShow: [\r\n                    []\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateNumbers()\r\n    }\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    handleNumberChange(e, label) {\r\n        var value = e.target.value;\r\n        this.setState({\r\n            Number: {\r\n                ...this.state.Number,\r\n                [label]: value\r\n            }\r\n        }, () => {\r\n            if (label === \"Highlight\") return;\r\n            if (value === \"\") return;\r\n            this.generateNumbers()\r\n        });\r\n    }\r\n\r\n    showNumbers() {\r\n        const state = this.state.Number;\r\n\r\n        return state.NumbersToShow.map((arr, i) => {\r\n            return (\r\n                <Fragment key={i}>\r\n                    <p>\r\n                        {\r\n                            arr.map((num, index) => {\r\n                                return <span\r\n                                    key={index}\r\n                                    style={\r\n                                        num === parseInt(state.Highlight, 10)\r\n                                            ? { color: \"red\" }\r\n                                            : {}\r\n                                    }\r\n                                >\r\n                                    {\r\n                                        index === arr.length - 1\r\n                                            ? num\r\n                                            : num + \", \"\r\n                                    }\r\n                                </span>;\r\n                            })\r\n                        }\r\n                    </p>\r\n                    {\r\n                        i === state.NumbersToShow.length - 1\r\n                            ? null\r\n                            : <Divider />\r\n                    }\r\n                </Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n    generateNumbers() {\r\n        const state = this.state.Number;\r\n\r\n        if (!state.NumberOfColumns) return;\r\n\r\n        var rows = parseInt(state.NumberOfColumns, 10) >= parseInt(state.NumberOfIntegers, 10)\r\n            ? state.NumberOfIntegers\r\n            : state.NumberOfColumns\r\n\r\n        var mainArr = [];\r\n        for (let i = 0; i < rows; i++) {\r\n            mainArr.push([])\r\n        }\r\n\r\n        var current = 0;\r\n        for (let n = 0; n < state.NumberOfIntegers; n++) {\r\n            mainArr[current].push(rnd_num(this.state.Number.Min, this.state.Number.Max))\r\n            current++\r\n            if (current === mainArr.length) {\r\n                current = 0;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Number: {\r\n                ...this.state.Number,\r\n                NumbersToShow: [...mainArr]\r\n            }\r\n        })\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"RANDOMISE\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.generateNumbers()\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                        autorenew\r\n                    </i>\r\n                    RANDOMISE\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Card elevation={5} className={classes.content}>\r\n                    <TextField\r\n                        id=\"NumberOfIntegers\"\r\n                        defaultValue={this.state.Number.NumberOfIntegers}\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        label=\"Number of integers to generate\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"NumberOfIntegers\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"min\"\r\n                        defaultValue={this.state.Number.Min}\r\n                        className={classes.textField1}\r\n                        helperText=\"Minimum\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Min\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"max\"\r\n                        defaultValue={this.state.Number.Max}\r\n                        className={classes.textField2}\r\n                        helperText=\"Maximum\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Max\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"min\"\r\n                        defaultValue={this.state.Number.Highlight}\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Highlight\") }}\r\n                        className={classes.textField1}\r\n                        helperText=\"Highlight number\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                        id=\"max\"\r\n                        defaultValue={this.state.Number.NumberOfColumns}\r\n                        className={classes.textField2}\r\n                        helperText=\"Rows\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"NumberOfColumns\") }}\r\n                    />\r\n                </Card>\r\n                {this.renderArrowDown()}\r\n                <Card elevation={2} className={classes.showNumbers}>\r\n                    {this.showNumbers()}\r\n                </Card>\r\n                {this.renderFabButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RndNumber);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { rnd_color } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    propsDiv: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showColor: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        minHeight: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        transitionDuration: \"0.4s\",\r\n        cursor: \"pointer\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing.unit * 4\r\n    },\r\n});\r\n\r\nclass RndColor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.changeColor = this.changeColor.bind(this);\r\n\r\n        this.state = {\r\n            Color: rnd_color()\r\n        }\r\n    }\r\n\r\n    changeColor() {\r\n        this.setState({\r\n            Color: rnd_color()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"flip\"\r\n                    className={classes.button}\r\n                    onClick={() => this.changeColor()}\r\n                    color=\"secondary\"\r\n                >\r\n                    <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                        flip_to_front\r\n                    </i>\r\n                    New color\r\n        \t    </Fab>\r\n                <Card elevation={15} className={classes.showColor}>\r\n                    <div\r\n                        className={classes.showColor}\r\n                        style={{ backgroundColor: this.state.Color }}\r\n                        onClick={this.changeColor}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RndColor);","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    showCoin: {\r\n        borderRadius: \"100%\",\r\n        width: 300,\r\n        height: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"center\",\r\n        lineHeight: \"258px\",\r\n        transitionDuration: \"0.4s\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing.unit * 4\r\n    },\r\n    progress: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    },\r\n});\r\n\r\nclass Coin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            Coin: {\r\n                Title: \"\",\r\n                progress: 0\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleFlip();\r\n    }\r\n    \r\n    progress = () => {\r\n        const { progress } = this.state.Coin;\r\n        this.setState({\r\n            Coin: {\r\n                ...this.state.Coin,\r\n                progress: progress + 1,\r\n                Title: \"\",\r\n            }\r\n        }, () => {\r\n            if (progress >= 100) {\r\n                clearInterval(this.timer);\r\n                this.setState({\r\n                    Coin: {\r\n                        ...this.state.Coin,\r\n                        Title: rnd_num(0, 1) === 0 ? \"TAILS\" : \"HEADS\",\r\n                        progress: 0\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    handleFlip() {\r\n        if (this.state.Coin.progress === 0) {\r\n            this.timer = setInterval(this.progress, 10);\r\n        } else {\r\n            clearInterval(this.timer);\r\n            this.setState({\r\n                Coin: {\r\n                    ...this.state.Coin,\r\n                    progress: 0\r\n                }\r\n            });\r\n            this.timer = setInterval(this.progress, 10);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return <Fragment>\r\n            <Fab\r\n                variant=\"extended\"\r\n                aria-label=\"flip\"\r\n                className={classes.button}\r\n                onClick={() => this.handleFlip()}\r\n                color=\"secondary\"\r\n            >\r\n                <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                    autorenew\r\n                </i>\r\n                Flip\r\n        \t</Fab>\r\n            <Card\r\n                elevation={15}\r\n                className={classes.showCoin}\r\n                color=\"primary\"\r\n                style={\r\n                    this.state.Coin.Title === \"HEADS\"\r\n                        ? { backgroundColor: \"black\", color: \"white\" }\r\n                        : { backgroundColor: \"white\", color: \"black\" }\r\n                }\r\n            >\r\n                {\r\n                    this.state.Coin.progress > 0\r\n                        ? <CircularProgress\r\n                            className={classes.progress}\r\n                            color=\"secondary\"\r\n                            variant=\"determinate\"\r\n                            size={60}\r\n                            value={this.state.Coin.progress}\r\n\r\n                        />\r\n                        : <h1>{this.state.Coin.Title}</h1>\r\n                }\r\n            </Card>\r\n        </Fragment>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Coin);","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing.unit * 4\r\n    },\r\n\r\n    diceSpan: {\r\n        margin: theme.spacing.unit * 2,\r\n        fontSize: \"32px\",\r\n        backgroundColor: \"black\",\r\n        color: \"white\"\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing.unit * 2,\r\n        right: theme.spacing.unit * 2,\r\n    },\r\n    showDices: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    }\r\n});\r\n\r\nclass Dice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Dice: {\r\n                NumberOfDices: 6,\r\n                Dices: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateDices()\r\n    }\r\n\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fab\r\n                variant=\"extended\"\r\n                color=\"primary\"\r\n                className={classes.fab}\r\n                onClick={() => {\r\n                    this.generateDices()\r\n                }}>\r\n                <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                    border_outer\r\n                </i>\r\n                Roll\r\n            </Fab>\r\n        )\r\n    }\r\n\r\n    diceInner(dice) {\r\n        switch (dice) {\r\n            case 6: return \"https://png.icons8.com/material/50/000000/6.png\";\r\n            case 1: return \"https://png.icons8.com/material/50/000000/1.png\";\r\n            case 2: return \"https://png.icons8.com/material/50/000000/2.png\";\r\n            case 3: return \"https://png.icons8.com/material/50/000000/3.png\";\r\n            case 4: return \"https://png.icons8.com/material/50/000000/4.png\";\r\n            case 5: return \"https://png.icons8.com/material/50/000000/5.png\";\r\n            default: return;\r\n        }\r\n    }\r\n\r\n    generateDices() {\r\n        var arr = [];\r\n        for (let i = 0; i < this.state.Dice.NumberOfDices; i++) {\r\n            arr.push(rnd_num(1, 6));\r\n        }\r\n\r\n        this.setState({\r\n            Dice: {\r\n                ...this.state.Dice,\r\n                Dices: [...arr]\r\n            }\r\n        })\r\n    }\r\n\r\n    showDices() {\r\n        return this.state.Dice.Dices.map((dice, index) => {\r\n            return <img\r\n                alt=\"dice\"\r\n                className=\"diceSpan\"\r\n                src={this.diceInner(dice)}\r\n                key={index}\r\n            />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Card elevation={5} className={classes.content}>\r\n                    <TextField\r\n                        id=\"NumberOfDices\"\r\n                        defaultValue={this.state.Dice.NumberOfDices}\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        label=\"Number of dices to roll\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                Dice: {\r\n                                    ...this.state.Dice,\r\n                                    NumberOfDices: e.target.value\r\n                                }\r\n                            }, () => { this.generateDices() })\r\n                        }}\r\n                    />\r\n                </Card>\r\n                {this.renderArrowDown()}\r\n                <Card elevation={2} className={classes.showDices}>\r\n                    {this.showDices()}\r\n                </Card>\r\n                {this.renderFabButton()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Dice);","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport RndNumber from \"./Components/Rnd_number\";\r\nimport RndColor from './Components/Rnd_color';\r\nimport Coin from './Components/Coin';\r\nimport Dice from './Components/Dice';\r\n\r\nconst styles = theme => ({\r\n    menuCard: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\"\r\n    },\r\n    chip: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    showCoin: {\r\n        borderRadius: \"100%\",\r\n        width: 300,\r\n        height: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"center\",\r\n        lineHeight: \"258px\",\r\n        transitionDuration: \"0.4s\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing.unit * 4\r\n    },\r\n    progress: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    },\r\n\r\n    diceSpan: {\r\n        margin: theme.spacing.unit * 2,\r\n        fontSize: \"32px\",\r\n        backgroundColor: \"black\",\r\n        color: \"white\"\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing.unit * 2,\r\n        right: theme.spacing.unit * 2,\r\n    },\r\n    showDices: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    }\r\n});\r\n\r\nclass Randomiser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleMenuClick = this.handleMenuClick.bind(this);\r\n\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            current: 0,\r\n        }\r\n    }\r\n\r\n    handleMenuClick(ID) {\r\n        this.setState({\r\n            current: ID\r\n        });\r\n    }\r\n\r\n    renderContent() {\r\n        switch (this.state.current) {\r\n            case 0: return <RndNumber />;\r\n            case 1: return <RndColor />;\r\n            case 2: return <Coin />;\r\n            case 3: return <Dice />;\r\n            default: return <RndNumber />;\r\n        }\r\n    }\r\n\r\n    renderChips() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.menuCard}>\r\n                    <Chip\r\n                        avatar={<Avatar>NU</Avatar>}\r\n                        label=\"Numbers\"\r\n                        color=\"primary\"\r\n                        variant={this.state.current === 0 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(0)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>CO</Avatar>}\r\n                        label=\"Color\"\r\n                        color=\"secondary\"\r\n                        variant={this.state.current === 1 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(1)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>CF</Avatar>}\r\n                        label=\"Coin flipper\"\r\n                        variant={this.state.current === 2 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(2)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>DR</Avatar>}\r\n                        label=\"Dice roller\"\r\n                        variant={this.state.current === 3 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(3)}\r\n                        className={classes.chip}\r\n                    />\r\n                </div>\r\n                {this.renderContent()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderChips()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRandomiser.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Randomiser);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    display: 'flex',\r\n    width: '300px',\r\n    margin: '10px',\r\n  },\r\n  avatar: {\r\n    width: 25,\r\n    height: 25,\r\n    marginRight: 4,\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    lineHeight: '25px',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n  },\r\n  playIcon: {\r\n    height: 48,\r\n    width: 48,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  editIcon: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  deleteIcon: {\r\n    color: '',\r\n  },\r\n});\r\n\r\nfunction MediaControlCard(props) {\r\n  const { classes, theme } = props;\r\n\r\n  return (\r\n    <Card className={classes.card} elevation={10}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            style={{ backgroundColor: props.quiz.Color }}\r\n          >\r\n            {\r\n              props.quiz.Name[0]\r\n            }\r\n          </Avatar>\r\n          <h5 style={{ display: 'inline-block' }}>\r\n            {props.quiz.Name.slice(1)}\r\n          </h5>\r\n          <p variant=\"subtitle1\" color=\"textSecondary\">\r\n            {props.quiz.ShortDescription}\r\n          </p>\r\n        </CardContent>\r\n        <div className={classes.controls}>\r\n          <IconButton aria-label=\"Play\" onClick={() => {props.onPlay(props.quiz.ID)}}>\r\n            <PlayArrowIcon className={classes.playIcon} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Edit\">\r\n            <EditIcon className={classes.editIcon} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Delete\" onClick={() => props.onDelete(props.quiz.ID)}>\r\n            <DeleteIcon className={classes.deleteIcon} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMediaControlCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MediaControlCard);","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nclass Error extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.props.open}\r\n                autoHideDuration={this.props.autoHideDuration ? this.props.autoHideDuration : 3000}\r\n                onClose={this.props.handleClose}\r\n            >\r\n                <SnackbarContent\r\n                    className={classNames(classes.error)}\r\n                    aria-describedby=\"client-snackbar\"\r\n                    message={\r\n                        <span id=\"client-snackbar\" className={classes.message}>\r\n                            <i className={classNames(classes.icon, classes.iconVariant, \"material-icons\")}>\r\n                            error_outline\r\n                            </i>\r\n                            {this.props.text.length ? this.props.text : \"Wrong\"}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.props.handleClose}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                close\r\n                            </i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Error);","import React, { Component, Fragment } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass Summary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.showSummary}\r\n                onClose={this.props.handleSummaryClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">{\"Summary of -\" + this.props.QuizName + \"-\"}</DialogTitle>\r\n                <Divider variant=\"middle\" />\r\n                {\r\n                    this.props.results.map((r, index) => {\r\n                        return (\r\n                            <Fragment key={index}>\r\n                                <div style={{ padding: 12 }}>\r\n                                    <p style={{ display: 'inline' }}>\r\n                                        <b>\r\n                                            {\r\n                                                `#${index + 1}: ${r.QuestionText}`\r\n                                            }\r\n                                        </b>\r\n                                    </p>\r\n                                    <i\r\n                                        className=\"material-icons\"\r\n                                        style={\r\n                                            { \r\n                                                display: 'inline',\r\n                                                color: r.isCorrect ? 'green' : 'red',\r\n                                                marginLeft: 3\r\n                                         }\r\n                                        }>\r\n                                        {r.isCorrect ? 'done_all' : 'close'}\r\n                                    </i>\r\n                                    <p>Your answer: {r.UserAnswer}</p>\r\n                                    {\r\n                                        !r.isCorrect\r\n                                            ? <p>Correct answer: {r.CorrectAnswer}</p>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n\r\n                                <Divider variant=\"middle\" />\r\n                            </Fragment>\r\n                        )\r\n                    })\r\n                }\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={this.props.handleSummaryClose}\r\n                >\r\n                    Back to menu\r\n                </Button>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Summary);","export function delete_quiz(data) {\r\n    return {\r\n        type: 'DELETE_QUIZ',\r\n        data\r\n    };\r\n};\r\n\r\nexport function new_quiz(data) {\r\n    return {\r\n        type: 'NEW_QUIZ',\r\n        data\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showNumbers: {\r\n        width: \"auto\",\r\n        maxWidth: 700,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    },\r\n    textField1: {\r\n        width: \"145px\",\r\n        marginRight: \"10px\"\r\n    },\r\n    textField2: {\r\n        width: \"145px\",\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing.unit * 2,\r\n        right: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nclass EditQuiz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Quiz: {\r\n                ID: 0,\r\n                Name: '',\r\n                ShortDescription: '',\r\n                Color: '#000',\r\n                Tags: [],\r\n                Questions: [\r\n                    {\r\n                        ID: 0,\r\n                        Text: '',\r\n                        Answers: [\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: true\r\n                            },\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            CurrentID: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const ID = _.uniqueId();\r\n\r\n        this.setState({\r\n            Quiz: {\r\n                ID: _.uniqueId(),\r\n                Name: '',\r\n                ShortDescription: '',\r\n                Color: '#000',\r\n                Tags: [],\r\n                Questions: [\r\n                    {\r\n                        ID,\r\n                        Text: '',\r\n                        Answers: [\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: true\r\n                            },\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            CurrentID: ID,\r\n        })\r\n    }\r\n    \r\n\r\n    handleQuestionChange({ target: { value } }, ID) {\r\n        this.setState({\r\n            Quiz: {\r\n                ...this.state.Quiz,\r\n                Questions: [\r\n                    ...this.state.Quiz.Questions.map((Q) => {\r\n                        if(Q.ID !== ID) return Q;\r\n                        return {\r\n                            ...Q,\r\n                            Text: value\r\n                        }\r\n                    })\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    handleAnswerChange({ target: { value } }, index) {\r\n        const ID = this.state.CurrentID;\r\n\r\n        this.setState({\r\n            Quiz: {\r\n                ...this.state.Quiz,\r\n                Questions: [\r\n                    ...this.state.Quiz.Questions.map((Q) => {\r\n                        if(Q.ID !== ID) return Q;\r\n                        return {\r\n                            ...Q,\r\n                            Answers: [\r\n                                ..._.find(this.state.Quiz.Questions, {ID}).Answers.map((A, i) => {\r\n                                    if(i !== index) return A;\r\n                                    return {\r\n                                        ...A,\r\n                                        Text: value\r\n                                    }\r\n                                })\r\n                            ]\r\n                        }\r\n                    })\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    renderFields() {\r\n        const { classes } = this.props;\r\n        const { Questions } = this.state.Quiz;\r\n        const { CurrentID } = this.state;\r\n        const CurrentQuestion = _.find(Questions, { ID: CurrentID });\r\n        const { Answers } = CurrentQuestion;\r\n\r\n\r\n        return (\r\n            <Card elevation={5} className={classes.content}>\r\n                <TextField\r\n                    defaultValue={CurrentQuestion.Text}\r\n                    className={classes.textField}\r\n                    fullWidth\r\n                    label=\"Question\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleQuestionChange(e, CurrentID) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[0].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"First answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 0) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[1].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Second answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 1) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[2].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Third answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 2) }}\r\n                />\r\n                <TextField\r\n                    id=\"min\"\r\n                    defaultValue={Answers[3].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Fourth answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 3) }}\r\n                />\r\n\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderFields()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(EditQuiz);","import React, { Component, Fragment } from 'react'\r\nimport QuizTile from './QuizTile';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nimport Success from '../../Components/SnackBars/SnackSuccess';\r\nimport Error from '../../Components/SnackBars/SnackError';\r\nimport Summary from './Summary';\r\n\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as QuizActions from \"../../Actions/QuizActions\";\r\n\r\nimport EditQuiz from './EditQuiz';\r\n\r\nconst MainActions = {\r\n    ...QuizActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n        maxWidth: '50%',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        marginBottom: 50,\r\n    },\r\n    Answers: {\r\n        cursor: 'pointer',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing.unit * 2,\r\n        right: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nclass Quizes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPage: \"start\", // Think about it\r\n            toEdit: {},\r\n            toPlay: {},\r\n            shuffledQuestions: [],\r\n            nextQuestion: 0,\r\n            isFinished: false,\r\n            answerResults: [],\r\n            showSnackbar: false,\r\n            showDeleteSnackbar: false,\r\n            snackMessage: '',\r\n            snackType: '',\r\n            showSummary: false,\r\n            lastDeletedQuiz: {}\r\n        }\r\n\r\n        const { delete_quiz, new_quiz } = this.props;\r\n        this.delete_quiz = delete_quiz;\r\n        this.new_quiz = new_quiz;\r\n\r\n        this.handlePlay = this.handlePlay.bind(this);\r\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n        this.handleSummaryClose = this.handleSummaryClose.bind(this);\r\n        this.handleDeleteQuiz = this.handleDeleteQuiz.bind(this);\r\n        this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n        //this.handleAnswer = this.handleAnswer.bind(this);\r\n    }\r\n\r\n    handleSummaryClose() {\r\n        this.setState({\r\n            showSummary: false,\r\n            toPlay: {},\r\n            shuffledQuestions: [],\r\n            nextQuestion: 0,\r\n            isFinished: true,\r\n            answerResults: [],\r\n        })\r\n    }\r\n\r\n    handleSnackbarClose() {\r\n        this.setState({\r\n            showSnackbar: false,\r\n            showDeleteSnackbar: false\r\n        })\r\n    }\r\n\r\n    getNextQuestion() {\r\n        return this.state.shuffledQuestions[this.state.nextQuestion];\r\n    }\r\n\r\n    returnShuffledQuiz(QuestionsArray) {\r\n        return _.shuffle(QuestionsArray.map((Question) => {\r\n            return {\r\n                ...Question,\r\n                Answers: _.shuffle(Question.Answers)\r\n            }\r\n        }))\r\n    }\r\n\r\n    handleDeleteQuiz(ID) {\r\n        this.delete_quiz({ ID });\r\n\r\n        this.setState({\r\n            lastDeletedQuiz: _.find(this.props.Quizes, {ID}),\r\n            showDeleteSnackbar: true,\r\n        })\r\n    }\r\n\r\n    handleUndoDelete() {\r\n        this.new_quiz(this.state.lastDeletedQuiz);\r\n\r\n        this.setState({\r\n            showDeleteSnackbar: false,\r\n        })\r\n    }\r\n\r\n    handlePlay(ID) {\r\n        const obj = _.find(this.props.Quizes, { ID: ID })\r\n\r\n        this.setState({\r\n            currentPage: \"QuizPlay\", // Think about it\r\n            toPlay: obj,\r\n            shuffledQuestions: this.returnShuffledQuiz(obj.Questions), // We randomise order of questions and answers\r\n            nextQuestion: 0,\r\n            isFinished: false,\r\n            answerResults: [],\r\n        })\r\n    }\r\n\r\n    renderDefaultQuizes() {\r\n        if (!this.props.Quizes || !this.props.Quizes.length) return null;\r\n\r\n        return (\r\n            <Grid container justify=\"center\" spacing={32}>\r\n                {\r\n                    this.props.Quizes.map((item) => {\r\n                        return (\r\n                            <Grid key={item.ID} item>\r\n                                <QuizTile\r\n                                    quiz={{ ...item }}\r\n                                    onPlay={this.handlePlay}\r\n                                    onDelete={this.handleDeleteQuiz}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    handleAnswer(Ans) {\r\n        this.setState({\r\n            showSnackbar: true,\r\n            answerResults: [\r\n                ...this.state.answerResults,\r\n                {\r\n                    QuestionText: this.state.shuffledQuestions[this.state.nextQuestion].Text,\r\n                    UserAnswer: Ans.Text,\r\n                    CorrectAnswer: _.find(this.state.shuffledQuestions[this.state.nextQuestion].Answers, { Correct: true }).Text,\r\n                    isCorrect: Ans.Correct,\r\n                }\r\n            ],\r\n            snackMessage: Ans.Correct ? 'Correct!' : 'Not correct!',\r\n            snackType: Ans.Correct ? 'Success' : 'Error'\r\n        }, () => {\r\n            if (this.state.nextQuestion + 2 > this.state.shuffledQuestions.length) {\r\n                this.setState({\r\n                    isFinished: true,\r\n                    showSummary: true,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    nextQuestion: this.state.nextQuestion + 1,\r\n\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    renderPage() {\r\n        const { classes } = this.props;\r\n\r\n        if(this.state.newQuiz) return <EditQuiz />;\r\n\r\n        if (!this.state.toPlay.ID) {\r\n            return (\r\n                <div style={{ width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                    {this.renderDefaultQuizes()}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const Q = this.getNextQuestion();\r\n        return (\r\n            <Fragment>\r\n                <Paper className={classes.root} elevation={5}>\r\n                    <h2>{Q.Text}</h2>\r\n                </Paper>\r\n                <Grid container justify=\"center\" spacing={40}>\r\n                    {\r\n                        Q.Answers.map((Ans, index) => {\r\n                            return (\r\n                                <Grid key={index} item>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className={classes.Answers}\r\n                                        onClick={() => this.handleAnswer(Ans)}\r\n                                    >\r\n                                        {\r\n                                            Ans.Text\r\n                                        }\r\n                                    </Button>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n\r\n    }\r\n\r\n    renderSnackBar() {\r\n        //const { classes } = this.props;\r\n\r\n        return this.state.snackType === \"Success\"\r\n            ? <Success\r\n                open={this.state.showSnackbar}\r\n                handleClose={this.handleSnackbarClose}\r\n                text={this.state.snackMessage}\r\n                autoHideDuration={1500}\r\n            />\r\n            : <Error\r\n                open={this.state.showSnackbar}\r\n                handleClose={this.handleSnackbarClose}\r\n                text={this.state.snackMessage}\r\n                autoHideDuration={1500}\r\n            />\r\n    }\r\n\r\n    renderUndoDeleteSnackbar() {\r\n        const { classes } = this.props; \r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.state.showDeleteSnackbar}\r\n                autoHideDuration={6000}\r\n                onClose={this.handleSnackbarClose}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">Quiz deleted</span>}\r\n                action={[\r\n                    <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n                        UNDO\r\n                    </Button>,\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={classes.close}\r\n                        onClick={this.handleSnackbarClose}\r\n                    >\r\n                        <i className=\"material-icons\">close</i>\r\n                    </IconButton>,\r\n                ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderSummary() {\r\n        if (!this.state.isFinished) return null;\r\n\r\n        return <Summary\r\n            showSummary={this.state.showSummary}\r\n            handleSummaryClose={this.handleSummaryClose}\r\n            QuizName={this.state.toPlay.Name}\r\n            results={this.state.answerResults}\r\n        />\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new QUIZ\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            newQuiz: true\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{marginRight: \"10px\"}}>add_circle</i>\r\n                    New Quiz\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderPage()}\r\n                {this.renderSnackBar()}\r\n                {this.renderSummary()}\r\n                {this.renderUndoDeleteSnackbar()}\r\n                {this.renderFabButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Quizes } = state;\r\n\r\n        return {\r\n            Quizes,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Quizes);","export function page_change(page) {\r\n    return { \r\n        type: \"PAGE_CHANGE\",\r\n        page\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport WelcomePage from \"./HomePage/WelcomePage\";\r\nimport Calculator from \"./Calculator\";\r\n//import ToDo from \"./ToDo\";\r\nimport UserPage from \"./UserPage\";\r\nimport Time from \"./Time\";\r\nimport Arrays from \"./Arrays\";\r\nimport Uno from \"./Uno\";\r\nimport ToDo from './ToDo';\r\nimport Notes from './Notes';\r\nimport Counters from './Counters';\r\nimport String from './String';\r\nimport Randomiser from './Randomiser';\r\nimport Quizes from './Quizes';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as GeneralActions from \".././Actions/GeneralActions\";\r\n\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n}\r\n\r\nclass RenderPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { page_change } = this.props\r\n        this.page_change = page_change\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.General.currentPage) {\r\n            case (\"WelcomePage\"):\r\n                return (<WelcomePage />);\r\n            case (\"UserPage\"):\r\n                return (<UserPage />);\r\n            case (\"Calculator\"):\r\n                return (<Calculator />);\r\n            case (\"ToDo\"):\r\n                return (<ToDo />);\r\n            case (\"Time\"):\r\n                return (<Time />);\r\n            case (\"Arrays\"):\r\n                return (<Arrays />);\r\n            case (\"Uno\"):\r\n                return (<Uno />);\r\n            case (\"Notes\"):\r\n                return (<Notes />);\r\n            case (\"Counters\"):\r\n                return (<Counters />);\r\n            case (\"String\"):\r\n                return (<String />);\r\n            case (\"Randomiser\"):\r\n                return (<Randomiser />);\r\n            case (\"Quizes\"):\r\n                return (<Quizes />);\r\n            default:\r\n                return (<WelcomePage />);\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(state => {\r\n    const { General } = state;\r\n\r\n    return {\r\n        General,\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(RenderPage);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Others\r\nimport ExtendedHeader from '.././Others/Header';\r\nimport Profilna from \"../Pictures/mikac.jpeg\";\r\n// Pages\r\nimport RenderPage from \".././Content/index\";\r\n\r\nimport * as GeneralActions from \".././Actions/GeneralActions\";\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        zIndex: 4,\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        display: 'flex',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        position: 'flex',\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        dislay: \"block\",\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing.unit * 7,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing.unit * 9,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        minHeight: \"100vh\",\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing.unit * 3,\r\n    },\r\n    Title: {\r\n        cursor: 'pointer',\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        cursor: \"pointer\",\r\n    },\r\n    bigAvatar: {\r\n        width: 60,\r\n        height: 60,\r\n    },\r\n});\r\n\r\nclass Shell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { page_change } = this.props;\r\n        this.page_change = page_change;\r\n\r\n        this.handleHeaderChange = this.handleHeaderChange.bind(this);\r\n\r\n        this.state = {\r\n            open: false,\r\n            showHeader: false\r\n        };\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleHeaderChange = () => {\r\n        let showHeader = !this.state.showHeader\r\n        this.setState({\r\n            showHeader\r\n        })\r\n    }\r\n\r\n    pageChange(page) {\r\n        this.page_change(page)\r\n    }\r\n\r\n    renderIcon(theme) {\r\n        return (\r\n            <i className=\"material-icons\">\r\n                {theme.direction === 'rtl' ? \"keyboard_arrow_right\" : \"keyboard_arrow_left\"}\r\n            </i>\r\n        )\r\n    }\r\n\r\n    renderMenuItem(page_change, icon, text) {\r\n        return (\r\n            <ListItem\r\n                onClick={() => {\r\n                    this.page_change(page_change)\r\n                }}\r\n                button\r\n            >\r\n                <ListItemIcon>\r\n                    <i className=\"material-icons\">\r\n                        {icon}\r\n                    </i>\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n            </ListItem>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes, theme } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar\r\n                    position=\"absolute\"\r\n                    className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\r\n                >\r\n                    <Toolbar disableGutters={!this.state.open}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"Open drawer\"\r\n                            onClick={this.handleDrawerOpen}\r\n                            className={classNames(classes.menuButton, this.state.open && classes.hide)}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                menu\r\n                            </i>\r\n                        </IconButton>\r\n\r\n                        <Typography className={classNames(classes.Title, classes.grow)} onClick={this.handleHeaderChange} variant=\"title\" color=\"inherit\" noWrap>\r\n                            Project // NEON /\r\n                        </Typography>\r\n                        <IconButton onClick={this.handleHeaderChange}>\r\n                            {\r\n                                <i className=\"material-icons\" style={{ color: \"rgb(255, 255, 255)\" }}>\r\n                                    {\r\n                                        this.state.showHeader\r\n                                            ? \"keyboard_arrow_up\"\r\n                                            : \"keyboard_arrow_down\"\r\n                                    }\r\n                                </i>\r\n                            }\r\n                        </IconButton>\r\n\r\n                        <Avatar\r\n                            className={classes.avatar}\r\n                            onClick={() => {\r\n                                window.open('https://mikacinc.github.io/Portfolio/', '_blank');\r\n                            }}\r\n                        >\r\n                            <img\r\n                                alt=\"Mihajlo Marjanović\"\r\n                                src={Profilna}\r\n                            />\r\n                        </Avatar>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\r\n                    }}\r\n                    open={this.state.open}\r\n                >\r\n                    <div className={classes.toolbar}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                            {this.renderIcon(theme)}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <MenuList>\r\n                        {\r\n                            this.renderMenuItem(\"WelcomePage\", \"home\", \"Home\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"UserPage\", \"settings\", \"Settings\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"ToDo\", \"done_all\", \"To-Do list\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Notes\", \"notes\", \"Notes\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Counters\", \"add_circle_outline\", \"Counters\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Time\", \"access_time\", \"Time\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Calculator\", \"dialpad\", \"Calculator\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"String\", \"message\", \"String\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Randomiser\", \"gesture\", \"Randomiser\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Arrays\", \"linear_scale\", \"Arrays\")\r\n                        }\r\n                        {\r\n                            //this.renderMenuItem(\"Uno\", \"sim_card\", \"Uno\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Games\", \"videogame_asset\", \"Games\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Quizes\", \"widgets\", \"Quizes\")\r\n                        }\r\n                    </MenuList>\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    {this.state.showHeader ? <ExtendedHeader /> : null}\r\n                    <br />\r\n                    <Zoom in={true} style={{ transitionDelay: 100 }}>\r\n                        <RenderPage />\r\n                    </Zoom>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nShell.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    connect(state => {\r\n        const { General } = state;\r\n\r\n        return {\r\n            General,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Shell);","import React, { Component } from 'react';\r\nimport './App.css';\r\n// Material UI\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n//import RaisedButton from 'material-ui/RaisedButton';\r\n//import Avatar from 'material-ui/Avatar';\r\n// Dark theme\r\n/*\r\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\r\nimport darkBaseTheme from 'material-ui/styles/baseThemes/darkBaseTheme';\r\n*/\r\n// Shell\r\nimport Shell from './Shell/Shell'\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#00ff00',\r\n    },\r\n    secondary: {\r\n      main: '#f44336',\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Shell />\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","var General = {\r\n    currentPage: \"Quizes\"\r\n}\r\n\r\nexport default General;","import initialState from \"../.././Data/General\";\r\n\r\nfunction General(state, action) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState\r\n  }\r\n  switch (action.type) {\r\n    case \"PAGE_CHANGE\":\r\n      return {\r\n        ...state,\r\n        currentPage: action.page\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default General;","import initialState from \"../.././Data/User\";\r\n\r\nfunction User(state, action) {\r\n    if (typeof state === 'undefined') {\r\n        return initialState\r\n    }\r\n    switch (action.type) {\r\n        case \"NAME_CHANGE\":\r\n            return {\r\n                ...state,\r\n                name: action.name\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default User;","/*\r\nimport slika from \".././Pictures/Uno_cards/blue_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/red_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/green_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/yellow_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/wild_color_changer.png\";\r\nimport slika from \".././Pictures/Uno_cards/wild_pick_four.png\";\r\n*/\r\n\r\n//import karte from \".././Pictures/Uno_cards\";\r\n\r\n//console.log(karte)\r\n\r\nvar Uno = [\r\n    {\r\n        ID: 1,\r\n        Src: \"\",\r\n        Color: \"blue\",\r\n        Number: 0,\r\n    },\r\n    {\r\n        ID: 2,\r\n        Src: \"\",\r\n        Color: \"green\",\r\n        Number: 1,\r\n    },\r\n    {\r\n        ID: 3,\r\n        Src: \"\",\r\n        Color: \"yellow\",\r\n        Number: 2,\r\n    },\r\n];\r\n\r\nexport default Uno;","import initialState from \"../.././Data/Uno\";\r\n\r\nfunction Uno(state, action) {\r\n    if (typeof state === 'undefined') {\r\n        return initialState;\r\n    }\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default Uno;","var ToDoLists = [\r\n    {\r\n        ID: 1,\r\n        ListName: \"Kupovina\",\r\n        Archived: false,\r\n        Todos: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Hleb\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 2\r\n            },\r\n            {\r\n                ID: 11,\r\n                Text: \"Mleko\",\r\n                Completed: true,\r\n                Notes: \"Kupio ili ne?\",\r\n                Importance: 3\r\n            },\r\n            {\r\n                ID: 12,\r\n                Text: \"Sir\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 1\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        ID: 2,\r\n        ListName: \"Muzika\",\r\n        Archived: false,\r\n        Todos: [\r\n            {\r\n                ID: 44,\r\n                Text: \"LSD-Genius\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 1\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default ToDoLists;","import initialState from '../../Data/ToDo';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction ToDoReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n\r\n        case 'NEW_TASK': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty(\"ID\") && data.hasOwnProperty(\"Task\")) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            Todos: [\r\n                                ...item.Todos, {\r\n                                    ...data.Task\r\n                                }\r\n                            ]\r\n                        }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'NEW_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DELETE_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'EDIT_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {...item};\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case \"DELETE_TASK\": {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID') && data.hasOwnProperty('Task')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            Todos: item.Todos.filter((Todo) => {\r\n                                if (Todo.ID !== data.Task.ID) {\r\n                                    return true;\r\n                                }\r\n                                return false;\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case \"EDIT_TASK\": {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty(\"ID\") && data.hasOwnProperty(\"Task\")) {\r\n                return deepFreeze(state.map((list) => {\r\n                    if (list.ID === data.ID) {\r\n                        return {\r\n                            ...list,\r\n                            Todos: list.Todos.map((task) => {\r\n                                if (task.ID === data.Task.ID) {\r\n                                    return {\r\n                                        ...task,\r\n                                        ...data.Task\r\n                                    }\r\n                                } else {\r\n                                    return task\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return list\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ToDoReducer;","var Counters = [\r\n    {\r\n        ID: 1,\r\n        Title: \"Ključevi\",\r\n        Value: 3,\r\n        Date: new Date(),\r\n        Color: \"#000000\",\r\n        Goal: 6\r\n    },\r\n    {\r\n        ID: 2,\r\n        Title: \"Izgovorenih reči\",\r\n        Value: 23,\r\n        Date: new Date(),\r\n        Color: \"#4a148c\",\r\n        Goal: 50\r\n    },\r\n    {\r\n        ID: 3,\r\n        Title: \"Krugova\",\r\n        Value: 8,\r\n        Date: new Date(),\r\n        Color: \"#ff3d00\",\r\n        Goal: 120\r\n    },\r\n];\r\n\r\nexport default Counters;","import initialState from '../../Data/Counters';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction CountersReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n        case 'NEW_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'EDIT_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {\r\n                        ...item\r\n                    };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DELETE_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'INCREASE': {\r\n            const { data } = action;\r\n\r\n            if (data === 0 || !isNaN(data)) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data) {\r\n                        return {\r\n                            ...item,\r\n                            Value: item.Value + 1\r\n                        };\r\n                    }\r\n                    return { ...item };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DECREASE': {\r\n            const { data } = action;\r\n\r\n            if (data === 0 || !isNaN(data)) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data) {\r\n                        return {\r\n                            ...item,\r\n                            Value: item.Value - 1\r\n                        };\r\n                    }\r\n                    return { ...item };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default CountersReducer;","var Notes = [\r\n    {\r\n        ID: 1,\r\n        Title: \"Kampovanje\",\r\n        Content: \"1\",\r\n        Color: \"#0d47a1\",\r\n        Date: new Date(),\r\n    },\r\n    {\r\n        ID: 2,\r\n        Title: \"Orovi\",\r\n        Content: \"2\",\r\n        Color: \"#4e342e\",\r\n        Date: new Date(),\r\n    },\r\n    {\r\n        ID: 3,\r\n        Title: \"Vrh planine\",\r\n        Content: \"3\",\r\n        Color: \"#4a148c\",\r\n        Date: new Date(),\r\n    },\r\n]\r\n\r\nexport default Notes;","import initialState from '../../Data/Notes';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction CountersReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n\r\n        case 'NEW_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        case 'EDIT_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {\r\n                        ...item\r\n                    };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        case 'DELETE_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default CountersReducer;","const DefaultQuizes = [\r\n    {\r\n        ID: 1,\r\n        Name: \"Glavni gradovi\",\r\n        ShortDescription: \"Da li znaš koji je glavni grad koje države?\",\r\n        Color: \"#000\",\r\n        Tags: [],\r\n        Questions: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Srbija\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Abu Dabi\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Sofija\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Beograd\",\r\n                        Correct: true\r\n                    },\r\n                    {\r\n                        Text: \"Berlin\",\r\n                        Correct: false\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                ID: 2,\r\n                Text: \"Mađarska\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Vašington\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Berlin\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Tirana\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Budimpešta\",\r\n                        Correct: true\r\n                    },\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        ID: 2,\r\n        Name: \"Građa ćelije\",\r\n        ShortDescription: \"Šta je ćelija i od čega se sastoji?\",\r\n        Color: \"#0f0\",\r\n        Tags: [],\r\n        Questions: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Koju ulogu imaju mitohondrije u ćeliji?\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Prenos signala\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Deoba\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Komunikacija sa drugim ćelijama\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Ćelijsko disanje\",\r\n                        Correct: true\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n]\r\n\r\nexport default DefaultQuizes;","import initialState from \"../.././Data/Quizes\";\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction Quizes(state, action) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState\r\n  }\r\n  switch (action.type) {\r\n    case \"qqq\":\r\n      return {};\r\n    case 'DELETE_QUIZ': {\r\n      const { data } = action;\r\n\r\n      if (data && data.hasOwnProperty('ID')) {\r\n        return deepFreeze(state.filter((item) => {\r\n          if (item.ID !== data.ID) {\r\n            return true;\r\n          }\r\n          return false;\r\n        }));\r\n      }\r\n\r\n      return state;\r\n    }\r\n    case 'NEW_QUIZ': {\r\n      const { data } = action;\r\n\r\n      if (data) {\r\n          return [\r\n              ...state,\r\n              {\r\n                  ...data\r\n              }\r\n          ];\r\n      }\r\n\r\n      return state;\r\n  }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default Quizes;","import {combineReducers} from \"redux\";\r\nimport General from \"./GeneralReducer\";\r\nimport User from \"./UserReducer\";\r\nimport Uno from \"./UnoReducer\";\r\nimport Todo from \"./ToDoReducer\";\r\nimport Counters from \"./CountersReducer\";\r\nimport Notes from \"./NotesReducer\";\r\nimport Quizes from \"./QuizesReducer\";\r\n\r\nexport default combineReducers({\r\n    General,\r\n    User,\r\n    Uno,\r\n    Todo,\r\n    Counters,\r\n    Notes,\r\n    Quizes,\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n// Reducer\r\nimport reducer from \"./Reducers/index\";\r\n// redux\r\nimport { createStore } from 'redux'\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(reducer)\r\n\r\n//console.log(store.getState())\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/mikac.d63f56de.jpeg\";"],"sourceRoot":""}