{"version":3,"sources":["logo.svg","Pictures/avatar.jpg","Others/Header.js","Actions/GeneralActions/index.js","Content/HomePage/WelcomePage.js","Content/Calculator/index.js","Actions/UserActions/index.js","Content/UserPage/index.js","Content/Time/Components/StopWatch.js","Components/SnackBars/SnackSuccess.js","Content/Time/Components/Countdown.js","Content/Time/index.js","Content/Arrays/index.js","Content/Uno/Card.js","Content/Uno/index.js","Content/ToDo/Components/Lists.js","Actions/ToDoActions/index.js","Content/ToDo/Components/TaskView.js","Content/ToDo/Components/CurrentList.js","Content/ToDo/Components/ListEdit.js","Data/User.js","Content/ToDo/index.js","Components/TextEditor.js","Data/Settings/darkPickerColors.js","Actions/NotesActions/index.js","Content/Notes/NotesView.js","Actions/CountersActions/index.js","Content/Notes/index.js","Content/Counters/CounterView.js","Content/Counters/index.js","Content/String/Components/Convert.js","Content/String/Components/Decorate.js","Content/String/index.js","lib/Common/index.js","Content/Randomiser/Components/Rnd_number.js","Content/Randomiser/Components/Rnd_color.js","Content/Randomiser/Components/Coin.js","Content/Randomiser/Components/Dice.js","Content/Randomiser/index.js","Content/Quizes/QuizTile.js","Components/SnackBars/SnackError.js","Content/Quizes/Summary.js","Actions/QuizActions/index.js","Content/Quizes/EditQuiz.js","Content/Quizes/index.js","Content/Facts/index.js","Content/index.js","Shell/Shell.js","App.js","registerServiceWorker.js","Data/General.js","Reducers/GeneralReducer/index.js","Reducers/UserReducer/index.js","Data/Uno.js","Reducers/UnoReducer/index.js","Data/ToDo.js","Reducers/ToDoReducer/index.js","Data/Counters.js","Reducers/CountersReducer/index.js","Data/Notes.js","Reducers/NotesReducer/index.js","Data/Quizes.js","Reducers/QuizesReducer/index.js","Reducers/index.js","index.js"],"names":["module","exports","ExtendedHeader","Paper","style","width","marginTop","marginBottom","textAlign","display","elevation","className","src","logo","alt","Component","page_change","page","type","toggle_header","toggle_drawer","togge_theme","theme","change_theme_property","prop","value","MainActions","GeneralActions","useStyles","makeStyles","card","minWidth","maxWidth","marginLeft","marginRight","title","margin","bullet","transform","cardTitle","fontSize","pos","button","actions","connect","state","User","General","dispatch","bindActionCreators","props","themeType","palette","classes","useState","fact","setFact","useEffect","url","moment","format","fetch","then","response","text","data","Typography","variant","color","name","CardContent","gutterBottom","CardActions","Button","size","onClick","FormControlLabel","control","Switch","checked","onChange","switch","label","Calculator","fN","operation","sN","first","this","fNum","parseInt","sNum","setState","num","toString","paperStyle","TextField","placeholder","inputStyle","onInput","event","target","IconButton","iconButtons","substring","length","clearAll","operationsDiv","height","borderRadius","operationsButtons","console","log","Table","numbersDiv","TableBody","TableRow","TableCell","flatButton","addNum","disabled","Fab","actionButton","result","withStyles","backgroundColor","secondary","main","grey","primary","name_change","UserActions","UserPage","userName","primaryColor","secondaryColor","UserPaper","id","textInput","Divider","section","onChangeComplete","hex","compose","spacing","background","paper","padding","Stopwatch","updateDisplay","bind","flags","action","time","timer","initial","add","clearInterval","ID","Math","floor","random","Fade","in","Tooltip","aria-label","setFlag","fab","setInterval","map","flag","index","chip","key","Badge","badgeContent","Chip","avatar","Avatar","renderDisplay","renderControls","renderFlags","Success","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","handleClose","SnackbarContent","classNames","success","aria-describedby","message","icon","iconVariant","close","green","error","dark","info","warning","amber","opacity","alignItems","Countdown","handleSBClose","h","m","s","snackBarSuccess","arr","i","obj","push","InputFields","select","e","handleInputChange","InputProps","startAdornment","InputAdornment","position","makeOptionsArr","option","MenuItem","subtract","handleStartPause","Time","updateNowInState","now","handleDateChange","date","unix","compare","date1","date2","Menu","Title","Icon","Current","inter","MuiPickersUtilsProvider","utils","MomentUtils","disableToolbar","KeyboardButtonProps","from","compareTime","Content","renderContentInner","List","component","dense","item","Zoom","transitionDelay","ListItem","ListItemText","Grid","container","direction","justify","renderMenu","renderContent","minHeight","justifyContent","root","flexGrow","bottom","right","Arrays","handleChange","panel","expanded","divisedBy","n","w","isPrime","newRow","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","renderNumbers","returnEven","returnOdd","returnFibonacci","returnPrime","returnDivisible","ExpansionPanelActions","FormControl","Select","Card","Color","Number","Uno","Lists","Todos","filter","task","Completed","Tabs","current","changeCurrent","indicatorColor","textColor","scrollButtons","Todo","Tab","renderBadgeNumber","ListName","contentAlign","new_task","new_list","delete_list","delete_task","edit_task","edit_list","ToDoActions","TaskView","handleTaskEdit","onSubmit","Task","Text","Notes","Importance","preventDefault","isEditing","listID","handleModalClose","Dialog","showTaskModal","aria-labelledby","DialogTitle","DialogContent","Checkbox","InputLabel","htmlFor","Input","autoFocus","fullWidth","multiline","rows","DialogActions","CurrentList","handleSnackbarClose","handleUndoDelete","showCompleted","showUncompleted","showSnackbar","lastDeleted","list","currentList","tasks","findById","lowImportance","normalImportance","highImportance","role","undefined","localName","listItem","ListItemAvatar","renderItemImportance","listItemCompleted","ListItemSecondaryAction","ListSubheader","filterTasks","renderItems","ContentProps","textDecoration","arrow","paddingTop","verticalAlign","buttonDelete","ListEdit","Archived","ToDo","newList","tdl","showNewListPopup","exitPopups","UserName","showNewTaskPopup","lastDeletedList","showEditListPopup","nextCurrent","lists","cancel","toggleItem","deleteItem","listName","newTask","TransitionComponent","renderMoreListOptions","extendedIcon","TextEditor","modules","toolbar","formats","darkColors","new_note","edit_note","delete_note","NotesActions","NotesView","handleDelete","Note","Date","prevProps","isNew","newValue","changeCurrentOnAdd","note","titleInput","required","handleValueChange","colors","circleSpacing","handleCancel","editorSpace","increase","decrease","new_counter","edit_counter","delete_counter","CountersActions","EmptyNote","currentNote","getFirst","prevState","notesList","_","find","currentID","renderFabButton","renderNotesList","CounterView","Counter","Value","Goal","Counters","counterModal","exitModals","showEditModal","showNewCounterPopup","CounterToEdit","LinearProgress","progress","bar","Slide","mountOnEnter","unmountOnExit","raised","badge","leftDiv","minusButton","rightDiv","renderProgress","renderCounters","renderNewCounterModal","renderEditCounterModal","white","fontWeight","cursor","top","left","paddingRight","borderRight","paddingLeft","borderLeft","completedProgress","uncompletedProgress","Convert","input","convertorID","output","convertors","Label","toUpperCase","toLowerCase","split","reverse","join","Morse","ROT13","str","x","indexOf","letters","morseLetters","newText","j","rowsMax","convertDiv","SelectProps","MenuProps","menu","helperText","readOnly","arrowDiv","renderInputCard","renderArrowDown","renderConvertTypeCard","renderOutputCard","mixins","gutters","paddingBottom","Decorate","Decorations","DataTransfer","items","navigator","clipboard","writeText","decorationsWrapper","textToDisplay","copyButton","copyToClipboard","textField","inputProps","autoComplete","renderDecorations","maxHeight","overflowY","String","square","renderTabs","renderTabContent","rnd_num","min","max","rnd_color","RndNumber","NumberOfIntegers","Min","Max","NumberOfColumns","Highlight","NumbersToShow","generateNumbers","mainArr","content","defaultValue","handleNumberChange","textField1","textField2","showNumbers","RndColor","changeColor","showColor","propsDiv","transitionDuration","Coin","handleFlip","showCoin","CircularProgress","lineHeight","Dice","NumberOfDices","Dices","generateDices","dice","diceInner","showDices","diceSpan","Randomiser","handleMenuClick","menuCard","renderChips","flexWrap","details","flexDirection","flex","cover","controls","playIcon","editIcon","deleteIcon","withTheme","quiz","Name","slice","ShortDescription","onPlay","onDelete","Error","Summary","showSummary","handleSummaryClose","QuizName","results","r","QuestionText","isCorrect","UserAnswer","CorrectAnswer","delete_quiz","new_quiz","EditQuiz","Quiz","Tags","Questions","Answers","Correct","CurrentID","uniqueId","Q","A","CurrentQuestion","handleQuestionChange","handleAnswerChange","renderFields","QuizActions","Quizes","currentPage","toEdit","toPlay","shuffledQuestions","nextQuestion","isFinished","answerResults","showDeleteSnackbar","snackMessage","snackType","lastDeletedQuiz","handlePlay","handleDeleteQuiz","QuestionsArray","shuffle","Question","returnShuffledQuiz","QuizTile","Ans","newQuiz","renderDefaultQuizes","getNextQuestion","handleAnswer","renderPage","renderSnackBar","renderSummary","renderUndoDeleteSnackbar","RenderPage","Shell","ListItemIcon","AppBar","appBar","isDrawerOpen","appBarShift","Toolbar","disableGutters","menuButton","hide","grow","noWrap","isHeaderOpen","window","Profilna","Drawer","drawerPaper","drawerPaperClose","renderIcon","MenuList","renderMenuItem","React","zIndex","overflow","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","dislay","whiteSpace","overflowX","breakpoints","up","default","bigAvatar","App","createMuiTheme","ThemeProvider","getTheme","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","typography","useNextVariants","initialState","set","Src","ToDoLists","ToDoReducer","deepFreeze","hasOwnProperty","CountersReducer","isNaN","DefaultQuizes","combineReducers","store","createStore","reducer","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.60a3a095.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.9577f6bf.jpg\";","import React, { Component } from 'react';\r\nimport logo from '../logo.svg';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nclass ExtendedHeader extends Component {\r\n    render() {\r\n        const style = {\r\n            width: \"90%\",\r\n            marginTop: -25,\r\n            marginBottom: 40,\r\n            textAlign: 'center',\r\n            display: 'inline-block',\r\n        };\r\n        return (\r\n            <Paper\r\n                style={style}\r\n                elevation={10}\r\n            >\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <h1 className=\"App-title\">Project // NEON /</h1>\r\n                    <p>Version 0.8.3 // BY: Mihajlo Marjanović</p>\r\n                    <p>Built with React.js & Redux.js & Material UI</p>\r\n                </header>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExtendedHeader;","export function page_change(page) {\r\n    return {\r\n        type: \"PAGE_CHANGE\",\r\n        page\r\n    }\r\n}\r\n\r\nexport function toggle_header() {\r\n    return {\r\n        type: \"TOGGLE_HEADER\",\r\n    }\r\n}\r\n\r\nexport function toggle_drawer() {\r\n    return {\r\n        type: \"TOGGLE_DRAWER\",\r\n    }\r\n}\r\n\r\nexport function togge_theme(theme) {\r\n    return {\r\n        type: \"TOGGLE_THEME\",\r\n        theme\r\n    }\r\n}\r\n\r\nexport function change_theme_property(prop, value) {\r\n    return {\r\n        type: \"CHANGE_THEME_PROPERTY\",\r\n        prop,\r\n        value\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\nimport moment from 'moment'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport * as GeneralActions from \"../../Actions/GeneralActions\";\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 275,\r\n        maxWidth: 400,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: 10,\r\n    },\r\n    title: {\r\n        margin: 7\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    cardTitle: {\r\n        fontSize: 14,\r\n        textAlign: 'left'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        margin: 10,\r\n    },\r\n    actions: {\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nconst WelcomePage = (props) => {\r\n    const { page_change, toggle_header, toggle_drawer, change_theme_property, General: { theme: {palette: { type: themeType}} } } = props;\r\n\r\n    const classes = useStyles();\r\n    const [fact, setFact] = useState('');\r\n\r\n    useEffect(() => {\r\n        let url = `http://numbersapi.com/${moment().format('M/D')}/date`;\r\n        fetch(url)\r\n            .then((response) => response.text())\r\n            .then(data => {\r\n                setFact(data)\r\n            })\r\n    }, [])\r\n\r\n    // console.log(themeType)\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant='h4' color=\"secondary\" className={classes.title}>\r\n                WELCOME, {props.User.name} !\r\n            </Typography>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography className={classes.cardTitle} color=\"secondary\" gutterBottom>\r\n                        On this day\r\n                    </Typography>\r\n                    {fact}\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\" onClick={() => { page_change('Facts') }}>See more fun facts</Button>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <h3>Feel free to explore NEON</h3>\r\n                </CardContent>\r\n                <CardActions className={classes.actions}>\r\n                    <Button variant=\"contained\" size=\"small\" color={\"primary\"} className={classes.button}\r\n                        onClick={() => { toggle_drawer() }}\r\n                    >\r\n                        <i className=\"material-icons\">\r\n                            menu_open\r\n                        </i>\r\n                        Open Menu\r\n                     </Button>\r\n                    <Button variant=\"contained\" size=\"small\" color=\"secondary\" className={classes.button}\r\n                        onClick={() => { toggle_header() }}\r\n                    >\r\n                        <i className=\"material-icons\">\r\n                            info\r\n                        </i>\r\n                        See Details\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={themeType === 'dark'}\r\n                                onChange={() => change_theme_property('palette.type', themeType === 'dark' ? 'light' : 'dark')}\r\n                                value=\"theme\"\r\n                                className={classes.switch}\r\n                            />\r\n                        }\r\n                        label=\"Switch to the dark side?\"\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(state => {\r\n    const { User, General } = state;\r\n\r\n    return {\r\n        User,\r\n        General\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(WelcomePage);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Paper,\r\n    TextField,\r\n    Button,\r\n    Fab,\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    IconButton\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    grey800,\r\n    grey400\r\n} from 'material-ui/styles/colors';\r\n\r\nconst styles = theme => {\r\n    // console.log(theme)\r\n    return {\r\n        paperStyle: {\r\n            width: \"380px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"10%\"\r\n        },\r\n        operationsDiv: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.palette.secondary.main,\r\n            color: \"white\"\r\n        },\r\n        operationsButtons: {\r\n            fontSize: \"30px\",\r\n            color: \"white\"\r\n        },\r\n        numbersDiv: {\r\n            backgroundColor: theme.palette.grey,\r\n            // color: grey400,\r\n        },\r\n        flatButton: {\r\n            height: \"60px\",\r\n            width: \"50px\",\r\n            borderRadius: \"100%\",\r\n            fontSize: '32px'\r\n        },\r\n        actionButton: {\r\n            marginLeft: 17,\r\n            backgroundColor: theme.palette.primary.main,\r\n            fontSize: \"20px\",\r\n        },\r\n        inputStyle: {\r\n            fontSize: \"32px\",\r\n            textAlign: \"right\",\r\n            width: \"70%\",\r\n            display: \"inline-block\",\r\n        },\r\n        iconButtons: {\r\n            display: \"inline-block\",\r\n        }\r\n    }\r\n}\r\n\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fN: \"\",\r\n            operation: \"\",\r\n            sN: \"\",\r\n            first: true,\r\n        }\r\n    }\r\n\r\n    result() {\r\n        if (!this.state.first && this.state.sN) {\r\n            let fNum = parseInt(this.state.fN, 10);\r\n            let sNum = parseInt(this.state.sN, 10);\r\n            switch (this.state.operation) {\r\n                case \"+\":\r\n                    this.setState({\r\n                        fN: fNum + sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"-\":\r\n                    this.setState({\r\n                        fN: fNum - sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"×\":\r\n                    this.setState({\r\n                        fN: fNum * sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                case \"÷\":\r\n                    this.setState({\r\n                        fN: fNum / sNum,\r\n                        operation: \"\",\r\n                        sN: \"\",\r\n                        first: true,\r\n                    })\r\n                    break;\r\n                default:\r\n                    return\r\n            }\r\n        }\r\n    }\r\n\r\n    addNum(num) {\r\n        if (this.state.first) {\r\n            this.setState({\r\n                fN: this.state.fN.toString() + num\r\n            })\r\n        } else {\r\n            this.setState({\r\n                sN: this.state.sN.toString() + num\r\n            })\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.setState({\r\n            fN: \"\",\r\n            operation: \"\",\r\n            sN: \"\",\r\n            first: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Paper className={classes.paperStyle} elevation={5}>\r\n                    <TextField\r\n                        placeholder=\"insert number\"\r\n                        value={this.state.first ? this.state.fN : this.state.sN}\r\n                        type=\"number\"\r\n                        className={classes.inputStyle}\r\n                        onInput={\r\n                            (event) => {\r\n                                this.state.first ?\r\n                                    this.setState({\r\n                                        fN: event.target.value\r\n                                    })\r\n                                    :\r\n                                    this.setState({\r\n                                        sN: event.target.value\r\n                                    })\r\n                            }\r\n                        }\r\n                    />\r\n                    <IconButton className={classes.iconButtons} name={\"del\"} label=\"del\" onClick={\r\n                        (event) => {\r\n                            let fNum = \"\" + this.state.fN;\r\n                            let sNum = \"\" + this.state.sN;\r\n                            if (this.state.first) {\r\n                                if (fNum !== \"\") {\r\n                                    this.setState({\r\n                                        fN: fNum.substring(0, fNum.length - 1)\r\n                                    })\r\n                                }\r\n                            } else {\r\n                                if (sNum !== \"\") {\r\n                                    this.setState({\r\n                                        sN: sNum.substring(0, sNum.length - 1)\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                    }>\r\n                        <i className=\"material-icons\">\r\n                            backspace\r\n                        </i>\r\n                    </IconButton>\r\n                    <IconButton className={classes.iconButtons} onClick={() => { this.clearAll() }}>\r\n                        <i className=\"material-icons\">\r\n                            clear\r\n                        </i>\r\n                    </IconButton>\r\n                    <br />\r\n                    <Paper elevation={4} className={classes.operationsDiv}>\r\n                        <Button\r\n                            style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }}\r\n                            label=\"+\"\r\n                            className={classes.operationsButtons}\r\n                            onClick={\r\n                                (event) => {\r\n                                    this.setState({\r\n                                        operation: \"+\",\r\n                                        first: false,\r\n                                    })\r\n                                }\r\n                            }> + </Button>\r\n                        <Button\r\n                            style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }}\r\n                            value={\"-\"}\r\n                            label=\"-\"\r\n                            className={classes.operationsButtons}\r\n                            onClick={\r\n                                (event) => {\r\n                                    this.setState({\r\n                                        operation: \"-\",\r\n                                        first: false,\r\n                                    })\r\n                                }\r\n                            }> - </Button>\r\n                        <Button\r\n                            style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }}\r\n                            value={\"×\"}\r\n                            label=\"×\"\r\n                            className={classes.operationsButtons}\r\n                            onClick={\r\n                                (event) => {\r\n                                    this.setState({\r\n                                        operation: \"×\",\r\n                                        first: false,\r\n                                    })\r\n                                }\r\n                            }> × </Button>\r\n                        <Button\r\n                            style={{ height: \"60px\", width: \"50px\", borderRadius: \"100%\", }}\r\n                            value={\"÷\"}\r\n                            label=\"÷\"\r\n                            className={classes.operationsButtons}\r\n                            onClick={\r\n                                (event) => {\r\n                                    console.log('operation')\r\n                                    this.setState({\r\n                                        operation: \"÷\",\r\n                                        first: false,\r\n                                    })\r\n                                }\r\n                            }> ÷ </Button>\r\n                    </Paper>\r\n                    <Table className={classes.numbersDiv}>\r\n                        <TableBody>\r\n                            <TableRow >\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"7\" onClick={() => {\r\n                                        this.addNum(7)\r\n                                    }}> 7 </Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"8\" onClick={() => {\r\n                                        this.addNum(8)\r\n                                    }}> 8</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"9\" onClick={() => {\r\n                                        this.addNum(9)\r\n                                    }}> 9</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"4\" onClick={() => {\r\n                                        this.addNum(4)\r\n                                    }}> 4</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"5\" onClick={() => {\r\n                                        this.addNum(5)\r\n                                    }}> 5</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"6\" onClick={() => {\r\n                                        this.addNum(6)\r\n                                    }}> 6</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"1\" onClick={() => {\r\n                                        this.addNum(1)\r\n                                    }}> 1</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"2\" onClick={() => {\r\n                                        this.addNum(2)\r\n                                    }}> 2</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"3\" onClick={() => {\r\n                                        this.addNum(3)\r\n                                    }}> 3</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\".\" onClick={() => {\r\n                                        this.addNum(\".\")\r\n                                    }} disabled={true}> .</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.flatButton} label=\"0\" onClick={() => {\r\n                                        this.addNum(0)\r\n                                    }}> 0</Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Fab className={classes.actionButton} elevation={4} onClick={() => {\r\n                                        this.result()\r\n                                    }}>\r\n                                        =\r\n                                    </Fab>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Calculator);\r\n","export function name_change(name) {\r\n    return { \r\n        type: \"NAME_CHANGE\",\r\n        name\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { CompactPicker, SliderPicker } from 'react-color';\r\n\r\nimport * as UserActions from \"../.././Actions/UserActions\";\r\nimport * as GeneralActions from \"../.././Actions/GeneralActions\";\r\n\r\nconst MainActions = {\r\n    ...UserActions,\r\n    ...GeneralActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    UserPaper: {\r\n        margin: theme.spacing(2),\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        padding: 20\r\n    },\r\n\r\n    textInput: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    section: {\r\n        margin: theme.spacing(3)\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    }\r\n});\r\n\r\nclass UserPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { name_change } = this.props\r\n        this.name_change = name_change\r\n\r\n        this.state = {\r\n            userName: \"\",\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, General: { theme: { palette: { type: themeType, primary: { main: primaryColor }, secondary: { main: secondaryColor } } } } } = this.props;\r\n\r\n        return (\r\n            <Paper elevation={10} className={classes.UserPaper}>\r\n                <TextField\r\n                    id=\"userName-changer\"\r\n                    variant=\"outlined\"\r\n                    label=\"Your name\"\r\n                    className={classes.textInput}\r\n                    value={this.props.User.name}\r\n                    onChange={(event) => {\r\n                        this.name_change(event.target.value)\r\n                    }}\r\n                />\r\n                <Divider variant=\"middle\" />\r\n                <div className={classes.section}>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={themeType === 'dark'}\r\n                            onChange={() => this.props.change_theme_property('palette.type', themeType === 'dark' ? 'light' : 'dark')}\r\n                            value=\"theme\"\r\n                            className={classes.switch}\r\n                        />\r\n                    }\r\n                    label=\"Switch to the dark side?\"\r\n                />\r\n                </div>\r\n                <div className={classes.section}>\r\n                    <Typography variant='subtitle1' color=\"primary\">\r\n                        Change PRIMARY color\r\n                    </Typography>\r\n                    <CompactPicker\r\n                        color={primaryColor}\r\n                        onChangeComplete={(value) => this.props.change_theme_property('palette.primary.main', value.hex)}\r\n                    />\r\n                </div>\r\n                <div className={classes.section}>\r\n                    <Typography variant='subtitle1' color=\"secondary\">\r\n                        Change SECONDARY color\r\n                    </Typography>\r\n                    <SliderPicker\r\n                        color={secondaryColor}\r\n                        onChangeComplete={(value) => this.props.change_theme_property('palette.secondary.main', value.hex)}\r\n                    />\r\n                </div>\r\n                <Divider variant=\"middle\" />\r\n                <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\r\n                    Delete your stats\r\n                    <i className=\"material-icons\" style={{ marginLeft: \"7px\" }}>\r\n                        delete_forever\r\n                    </i>\r\n                </Button>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { User, General } = state;\r\n\r\n        return {\r\n            User,\r\n            General\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(UserPage);","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport moment from 'moment';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    chip: {\r\n        display: \"block\",\r\n        marginTop: theme.spacing(1),\r\n    }\r\n});\r\n\r\nclass Stopwatch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateDisplay = this.updateDisplay.bind(this);\r\n\r\n        this.state = {\r\n            display: \"00:00:00\",\r\n            flags: [],\r\n            action: \"pause\",\r\n            time: null\r\n        }\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.initial();\r\n    }\r\n\r\n    renderDisplay() {\r\n        return (\r\n            <h1>\r\n                {this.state.display}\r\n            </h1>\r\n        )\r\n    }\r\n\r\n    updateDisplay() {\r\n        this.setState({\r\n            time: moment(this.state.time.add(1, \"second\"))\r\n        }, () => {\r\n            this.setState({\r\n                display: moment(this.state.time).format(\"HH:mm:ss\")\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    initial() {\r\n        this.setState({\r\n            display: \"00:00:00\",\r\n            flags: [],\r\n            action: \"pause\",\r\n            time: null\r\n        });\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    setFlag() {\r\n        this.setState({\r\n            flags: [\r\n                ...this.state.flags,\r\n                {\r\n                    ID: Math.floor(Math.random() * 1000),\r\n                    time: this.state.display\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    renderControls() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fade in={true}>\r\n                <div>\r\n                    <Tooltip title={this.state.action === \"start\" ? \"Put a flag\" : \"Reset\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                            onClick={() => {\r\n                                this.state.action === \"start\"\r\n                                    ? this.setFlag()\r\n                                    : this.initial()\r\n                            }}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                {this.state.action === \"start\" ? \"outlined_flag\" : \"restore\"}\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        color=\"primary\"\r\n                        className={classes.fab}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n                                time: this.state.display === \"00:00:00\"\r\n                                    ? moment(\"00:00:00\", \"HH:mm:ss\")\r\n                                    : this.state.time\r\n                            }, () => {\r\n                                if (this.state.action === \"start\") {\r\n                                    this.timer = setInterval(this.updateDisplay, 1000);\r\n                                } else {\r\n                                    clearInterval(this.timer);\r\n                                }\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                            {this.state.action === \"start\" ? \"pause\" : \"play_arrow\"}\r\n                        </i>\r\n                        {this.state.action === \"start\" ? \"Pause\" : \"Start\"}\r\n                    </Fab>\r\n\r\n                    <Tooltip title={\"Pin to Home\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                add_location\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n    renderFlags() {\r\n        const { flags } = this.state;\r\n        if (!flags || !flags.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    flags.map((flag, index) => {\r\n                        return (\r\n                            <div\r\n                                className={classes.chip}\r\n                                key={flag.ID}\r\n                            >\r\n                                <Badge\r\n                                    badgeContent={index + 1}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    <Chip\r\n                                        avatar={\r\n                                            <Avatar>\r\n                                                <i className=\"material-icons\">\r\n                                                    flag\r\n                                                </i>\r\n                                            </Avatar>\r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        label={flag.time}\r\n\r\n                                    />\r\n                                </Badge>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderDisplay()}\r\n                {this.renderControls()}\r\n                {this.renderFlags()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Stopwatch);","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nclass Success extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.props.open}\r\n                autoHideDuration={this.props.autoHideDuration ? this.props.autoHideDuration : 3000}\r\n                onClose={this.props.handleClose}\r\n            >\r\n                <SnackbarContent\r\n                    className={classNames(classes.success)}\r\n                    aria-describedby=\"client-snackbar\"\r\n                    message={\r\n                        <span id=\"client-snackbar\" className={classes.message}>\r\n                            <i className={classNames(classes.icon, classes.iconVariant, \"material-icons\")}>\r\n                                check_circle_outline\r\n                            </i>\r\n                            {this.props.text.length ? this.props.text : \"Copied to clipboard!\"}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.props.handleClose}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                close\r\n                            </i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Success);","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport Success from '../../../Components/SnackBars/SnackSuccess';\r\n\r\nimport moment from 'moment';\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    chip: {\r\n        display: \"block\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    InputFields: {\r\n        margin: 7,\r\n    }\r\n});\r\n\r\nclass Countdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateDisplay = this.updateDisplay.bind(this);\r\n        this.handleSBClose = this.handleSBClose.bind(this);\r\n\r\n        this.state = {\r\n            display: \"00:00:00\",\r\n            action: \"pause\",\r\n            time: {\r\n                h: 0,\r\n                m: 0,\r\n                s: 20\r\n            },\r\n            snackBarSuccess: false\r\n        }\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.initial();\r\n    }\r\n\r\n    handleInputChange(label, value) {\r\n        this.setState({\r\n            time: {\r\n                ...this.state.time,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    makeOptionsArr(label) {\r\n        if (label === \"h\") {\r\n            let arr = [];\r\n            for (let i = 0; i < 24; i++) {\r\n                let obj = {\r\n                    value: i,\r\n                    label: i,\r\n                }\r\n                arr.push(obj);\r\n            }\r\n\r\n            return arr;\r\n        }\r\n\r\n        let arr = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            let obj = {\r\n                value: i,\r\n                label: i,\r\n            }\r\n            arr.push(obj);\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    renderDisplay() {\r\n        const { classes } = this.props;\r\n        if (this.state.display === \"00:00:00\") {\r\n            return (\r\n                <div className={classes.InputFields}>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Hours\"\r\n                        value={this.state.time.h}\r\n                        onChange={(e) => this.handleInputChange('h', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">H</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"h\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Minutes\"\r\n                        value={this.state.time.m}\r\n                        onChange={(e) => this.handleInputChange('m', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">M</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"m\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        variant=\"outlined\"\r\n                        label=\"Seconds\"\r\n                        value={this.state.time.s}\r\n                        onChange={(e) => this.handleInputChange('s', e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">S</InputAdornment>,\r\n                        }}\r\n                    >\r\n                        {this.makeOptionsArr(\"s\").map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <h1>\r\n                {moment(this.state.display).format(\"HH:mm:ss\")}\r\n            </h1>\r\n        )\r\n    }\r\n\r\n    updateDisplay() {\r\n        if (this.state.display.format(\"HH:mm:ss\") === \"00:00:00\") {\r\n            clearInterval(this.timer)\r\n            this.initial();\r\n            this.setState({\r\n                snackBarSuccess: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                display: this.state.display.subtract(1, \"second\")\r\n            })\r\n        }\r\n    }\r\n\r\n    initial() {\r\n        this.setState({\r\n            display: \"00:00:00\",\r\n            action: \"pause\",\r\n            time: {\r\n                h: 0,\r\n                m: 0,\r\n                s: 20\r\n            }\r\n        });\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    handleStartPause() {\r\n        if (this.state.display === \"00:00:00\") {\r\n            const { time } = this.state;\r\n            this.setState({\r\n                display: moment(`${time.h}:${time.m}:${time.s}`, \"HH:mm:ss\"),\r\n            });\r\n            this.timer = setInterval(this.updateDisplay, 1000);\r\n            return;\r\n        }\r\n\r\n        if (this.state.action === \"pause\") {\r\n            clearInterval(this.timer);\r\n            return;\r\n        } else {\r\n            this.timer = setInterval(this.updateDisplay, 1000);\r\n            return;\r\n        }\r\n\r\n        /* this.setState({\r\n            action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n            time: this.state.display === \"00:00:00\"\r\n                ? moment(\"00:00:00\", \"HH:mm:ss\")\r\n                : this.state.time\r\n        }, () => {\r\n            if (this.state.action === \"start\") {\r\n                this.timer = setInterval(this.updateDisplay, 1000);\r\n            } else {\r\n                clearInterval(this.timer);\r\n            }\r\n        }) */\r\n    }\r\n\r\n    renderControls() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fade in={true}>\r\n                <div>\r\n                    <Tooltip title={\"Reset\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                            onClick={() => {\r\n                                this.initial()\r\n                            }}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                {\"restore\"}\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        color=\"primary\"\r\n                        className={classes.fab}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                action: this.state.action === \"start\" ? \"pause\" : \"start\",\r\n                            }, () => {\r\n                                this.handleStartPause()\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                            {this.state.action === \"start\" ? \"pause\" : \"play_arrow\"}\r\n                        </i>\r\n                        {this.state.action === \"start\" ? \"Pause\" : \"Start\"}\r\n                    </Fab>\r\n\r\n                    <Tooltip title={\"Pin to Home\"}>\r\n                        <IconButton\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            aria-label=\"FlagOrReset\"\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                add_location\r\n                            </i>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </Fade>\r\n        )\r\n    }\r\n\r\n    renderFlags() {\r\n        const { flags } = this.state;\r\n        if (!flags || !flags.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    flags.map((flag, index) => {\r\n                        return (\r\n                            <div\r\n                                className={classes.chip}\r\n                                key={flag.ID}\r\n                            >\r\n                                <Badge\r\n                                    badgeContent={index + 1}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    <Chip\r\n                                        avatar={\r\n                                            <Avatar>\r\n                                                <i className=\"material-icons\">\r\n                                                    flag\r\n                                                </i>\r\n                                            </Avatar>\r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        label={flag.time}\r\n                                    />\r\n                                </Badge>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSBClose() {\r\n        this.setState({\r\n            snackBarSuccess: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderDisplay()}\r\n                {this.renderControls()}\r\n                {this.renderFlags()}\r\n                <Success\r\n                    open={this.state.snackBarSuccess}\r\n                    handleClose={this.handleSBClose}\r\n                    text={\"Countdown finished!\"}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Countdown);","import React, { Component, Fragment } from 'react';\r\n\r\nimport DatePicker from 'material-ui/DatePicker';\r\nimport _ from \"lodash\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Stopwatch from \"./Components/StopWatch.js\";\r\nimport Countdown from \"./Components/Countdown.js\";\r\n\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport * as moment from 'moment';\r\n\r\nimport {\r\n    cyan500,\r\n    pinkA200,\r\n} from 'material-ui/styles/colors';\r\n\r\nconst styles = theme => ({\r\n    Menu: {\r\n        width: '100%',\r\n        maxWidth: 240,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginRight: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    Content: {\r\n        width: '100%',\r\n        maxWidth: 300,\r\n        backgroundColor: theme.palette.background.paper,\r\n        minHeight: 100,\r\n        height: \"auto\",\r\n        padding: 75,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n    fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        marginRight: \"10px\"\r\n    },\r\n\r\n    Avatar: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        marginRight: 10,\r\n    }\r\n});\r\n\r\nclass Time extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            compare: {\r\n                date1: moment().unix() * 1000,\r\n                date2: moment().unix() * 1000,\r\n            },\r\n            Menu: [\r\n                {\r\n                    ID: 1,\r\n                    Title: \"Compare time\",\r\n                    Icon: \"compare_arrows\"\r\n                },\r\n                {\r\n                    ID: 2,\r\n                    Title: \"Stopwatch\",\r\n                    Icon: \"timer\"\r\n                },\r\n                {\r\n                    ID: 3,\r\n                    Title: \"Countdown\",\r\n                    Icon: \"timelapse\"\r\n                },\r\n            ],\r\n            Current: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.inter = setInterval(this.updateNowInState, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.inter)\r\n    }\r\n\r\n\r\n    updateNowInState = () => {\r\n        this.setState({\r\n            now: moment()\r\n        })\r\n    }\r\n\r\n\r\n    handleDateChange = (date, key) => {\r\n        console.log(date.unix() * 1000, key)\r\n        this.setState({\r\n            compare: {\r\n                ...this.state.compare,\r\n                [key]: date.unix() * 1000\r\n            }\r\n        })\r\n    }\r\n\r\n    compareTime() {\r\n        const { date1, date2 } = this.state.compare;\r\n        console.log(date1, date2)\r\n        return (\r\n            <Fragment>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"First date\"\r\n                        value={date1}\r\n                        onChange={(date) => this.handleDateChange(date, 'date1')}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                        style={{ display: 'block'}}\r\n                    />\r\n                    <br />\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Second date\"\r\n                        value={date2}\r\n                        onChange={(date) => this.handleDateChange(date, 'date2')}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <br />\r\n                <Paper elevation={1}>\r\n                    <p>{moment(date1).from(moment(date2))}</p>\r\n                </Paper>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n\r\n    renderContentInner() {\r\n        clearInterval(this.inter);\r\n\r\n        switch (this.state.Current) {\r\n            case 1: return this.compareTime();\r\n            case 2: return <Stopwatch />;\r\n            case 3: return <Countdown />;\r\n            default: return <Stopwatch />;\r\n        }\r\n    }\r\n\r\n    renderContent() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper className={classes.Content} elevation={10}>\r\n                {this.renderContentInner()}\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n    renderMenu() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper elevation={3} className={classes.Menu}>\r\n                <List component=\"nav\" dense>\r\n                    {\r\n                        this.state.Menu.map((item, index) => {\r\n                            return (\r\n                                <Zoom in={true}\r\n                                    key={item.ID}\r\n                                    style={{ transitionDelay: index * 100 }}\r\n                                >\r\n                                    <div>\r\n                                        <ListItem\r\n                                            dense\r\n                                            button\r\n                                            onClick={() => {\r\n                                                this.setState({\r\n                                                    Current: item.ID\r\n                                                })\r\n                                            }}\r\n                                        >\r\n                                            <Avatar className={classes.Avatar}>\r\n                                                <i className=\"material-icons\">\r\n                                                    {item.Icon}\r\n                                                </i>\r\n                                            </Avatar>\r\n                                            <ListItemText primary={item.Title} />\r\n                                        </ListItem>\r\n                                        {\r\n                                            !(this.state.Menu.length - 1 === index)\r\n                                                ? <Divider variant=\"inset\" />\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </Zoom>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={10}\r\n                    className={\"\"}\r\n                    alignItems={\"center\"}\r\n                    direction={\"row\"}\r\n                    justify={\"center\"}\r\n                    style={{ marginTop: 50 }}\r\n                >\r\n                    {this.renderMenu()}\r\n                    <Fade in={true} style={{ transitionDelay: 100 }}>\r\n                        {this.renderContent()}\r\n                    </Fade>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Time);","import React, { Component, Fragment } from 'react';\r\n\r\n//import Paper from '@material-ui/core/Paper';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n\r\n//import Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nclass Arrays extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: null,\r\n            divisedBy: 1,\r\n        };\r\n    }\r\n\r\n    handleChange = panel => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : false,\r\n        });\r\n    };\r\n\r\n    returnEven() {\r\n        let arr = []\r\n        for (let i = 1; i < 100; i++) {\r\n            if (i % 2 === 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnOdd() {\r\n        let arr = []\r\n        for (let i = 1; i < 100; i++) {\r\n            if (i % 2 !== 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnFibonacci() {\r\n        let arr = [0, 1]\r\n        for (let i = 0; i <= 20; i++) {\r\n            arr.push(arr[i] + arr[i + 1])\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    isPrime(n) {\r\n        if (n === 2)\r\n            return true;\r\n        if (n === 3)\r\n            return true;\r\n        if (n % 2 === 0)\r\n            return false;\r\n        if (n % 3 === 0)\r\n            return false;\r\n\r\n        let i = 5;\r\n        let w = 2;\r\n\r\n        while (i * i <= n) {\r\n            if (n % i === 0) {\r\n                return false;\r\n            }\r\n            i += w;\r\n            w = 6 - w;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    returnPrime() {\r\n        let arr = []\r\n        for (let i = 2; i < 100; i++) {\r\n            if (this.isPrime(i)) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    returnDivisible() {\r\n        let arr = []\r\n        for (let i = 1; i <= 100; i++) {\r\n            if (i % this.state.divisedBy === 0) {\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    renderNumbers(arr, newRow = 10) {\r\n\r\n        if (!arr || !arr.length) return null;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    arr.map((num, index) => {\r\n                        if (index % newRow === 0 && index !== 0) {\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <span>{num + \", \"}</span>\r\n                                    <br />\r\n                                </Fragment>\r\n                            )\r\n                        } else {\r\n                            return num + \",\";\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { expanded } = this.state;\r\n\r\n        const style = {\r\n            panel: {\r\n                width: \"50%\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n            },\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <ExpansionPanel expanded={expanded === 'panel1'} style={style.panel} onChange={this.handleChange('panel1')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Even numbers between 1 and 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnEven())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel2'} style={style.panel} onChange={this.handleChange('panel2')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Odd numbers between 1 and 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnOdd(), 5)}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel3'} style={style.panel} onChange={this.handleChange('panel3')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        First 20 Fibonacci numbers\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnFibonacci())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel4'} style={style.panel} onChange={this.handleChange('panel4')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Prime numbers from 1 to 100\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnPrime())}\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel5'} style={style.panel} onChange={this.handleChange('panel5')}>\r\n                    <ExpansionPanelSummary expandIcon={\r\n                        <i className=\"material-icons\">\r\n                            keyboard_arrow_down\r\n                        </i>}>\r\n                        Numbers divisible by {this.state.divisedBy === 1 ? \"...\" : this.state.divisedBy}\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        {this.renderNumbers(this.returnDivisible())}\r\n                    </ExpansionPanelDetails>\r\n                    <Divider />\r\n                    <ExpansionPanelActions>\r\n                        <FormControl>\r\n                            {\"Show me numbers divisible by: \"}\r\n                            <Select\r\n                                value={this.state.divisedBy}\r\n                                onChange={(event) => this.setState({ divisedBy: event.target.value })}\r\n                            >\r\n                                <MenuItem value={3}>3</MenuItem>\r\n                                <MenuItem value={4}>4</MenuItem>\r\n                                <MenuItem value={5}>5</MenuItem>\r\n                                <MenuItem value={6}>6</MenuItem>\r\n                                <MenuItem value={7}>7</MenuItem>\r\n                                <MenuItem value={8}>8</MenuItem>\r\n                                <MenuItem value={9}>9</MenuItem>\r\n                                <MenuItem value={10}>10</MenuItem>\r\n                                <MenuItem value={15}>15</MenuItem>\r\n                                <MenuItem value={25}>25</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </ExpansionPanelActions>\r\n                </ExpansionPanel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Arrays;","import React, { Component } from 'react';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                backgroundColor: this.props.Color,\r\n                height: \"400px\",\r\n                width: \"200px\"\r\n            }}>\r\n                <h1>{this.props.Number}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Card from \"./Card\";\r\n//import url from \"../.././Pictures/Uno_cards/blue_0.png\";\r\n\r\nclass Uno extends Component {\r\n    render() {\r\n        //var url = \"\";\r\n        console.log(this.props.Uno)\r\n        return (\r\n            <div>\r\n                <h1>Ovo je Uno</h1>\r\n                {\r\n                    this.props.Uno.map((item) => {\r\n                        return (\r\n                            <Card \r\n                                {...item}\r\n                                onClick={()=> {\r\n                                    \r\n                                }}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => {\r\n    const { Uno } = state;\r\n\r\n    return {\r\n        Uno,\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Uno);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        maxWidth: 720,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        contentAlign: \"center\"\r\n    },\r\n\r\n    padding: {\r\n        padding: `0 ${theme.spacing(2)}px`,\r\n    }\r\n});\r\n\r\nclass Lists extends Component {\r\n\r\n    renderBadgeNumber(item) {\r\n        var unCompleted = item.Todos.filter((task)=> {\r\n            if(!task.Completed) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n\r\n        return unCompleted.length;\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <Tabs\r\n                    value={this.props.current}\r\n                    onChange={(event, value) => {\r\n                        this.props.changeCurrent(value)\r\n                    }}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"secondary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {\r\n                        this.props.Todo.map((item) => {\r\n                            return (\r\n                                <Tab\r\n                                    label={\r\n                                        <Badge \r\n                                        className={classes.padding} \r\n                                        color=\"secondary\" \r\n                                        badgeContent={this.renderBadgeNumber(item)}>\r\n                                            {item.ListName}\r\n                                        </Badge>\r\n                                    }\r\n                                    key={item.ID}\r\n                                    value={item.ID}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </Tabs>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nLists.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Todo } = state;\r\n\r\n        return {\r\n            Todo,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators({}, dispatch);\r\n        })\r\n)(Lists);","export function new_task(data) {\r\n    return {\r\n        type: 'NEW_TASK',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function new_list(data) {\r\n    return {\r\n        type: 'NEW_LIST',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_list(data) {\r\n    return {\r\n        type: 'DELETE_LIST',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_task(data) {\r\n    return {\r\n        type: 'DELETE_TASK',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function edit_task(data) {\r\n    return {\r\n        type: 'EDIT_TASK',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_list(data) {\r\n    return {\r\n        type: 'EDIT_LIST',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nclass TaskView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_task } = this.props;\r\n        this.new_task = new_task;\r\n\r\n        this.handleTaskEdit = this.handleTaskEdit.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            Task: {\r\n                ID: \"\",\r\n                Text: \"\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 2,\r\n                ...this.props.Task\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Task.ID ? true : false;\r\n    }\r\n\r\n    handleTaskEdit(label, value) {\r\n        this.setState({\r\n            ...this.state,\r\n            Task: {\r\n                ...this.state.Task,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        var ID = Math.floor(Math.random() * 1000),\r\n            Task = {};\r\n\r\n        if (this.isEditing()) {\r\n            Task = {\r\n                ...this.state.Task,\r\n            }\r\n            this.props.edit_task({\r\n                ID: this.props.listID,\r\n                Task\r\n            })\r\n        } else {\r\n            Task = {\r\n                ...this.state.Task,\r\n                ID\r\n            }\r\n            this.props.new_task({\r\n                ID: this.props.listID,\r\n                Task\r\n            })\r\n        }\r\n\r\n        this.props.handleModalClose()\r\n    }\r\n\r\n    render() {\r\n        const { Task } = this.state;\r\n        return (\r\n            <Dialog\r\n                open={this.props.showTaskModal}\r\n                onClose={this.props.handleModalClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">{\"Edit task #\" + Task.ID}</DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={Task.Completed}\r\n                                    onChange={() => this.handleTaskEdit(\"Completed\", !Task.Completed)}\r\n                                    value={\"?\"}\r\n                                />\r\n                            }\r\n                            label={\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"text\">Name</InputLabel>\r\n                                    <Input\r\n                                        autoFocus\r\n                                        fullWidth\r\n                                        id=\"text\"\r\n                                        value={Task.Text}\r\n                                        onChange={(e) => {\r\n                                            this.handleTaskEdit(\"Text\", e.target.value)\r\n                                        }} />\r\n                                </FormControl>\r\n                            }\r\n                        />\r\n                        <br />\r\n                        <div>\r\n                            Importance level:\r\n                            <IconButton\r\n                                color={Task.Importance === 1 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 1)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    low_priority\r\n                                </i>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                color={Task.Importance === 2 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 2)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    code\r\n                                </i>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                color={Task.Importance === 3 ? \"primary\" : \"default\"}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.handleTaskEdit(\"Importance\", 3)\r\n                                    }\r\n                                }\r\n                                aria-label=\"Delete\">\r\n                                <i className=\"material-icons\">\r\n                                    priority_high\r\n                                </i>\r\n                            </IconButton>\r\n                        </div>\r\n                        {\r\n                            /*\r\n                            <Button variant=\"flat\" color=\"primary\">\r\n                                Move to list\r\n                            <i className=\"material-icons\">send</i>\r\n                            </Button>\r\n                            */\r\n                        }\r\n                        <br />\r\n                        <FormControl>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                label=\"Notes\"\r\n                                fullWidth\r\n                                multiline\r\n                                rows=\"3\"\r\n                                value={Task.Notes}\r\n                                onChange={(e) => {\r\n                                    this.handleTaskEdit(\"Notes\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleModalClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(TaskView);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n//import Chip from '@material-ui/core/Chip';\r\n\r\nimport { Theme } from '@material-ui/core/'\r\n\r\nimport TaskView from './TaskView';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 420,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    },\r\n\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    listItemCompleted: {\r\n        textDecoration: \"line-through\",\r\n        color: theme.palette.text.primary\r\n    },\r\n\r\n    arrow: {\r\n        paddingTop: \"15px\",\r\n        verticalAlign: \"center\"\r\n    },\r\n\r\n    avatar: {\r\n        margin: 10,\r\n    },\r\n\r\n    highImportance: {\r\n        color: '#fff',\r\n        backgroundColor: '#f44336'\r\n    },\r\n\r\n    normalImportance: {\r\n        color: '#fff',\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n\r\n    lowImportance: {\r\n        color: '#000',\r\n        backgroundColor: '#4caf50',\r\n    },\r\n\r\n    close: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n\r\n    buttonDelete: {\r\n        color: '#fff',\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    textColor: {\r\n        color: theme.palette.text.primary\r\n    }\r\n});\r\n\r\nclass CurrentList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { delete_task, edit_task, new_task } = this.props;\r\n        this.delete_task = delete_task;\r\n        this.edit_task = edit_task;\r\n        this.new_task = new_task;\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n        this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n\r\n        this.state = {\r\n            showCompleted: true,\r\n            showUncompleted: true,\r\n            showTaskModal: false,\r\n            showSnackbar: false,\r\n            Task: {\r\n                Importance: 2\r\n            },\r\n            lastDeleted: {}\r\n        }\r\n    }\r\n\r\n    findById(list, ID, flag) {\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].ID === ID) {\r\n                if (!flag) {\r\n                    return list[i].Todos;\r\n                } else {\r\n                    return list[i];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleUndoDelete() {\r\n        this.handleSnackbarClose()\r\n        this.new_task({\r\n            ID: this.props.currentList,\r\n            Task: this.state.lastDeleted\r\n        })\r\n    }\r\n\r\n    handleSnackbarClose() {\r\n        this.setState({\r\n            showSnackbar: false\r\n        })\r\n    }\r\n\r\n    handleModalClose() {\r\n        this.setState({\r\n            showTaskModal: false\r\n        })\r\n    }\r\n\r\n    handleChange(label) {\r\n        let value = this.state[label];\r\n        this.setState({\r\n            [label]: !value\r\n        })\r\n    }\r\n\r\n    handleTaskEdit(label, value) {\r\n        this.setState({\r\n            ...this.state,\r\n            Task: {\r\n                ...this.state.Task,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    filterTasks(flag, tasks = this.findById(this.props.Todo, this.props.currentList, false)) {\r\n        return tasks.filter((task) => {\r\n            if (flag) {\r\n                return !task.Completed;\r\n            }\r\n            return task.Completed;\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.handleModalClose()\r\n        const data = {\r\n            ID: this.props.currentList,\r\n            Task: this.state.Task\r\n        }\r\n        this.edit_task(data)\r\n    }\r\n\r\n    renderItemImportance(item) {\r\n        const { classes } = this.props;\r\n        const { Importance } = item;\r\n        switch (Importance) {\r\n            case 1: return <Avatar className={classes.lowImportance}>\r\n                <i className=\"material-icons\">low_priority</i>\r\n            </Avatar>\r\n            case 2: return <Avatar className={classes.normalImportance}>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n            </Avatar>\r\n            case 3: return <Avatar className={classes.highImportance}>\r\n                <i className=\"material-icons\">priority_high</i>\r\n            </Avatar>\r\n            default: return <Avatar className={classes.normalImportance}>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n            </Avatar>\r\n        }\r\n    }\r\n\r\n    renderItems(item) {\r\n        const { classes } = this.props;\r\n\r\n        return <ListItem\r\n            key={item.ID}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={(e) => {\r\n                if(e.target.localName !== 'div') return;\r\n                \r\n                this.setState({\r\n                    showTaskModal: true,\r\n                    Task: {\r\n                        ...this.state.Task,\r\n                        ...item\r\n                    }\r\n                })\r\n            }}\r\n            className={classes.listItem}\r\n        >\r\n            <ListItemAvatar>\r\n                {this.renderItemImportance(item)}\r\n            </ListItemAvatar>\r\n            <Checkbox\r\n                checked={item.Completed}\r\n                onChange={() => {\r\n                    const data = {\r\n                        ID: this.props.currentList,\r\n                        Task: {\r\n                            ...item,\r\n                            Completed: !item.Completed\r\n                        }\r\n                    }\r\n                    this.edit_task(data)\r\n                }}\r\n            />\r\n            <ListItemText\r\n                className={item.Completed ? classes.listItemCompleted : classes.textColor}\r\n                primary={item.Text}\r\n                // primaryTypographyProps={classes.textColor}\r\n                secondary={item.Notes\r\n                    ? <i className=\"material-icons\">notes</i>\r\n                    : null\r\n                }\r\n            />\r\n            <ListItemSecondaryAction>\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showTaskModal: true,\r\n                            Task: {\r\n                                ...this.state.Task,\r\n                                ...item\r\n                            }\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\">\r\n                        edit\r\n                    </i>\r\n                </IconButton>\r\n                <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showSnackbar: true,\r\n                            lastDeleted: {\r\n                                ...item\r\n                            }\r\n                        })\r\n                        const data = {\r\n                            ID: this.props.currentList,\r\n                            Task: item\r\n                        }\r\n                        this.delete_task(data)\r\n                    }}>\r\n                    <i className=\"material-icons\">\r\n                        delete_forever\r\n                    </i>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <List className={classes.root}>\r\n                <ListSubheader onClick={() => this.handleChange(\"showUncompleted\")}>\r\n                    <IconButton onClick={() => this.handleChange(\"showUncompleted\")}>\r\n                        <i className={\"material-icons\"}>\r\n                            {!this.state.showUncompleted ? \"keyboard_arrow_down\" : \"keyboard_arrow_up\"}\r\n                        </i>\r\n                    </IconButton>\r\n                    Uncompleted\r\n                </ListSubheader>\r\n                {\r\n                    this.state.showUncompleted && this.filterTasks(true).map((item) => {\r\n                        return (\r\n                            this.renderItems(item)\r\n                        )\r\n                    })\r\n                }\r\n                <ListSubheader onClick={() => this.handleChange(\"showCompleted\")}>\r\n                    <IconButton onClick={() => this.handleChange(\"showCompleted\")}>\r\n                        <i className={\"material-icons\"}>\r\n                            {!this.state.showCompleted ? \"keyboard_arrow_down\" : \"keyboard_arrow_up\"}\r\n                        </i>\r\n                    </IconButton>\r\n                    Completed\r\n                </ListSubheader>\r\n                {\r\n                    this.state.showCompleted && this.filterTasks(false).map((item) => {\r\n                        return (\r\n                            this.renderItems(item)\r\n                        )\r\n                    })\r\n                }\r\n                <Divider />\r\n                {\r\n                    this.state.showTaskModal\r\n                        ? <TaskView\r\n                            Task={this.state.Task}\r\n                            showTaskModal={this.state.showTaskModal}\r\n                            listID={this.props.currentList}\r\n                            handleModalClose={this.handleModalClose}\r\n                        />\r\n                        : null\r\n                }\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={this.state.showSnackbar}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleSnackbarClose}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span id=\"message-id\">Task deleted</span>}\r\n                    action={[\r\n                        <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n                            UNDO\r\n                        </Button>,\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.handleSnackbarClose}\r\n                        >\r\n                            <i className=\"material-icons\">close</i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\nCurrentList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Todo } = state;\r\n\r\n        return {\r\n            Todo,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(CurrentList);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n    ...ToDoActions\r\n}\r\n\r\nclass ListEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_list, edit_list } = this.props;\r\n        this.new_list = new_list;\r\n        this.edit_list = edit_list;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            list: {\r\n                ID: \"\",\r\n                ListName: \"\",\r\n                Archived: false,\r\n                Todos: [],\r\n                ...this.props.list\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.list.ID ? true : false;\r\n    }\r\n\r\n    handleChange(label, value) {\r\n        this.setState({\r\n            list: {\r\n                ...this.state.list,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_list(this.state.list)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_list({\r\n                ...this.state.list,\r\n                ID\r\n            });\r\n        }\r\n\r\n        this.props.handleClose();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {\r\n                        this.isEditing()\r\n                            ? \"Edit list\"\r\n                            : \"Add new list\"\r\n                    }\r\n                </DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">Name your list</InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.list.ListName}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"ListName\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(ListEdit);","var User = {\r\n    name: \"GSM\"\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport compose from 'recompose/compose';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\n//import './App.css';\r\nimport Lists from \"./Components/Lists\";\r\nimport CurrentList from \"./Components/CurrentList\";\r\nimport ListEdit from './Components/ListEdit';\r\nimport TaskView from './Components/TaskView';\r\n\r\nimport User from '../../Data/User';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as ToDoActions from \"../../Actions/ToDoActions\";\r\n\r\nconst MainActions = {\r\n  ...ToDoActions\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 420,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass ToDo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.exitPopups = this.exitPopups.bind(this);\r\n    this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n    this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n\r\n    const { delete_list, new_list } = this.props;\r\n    this.delete_list = delete_list;\r\n    this.new_list = new_list;\r\n\r\n    this.state = {\r\n      tdl: [...this.props.Todo],\r\n      UserName: User.name,\r\n      CurrentList: 1,\r\n      showNewListPopup: false,\r\n      showNewTaskPopup: false,\r\n      lastDeletedList: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      tdl: [...this.props.Todo]\r\n    })\r\n  }\r\n\r\n\r\n  findById(list, ID, flag) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].ID === ID) {\r\n        if (!flag) {\r\n          return list[i].Todos;\r\n        } else {\r\n          return list[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  newList = (list) => {\r\n    this.setState({\r\n      tdl: [\r\n        ...this.state.tdl,\r\n        list\r\n      ],\r\n      showNewListPopup: false\r\n    })\r\n  }\r\n\r\n  currentList() {\r\n    return this.findById(this.props.Todo, this.state.CurrentList, true);\r\n  }\r\n\r\n  nextCurrent() {\r\n    return this.props.Todo.filter((list) => {\r\n      if (list.ID !== this.state.CurrentList) {\r\n        return true;\r\n      }\r\n      return false;\r\n    })[0].ID\r\n  }\r\n\r\n  handleUndoDelete() {\r\n    this.handleSnackbarClose()\r\n    this.new_list(this.state.lastDeletedList)\r\n  }\r\n\r\n  handleSnackbarClose() {\r\n    this.setState({\r\n      showSnackbar: false\r\n    })\r\n  }\r\n\r\n  exitPopups() {\r\n    this.setState({\r\n      showNewListPopup: false,\r\n      showNewTaskPopup: false,\r\n      showEditListPopup: false\r\n    })\r\n  }\r\n\r\n  renderMoreListOptions() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showNewListPopup: true\r\n            })\r\n          }}>\r\n          New list\r\n          </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"medium\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showEditListPopup: true\r\n            })\r\n          }}>\r\n          Edit list\r\n          </Button>\r\n        <Button\r\n          variant=\"text\"\r\n          color=\"default\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            this.setState({\r\n              showSnackbar: true,\r\n              CurrentList: this.nextCurrent(),\r\n              lastDeletedList: {\r\n                ...this.currentList()\r\n              }\r\n            })\r\n\r\n            this.delete_list(this.currentList())\r\n\r\n          }}>\r\n          Delete list\r\n          </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Lists\r\n          lists={[...this.state.tdl]}\r\n          current={this.state.CurrentList}\r\n          cancel={this.exitPopups}\r\n          newList={\r\n            () => {\r\n              this.setState({\r\n                showNewListPopup: true\r\n              })\r\n            }\r\n          }\r\n          changeCurrent={\r\n            (ID) => {\r\n              this.setState({\r\n                CurrentList: ID\r\n              })\r\n            }\r\n          }\r\n        />\r\n        <CurrentList\r\n          currentList={this.state.CurrentList}\r\n          toggleItem={this.toggleItem}\r\n          deleteItem={this.deleteItem}\r\n        />\r\n        {\r\n          this.state.showNewTaskPopup\r\n            ? <TaskView\r\n              showTaskModal={this.state.showNewTaskPopup}\r\n              listName={this.currentList().ListName}\r\n              listID={this.state.CurrentList}\r\n              handleModalClose={this.exitPopups}\r\n              newTask={this.newTask}\r\n            />\r\n            : null\r\n        }\r\n        {\r\n          this.state.showNewListPopup\r\n            ? <ListEdit\r\n              open={this.state.showNewListPopup}\r\n              listName={this.currentList().ListName}\r\n              handleClose={this.exitPopups}\r\n            />\r\n            : null\r\n        }\r\n        {\r\n          this.state.showEditListPopup\r\n            ? <ListEdit\r\n              open={this.state.showEditListPopup}\r\n              list={this.currentList()}\r\n              handleClose={this.exitPopups}\r\n            />\r\n            : null\r\n        }\r\n        <Tooltip TransitionComponent={Zoom} title=\"Add new TASK\">\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            className={classes.fab}\r\n            onClick={() => {\r\n              this.setState({\r\n                showNewTaskPopup: true\r\n              })\r\n            }}>\r\n            <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>add_circle_outline</i>\r\n            New task\r\n          </Fab>\r\n        </Tooltip>\r\n        {this.renderMoreListOptions()}\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          open={this.state.showSnackbar}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">List deleted</span>}\r\n          action={[\r\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n              UNDO\r\n            </Button>,\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={this.handleSnackbarClose}\r\n            >\r\n              <i className=\"material-icons\">close</i>\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToDo.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(state => {\r\n    const { Todo } = state;\r\n\r\n    return {\r\n      Todo,\r\n    };\r\n  },\r\n    dispatch => {\r\n      return bindActionCreators(MainActions, dispatch);\r\n    })\r\n)(ToDo);","import React, { Component } from 'react';\r\nimport ReactQuill from 'react-quill';\r\n\r\nclass TextEditor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.modules = {\r\n            toolbar: [\r\n                [{ 'header': [1, 2, false] }],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\r\n                ['link', 'image'],\r\n                ['clean']\r\n            ],\r\n        }\r\n\r\n        this.formats = [\r\n            'header',\r\n            'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n            'list', 'bullet', 'indent',\r\n            'link', 'image'\r\n        ]\r\n        this.state = { text: '' }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(value) {\r\n        this.setState({ text: value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactQuill\r\n                value={this.props.value}\r\n                onChange={this.props.handleChange}\r\n                theme=\"snow\"\r\n                modules={this.modules}\r\n                formats={this.formats}\r\n                style={{\r\n                    height: \"375px\",\r\n                    marginBottom: \"45px\",\r\n                    backgroundColor: 'white',\r\n                    color: 'black'\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextEditor;","var darkColors = [\r\n    \"#ba000d\",\r\n    \"#4a148c\",\r\n    \"#0d47a1\",\r\n    \"#1b5e20\",\r\n    \"#0069c0\",\r\n    \"#ff3d00\",\r\n    \"#4e342e\",\r\n    \"#000000\",\r\n];\r\n\r\nexport default darkColors;","export function new_note(data) {\r\n    return {\r\n        type: 'NEW_NOTE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_note(data) {\r\n    return {\r\n        type: 'EDIT_NOTE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_note(data) {\r\n    return {\r\n        type: 'DELETE_NOTE',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport TextEditor from \"../../Components/TextEditor\";\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { CirclePicker } from 'react-color';\r\nimport darkColors from \"../../Data/Settings/darkPickerColors\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as NotesActions from \"../../Actions/NotesActions\";\r\n\r\nconst MainActions = {\r\n    ...NotesActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    note: {\r\n        width: '100%',\r\n        maxWidth: 530,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    editorSpace: {\r\n        width: '100%',\r\n        maxWidth: 530,\r\n        backgroundColor: theme.palette.background.paper,\r\n        height: 375,\r\n    },\r\n\r\n    avatar: {\r\n        width: 20,\r\n        height: 20,\r\n        marginLeft: 10,\r\n    },\r\n\r\n    Button: {\r\n        display: \"inline-block\"\r\n    },\r\n\r\n    titleInput: {\r\n        // height: 30\r\n    }\r\n});\r\n\r\nclass NotesView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_note, delete_note, edit_note } = this.props;\r\n        this.new_note = new_note;\r\n        this.delete_note = delete_note;\r\n        this.edit_note = edit_note;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            Note: {\r\n                ID: null,\r\n                Title: \"\",\r\n                Content: \"\",\r\n                Color: \"#0d47a1\",\r\n                Date: new Date(),\r\n                ...this.props.Note\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Note.ID ? true : false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!this.props.Note || prevProps.Note.ID === this.props.Note.ID) return null;\r\n        if (!this.props.isNew) {\r\n            return this.setState({\r\n                Note: {\r\n                    ID: null,\r\n                    Title: \"\",\r\n                    Content: \"\",\r\n                    Color: \"#0d47a1\",\r\n                    Date: new Date(),\r\n                    ...this.props.Note\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            return this.setState({\r\n                Note: {\r\n                    ...this.props.Note\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange(newValue) {\r\n        this.setState({\r\n            Note: {\r\n                ...this.state.Note,\r\n                Content: newValue\r\n            }\r\n        })\r\n    }\r\n\r\n    handleValueChange(label, value) {\r\n        this.setState({\r\n            Note: {\r\n                ...this.state.Note,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete() {\r\n        this.delete_note(this.state.Note)\r\n        // this.props.changeCurrentOnAdd()\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_note(this.state.Note)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_note({\r\n                ...this.state.Note,\r\n                ID\r\n            });\r\n            this.props.changeCurrentOnAdd(ID)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <Paper elevation={12} className={classes.note}>\r\n                    <TextField\r\n                        id=\"full-width\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Avatar\r\n                                        style={{ backgroundColor: this.state.Note.Color }}\r\n                                        className={classes.avatar}\r\n                                    >\r\n                                        {this.state.Note.Title[0]}\r\n                                    </Avatar>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        className={classes.titleInput}\r\n                        required\r\n                        placeholder=\"Enter title here...\"\r\n                        fullWidth\r\n                        value={this.state.Note.Title}\r\n                        onChange={(e) => {\r\n                            this.handleValueChange(\"Title\", e.target.value)\r\n                        }}\r\n                    />\r\n                    <TextEditor\r\n                        value={this.state.Note.Content}\r\n                        handleChange={this.handleChange}\r\n                    />\r\n                    <div style={{ display: \"inline-block\" }}>\r\n                        <CirclePicker\r\n                            color={this.state.Note.Color}\r\n                            width=\"260px\"\r\n                            colors={darkColors}\r\n                            circleSpacing={3}\r\n                            onChange={(value) => {\r\n                                this.handleValueChange(\"Color\", value.hex)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.isEditing()\r\n                            ? <Button\r\n                                color=\"secondary\"\r\n                                className={classes.Button}\r\n                                onClick={this.handleDelete}>\r\n                                Delete\r\n                                </Button>\r\n                            : <Button\r\n                                color=\"secondary\"\r\n                                className={classes.Button}\r\n                                onClick={this.props.handleCancel}>\r\n                                Cancel\r\n                                </Button>\r\n                    }\r\n                    <Button className={classes.Button} type=\"submit\" color=\"primary\">\r\n                        Save\r\n                        </Button>\r\n                </Paper>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(() => {\r\n        return {}\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(NotesView);","export function increase(data) {\r\n    return {\r\n        type: 'INCREASE',\r\n        data,\r\n    };\r\n};\r\n\r\nexport function decrease(data) {\r\n    return {\r\n        type: 'DECREASE',\r\n        data\r\n    };\r\n};\r\n\r\nexport function new_counter(data) {\r\n    return {\r\n        type: 'NEW_COUNTER',\r\n        data\r\n    };\r\n};\r\n\r\nexport function edit_counter(data) {\r\n    return {\r\n        type: 'EDIT_COUNTER',\r\n        data\r\n    };\r\n};\r\n\r\nexport function delete_counter(data) {\r\n    return {\r\n        type: 'DELETE_COUNTER',\r\n        data\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport NotesView from \"./NotesView\";\r\nimport _ from \"lodash\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\n//import { Fab } from '@material-ui/core';\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    notesList: {\r\n        width: '100%',\r\n        maxWidth: 240,\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginRight: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst EmptyNote = {\r\n    ID: null,\r\n    Title: \"\",\r\n    Content: \"\",\r\n    Color: \"#0d47a1\",\r\n    Date: new Date(),\r\n}\r\n\r\nclass Notes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.changeCurrentOnAdd = this.changeCurrentOnAdd.bind(this);\r\n\r\n        this.state = {\r\n            currentNote: this.getFirst(),\r\n            isNew: false,\r\n        }\r\n    }\r\n\r\n    /* static getDerivedStateFromProps(props, state) {\r\n        return \r\n    } */\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.Notes === this.props.Notes) return null;\r\n\r\n        if (!this.props.Notes.length) {\r\n            return this.setState({\r\n                currentNote: EmptyNote\r\n            })\r\n        }\r\n\r\n        return this.setState({\r\n            currentNote: this.props.Notes[0]\r\n        })\r\n    }\r\n\r\n\r\n    getFirst(arr = this.props.Notes) {\r\n        if (!arr.length) return EmptyNote;\r\n\r\n        return arr[0]\r\n    }\r\n\r\n    renderNotesList() {\r\n        const { classes, Notes } = this.props;\r\n\r\n        if (!Notes || !Notes.length) return null;\r\n\r\n        return (\r\n            <Paper elevation={5} className={classes.notesList}>\r\n                <List component=\"nav\" dense>\r\n                    {\r\n                        Notes.map((note, index) => {\r\n                            return (\r\n                                <Zoom in={true}\r\n                                    key={note.ID}\r\n                                    style={{ transitionDelay: index * 100 }}\r\n                                >\r\n                                    <div>\r\n                                        <ListItem\r\n                                            dense\r\n                                            button\r\n                                            onClick={() => {\r\n                                                this.setState({\r\n                                                    currentNote: _.find(this.props.Notes, { ID: note.ID })\r\n                                                })\r\n                                            }}\r\n                                        >\r\n                                            <Avatar\r\n                                                style={{\r\n                                                    backgroundColor: note.Color,\r\n                                                    marginRight: 10,\r\n                                                }}\r\n                                            >\r\n                                                {note.Title[0]}\r\n                                            </Avatar>\r\n                                            <ListItemText primary={note.Title} />\r\n                                        </ListItem>\r\n                                        {\r\n                                            !(this.props.Notes.length - 1 === index)\r\n                                                ? <Divider variant=\"inset\" />\r\n                                                : null\r\n                                        }\r\n                                    </div>\r\n                                </Zoom>\r\n                            );\r\n                        })\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new NOTE\">\r\n                <Zoom in={true}>\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        style={{ marginRight: '10px' }}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                isNew: true,\r\n                                currentNote: {\r\n                                    ID: null,\r\n                                    Title: \"\",\r\n                                    Content: \"\",\r\n                                    Color: \"#0d47a1\",\r\n                                    Date: new Date()\r\n                                }\r\n                            })\r\n                        }}>\r\n                        <i className=\"material-icons\">add_circle</i>\r\n                    </Fab>\r\n                </Zoom>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    handleCancel() {\r\n        this.setState({\r\n            isNew: false,\r\n            currentNote: this.getFirst()\r\n        })\r\n    }\r\n\r\n    changeCurrentOnAdd(ID) {\r\n        this.setState({\r\n            isNew: false,\r\n        })\r\n    }\r\n\r\n    getNote() {\r\n        return {\r\n            ID: null,\r\n            Title: \"\",\r\n            Content: \"\",\r\n            Color: \"#0d47a1\",\r\n            Date: new Date(),\r\n            ...(this.state.isNew ? { ID: null } : _.find(this.props.Notes, { ID: this.state.currentID }))\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid\r\n                    container\r\n                    spacing={10}\r\n                    className={\"\"}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    style={{ marginTop: 50 }}\r\n                >\r\n                    {this.renderFabButton()}\r\n                    {this.renderNotesList()}\r\n                    <Zoom in={true} style={{ transitionDelay: 500 }}>\r\n                        <NotesView\r\n                            Note={this.state.currentNote}\r\n                            handleCancel={this.handleCancel}\r\n                            isNew={this.state.isNew}\r\n                            changeCurrentOnAdd={this.changeCurrentOnAdd}\r\n                        />\r\n                    </Zoom>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Notes } = state;\r\n\r\n        return {\r\n            Notes,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Notes);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport { CirclePicker } from 'react-color';\r\nimport darkColors from \"../../Data/Settings/darkPickerColors\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nclass CounterView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { new_counter, delete_counter, edit_counter } = this.props;\r\n        this.new_counter = new_counter;\r\n        this.delete_counter = delete_counter;\r\n        this.edit_counter = edit_counter;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            Counter: {\r\n                ID: null,\r\n                Title: \"\",\r\n                Value: 0,\r\n                Date: new Date(),\r\n                Color: \"#0d47a1\",\r\n                Goal: 0,\r\n                ...this.props.Counter\r\n            }\r\n        }\r\n    }\r\n\r\n    isEditing() {\r\n        return this.state.Counter.ID ? true : false;\r\n    }\r\n\r\n    handleChange(label, value) {\r\n        this.setState({\r\n            Counter: {\r\n                ...this.state.Counter,\r\n                [label]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.handleClose()\r\n        this.delete_counter(this.state.Counter)\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.isEditing()) {\r\n            this.edit_counter(this.state.Counter)\r\n        } else {\r\n            var ID = Math.floor(Math.random() * 1000)\r\n            this.new_counter({\r\n                ...this.state.Counter,\r\n                ID\r\n            });\r\n        }\r\n\r\n        this.props.handleClose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {\r\n                        this.isEditing()\r\n                            ? \"Edit counter\"\r\n                            : \"Add new counter\"\r\n                    }\r\n                    {\r\n                        this.isEditing()\r\n                        && <Tooltip TransitionComponent={Zoom} title=\"DELETE COUNTER\">\r\n                            <IconButton\r\n                                key=\"delete\"\r\n                                aria-label=\"Delete\"\r\n                                color=\"inherit\"\r\n                                onClick={this.handleDelete}\r\n                            >\r\n                                <i className=\"material-icons\">delete_forever</i>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    }\r\n                </DialogTitle>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <DialogContent>\r\n                        <FormControl>\r\n                            <TextField\r\n                                required\r\n                                autoFocus\r\n                                label=\"Name your counter\"\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Title}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Title\", e.target.value)\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">\r\n                                {\r\n                                    this.isEditing()\r\n                                        ? \"Value\"\r\n                                        : \"Starting value\"\r\n                                }\r\n                            </InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Value}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Value\", parseInt(e.target.value, 10))\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"lis\">Counter goal</InputLabel>\r\n                            <Input\r\n                                autoFocus\r\n                                id=\"list\"\r\n                                value={this.state.Counter.Goal}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(\"Goal\", parseInt(e.target.value, 10))\r\n                                }} />\r\n                        </FormControl>\r\n                        <br />\r\n                        <br />\r\n                        <FormControl>\r\n                            <CirclePicker\r\n                                color={this.state.Counter.Color}\r\n                                width=\"180px\"\r\n                                colors={darkColors}\r\n                                circleSpacing={17}\r\n                                onChange={(value) => {\r\n                                    this.handleChange(\"Color\", value.hex)\r\n                                }}\r\n                            />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.handleClose} color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(CounterView);","import React, { Component } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport CounterView from \"./CounterView\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as CountersActions from \"../../Actions/CountersActions\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst MainActions = {\r\n    ...CountersActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: '20px',\r\n        borderRadius: '100px',\r\n        position: 'relative',\r\n        color: \"#FFFFFF\"\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n\r\n    white: {\r\n        color: \"#fff\"\r\n    },\r\n\r\n    CardContent: {\r\n        display: 'inline-block',\r\n    },\r\n\r\n    title: {\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        display: \"inline-block\",\r\n        marginRight: \"8px\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    badge: {\r\n        top: -2,\r\n        right: -20,\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    leftDiv: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        left: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        margin: \"1px\",\r\n        paddingRight: \"5px\",\r\n        borderRight: \"1px solid darkgrey\",\r\n        verticalAlign: \"center\"\r\n    },\r\n\r\n    rightDiv: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        right: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        margin: \"1px\",\r\n        paddingLeft: \"5px\",\r\n        borderLeft: \"1px solid grey\"\r\n    },\r\n\r\n    minusButton: {\r\n        margin: \"1px\"\r\n    },\r\n\r\n    bar: {\r\n        position: 'absolute',\r\n        bottom: \"0\",\r\n        right: \"0\",\r\n        left: \"0\",\r\n    },\r\n\r\n    completedProgress: {\r\n        backgroundColor: '#76ff03',\r\n    },\r\n\r\n    uncompletedProgress: {\r\n        backgroundColor: '#f50057',\r\n    },\r\n});\r\n\r\nclass Counters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.counterModal = this.counterModal.bind(this);\r\n        this.exitModals = this.exitModals.bind(this);\r\n\r\n        const { increase, decrease } = this.props;\r\n        this.increase = increase;\r\n        this.decrease = decrease;\r\n\r\n        this.state = {\r\n            showEditModal: false,\r\n            showNewCounterPopup: false,\r\n            CounterToEdit: {}\r\n        }\r\n    }\r\n\r\n    counterModal(Counter) {\r\n        this.setState({\r\n            showEditModal: true,\r\n            CounterToEdit: { ...Counter }\r\n        })\r\n    }\r\n\r\n    exitModals() {\r\n        this.setState({\r\n            showEditModal: false,\r\n            showNewCounterPopup: false\r\n        })\r\n    }\r\n\r\n    renderProgress(Counter) {\r\n        if (!Counter.Goal) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <LinearProgress\r\n                color={\r\n                    this.progress(Counter) === 100\r\n                        ? \"primary\"\r\n                        : \"secondary\"\r\n                }\r\n                variant=\"determinate\"\r\n                value={this.progress(Counter)}\r\n                className={classes.bar}\r\n            />\r\n        )\r\n    }\r\n\r\n    progress(Counter) {\r\n        if (Counter.Value >= Counter.Goal) return 100;\r\n\r\n        return ((100 * Counter.Value) / Counter.Goal);\r\n    }\r\n\r\n    renderCounters() {\r\n        if (!this.props.Counters || !this.props.Counters.length) return null;\r\n\r\n        const { classes } = this.props;\r\n\r\n        return this.props.Counters.map((Counter, index) => {\r\n            return (\r\n                <Slide\r\n                    direction=\"up\"\r\n                    in={true}\r\n                    key={Counter.ID}\r\n                    style={{transitionDelay: 100*index}}\r\n                    mountOnEnter\r\n                    unmountOnExit\r\n                >\r\n                    <Card\r\n                        className={classes.card}\r\n                        raised\r\n                        style={{ backgroundColor: Counter.Color }}\r\n                    >\r\n                        <CardContent\r\n                            className={classes.CardContent}\r\n                            onClick={() => this.counterModal(Counter)}\r\n                        >\r\n                            <Badge\r\n                                badgeContent={Counter.Value}\r\n                                color=\"secondary\"\r\n                                classes={{ badge: classes.badge }}\r\n                            >\r\n                                <Typography className={classes.title}>\r\n                                    {Counter.Title}\r\n                                </Typography>\r\n                            </Badge>\r\n                        </CardContent>\r\n                        <div className={classes.leftDiv}>\r\n                            <IconButton\r\n                                key=\"close\"\r\n                                aria-label=\"Close\"\r\n                                color=\"inherit\"\r\n                                className={classes.minusButton}\r\n                                onClick={() => { this.decrease(Counter.ID) }}\r\n                            >\r\n                                <i className=\"material-icons\">remove_circle_outline</i>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className={classes.rightDiv}>\r\n                            <IconButton\r\n                                key=\"close\"\r\n                                aria-label=\"Close\"\r\n                                color=\"inherit\"\r\n                                onClick={() => { this.increase(Counter.ID) }}\r\n                            >\r\n                                <i className=\"material-icons\">add_circle_outline</i>\r\n                            </IconButton>\r\n                        </div>\r\n                        {this.renderProgress(Counter)}\r\n                    </Card>\r\n                </Slide>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new COUNTER\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            showNewCounterPopup: true\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{marginRight: \"10px\"}}>add_circle</i>\r\n                    New Counter\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    renderNewCounterModal() {\r\n        return this.state.showNewCounterPopup && <CounterView\r\n            open={this.state.showNewCounterPopup}\r\n            handleClose={this.exitModals}\r\n        />\r\n    }\r\n\r\n    renderEditCounterModal() {\r\n        return this.state.showEditModal && <CounterView\r\n            open={this.state.showEditModal}\r\n            Counter={this.state.CounterToEdit}\r\n            handleClose={this.exitModals}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderCounters()}\r\n                {this.renderFabButton()}\r\n                {this.renderNewCounterModal()}\r\n                {this.renderEditCounterModal()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Counters } = state;\r\n\r\n        return {\r\n            Counters,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Counters);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(2),\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n    },\r\n\r\n    convertDiv: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        width: 250,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n\r\n    menu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass Convert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            input: \"\",\r\n            convertorID: 2,\r\n            output: \"\",\r\n            convertors: [\r\n                {\r\n                    ID: 0,\r\n                    Label: \"UPPERCASE\"\r\n                },\r\n                {\r\n                    ID: 1,\r\n                    Label: \"lowercase\"\r\n                },\r\n                {\r\n                    ID: 2,\r\n                    Label: \"Reverse\"\r\n                },\r\n                {\r\n                    ID: 3,\r\n                    Label: \"Morse code\"\r\n                },\r\n                {\r\n                    ID: 4,\r\n                    Label: \"ROT13\"\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange(event, name) {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        }, () => {\r\n            this.setState({\r\n                output: this.Convert()\r\n            })\r\n        });\r\n    };\r\n\r\n    Convert() {\r\n        const { input } = this.state;\r\n\r\n        switch (this.state.convertorID) {\r\n            case 0: return input.toUpperCase();\r\n            case 1: return input.toLowerCase();\r\n            case 2: return input.split(\"\").reverse().join(\"\");\r\n            case 3: return this.Morse(input);\r\n            case 4: return this.ROT13(input);\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    ROT13(str) {\r\n        var input = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n        var output = 'NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm';\r\n        var index = x => input.indexOf(x);\r\n        var translate = x => index(x) > -1 ? output[index(x)] : x;\r\n        return str.split('').map(translate).join('');\r\n    }\r\n\r\n    Morse(input) {\r\n        var letters = [' ', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\r\n        var morseLetters = [\"\\xa0\\xa0\\xa0\\xa0\", \". ___\", \"___ . . .\", \"___ . ___ .\", \"___ . .\", \".\", \". . ___ .\", \"___ ___ .\", \". . . .\", \". .\", \". ___ ___ ___\", \"___ . ___\", \". ___ . .\", \"___ ___\", \"___ .\", \"___ ___ ___\", \". ___ ___ .\", \"___ ___ . ___\", \". ___ .\", \". . .\", \"_\", \". . ___\", \". . . ___\", \". ___ ___\", \"___ . . ___\", \"___ . ___ ___\", \"___ ___ . .\", \". ___ ___ ___ ___\", \". . ___ ___ ___\", \". . . ___ ___\", \". . . . ___\", \". . . . .\", \"___ . . . .\", \"___ ___ . . .\", \"___ ___ ___ . .\", \"___ ___ ___ ___ .\", \"___ ___ ___ ___ ___\"];\r\n\r\n        var newText = \"\";\r\n\r\n        for (var i = 0; i < input.length; i++) {\r\n            for (var j = 0; j < 37; j++) {\r\n                if (input[i].toLowerCase() === letters[j]) {\r\n                    newText += morseLetters[j];\r\n                    newText += \"\\xa0\\xa0\\xa0\";\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return newText;\r\n    }\r\n\r\n    renderInputCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.root} elevation={10}>\r\n            <TextField\r\n                id=\"multiline-flexible\"\r\n                label=\"Input\"\r\n                multiline\r\n                fullWidth\r\n                rows=\"4\"\r\n                rowsMax=\"4\"\r\n                value={this.state.input}\r\n                onChange={(e) => this.handleChange(e, 'input')}\r\n                margin=\"normal\"\r\n            />\r\n        </Card>\r\n    }\r\n\r\n    renderConvertTypeCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.convertDiv} elevation={2}>\r\n            <TextField\r\n                id=\"select-convertor\"\r\n                select\r\n                value={this.state.convertorID}\r\n                onChange={(e) => this.handleChange(e, 'convertorID')}\r\n                SelectProps={{\r\n                    MenuProps: {\r\n                        className: classes.menu,\r\n                    },\r\n                }}\r\n                helperText=\"Select convert method\"\r\n                margin=\"normal\"\r\n            >\r\n                {this.state.convertors.map(option => (\r\n                    <MenuItem key={option.ID} value={option.ID}>\r\n                        {option.Label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </Card>\r\n    }\r\n\r\n    renderOutputCard() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.root} elevation={10}>\r\n            <TextField\r\n                id=\"multiline-flexible\"\r\n                label=\"Output\"\r\n                multiline\r\n                fullWidth\r\n                rows=\"4\"\r\n                rowsMax=\"4\"\r\n                value={this.state.output}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n            />\r\n        </Card>\r\n    }\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderInputCard()}\r\n                {this.renderArrowDown()}\r\n                {this.renderConvertTypeCard()}\r\n                {this.renderArrowDown()}\r\n                {this.renderOutputCard()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Convert);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport Success from '../../../Components/SnackBars/SnackSuccess';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: 10,\r\n        position: 'relative',\r\n    },\r\n    copyButton: {\r\n        display: 'inline-block',\r\n        paddingLeft: \"5px\",\r\n        position: 'absolute',\r\n        right: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        verticalAlign: \"10px\"\r\n    },\r\n    text: {\r\n        display: \"inline-block\"\r\n    },\r\n    decorationsWrapper: {\r\n        maxHeight: \"25%\",\r\n        overflowY: \"auto\",\r\n    }\r\n});\r\n\r\nclass Decorate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSBClose = this.handleSBClose.bind(this);\r\n\r\n        this.state = {\r\n            text: \"\",\r\n            snackBarSuccess: false\r\n        }\r\n\r\n        this.Decorations = [\r\n            {\r\n                left: \"▁ ▂ ▄ ▅ ▆ ▇ █ [\",\r\n                right: \"] █ ▇ ▆ ▅ ▄ ▂ ▁\",\r\n            },\r\n            {\r\n                left: \"•´¯`•. [\",\r\n                right: \"] .•´¯`•\",\r\n            },\r\n            {\r\n                left: \"(-_-) [\",\r\n                right: \"] (-_-)\",\r\n            },\r\n            {\r\n                left: \"▀▄▀▄▀▄ [\",\r\n                right: \"] ▄▀▄▀▄▀\",\r\n            },\r\n            {\r\n                left: \"▌│█║▌║▌║ [\",\r\n                right: \"] ║▌║▌║█│▌\",\r\n            },\r\n            {\r\n                left: \"๑۞๑,¸¸,ø¤º°`°๑۩ [\",\r\n                right: \"] ๑۩ ,¸¸,ø¤º°`°๑۞๑\",\r\n            },\r\n            {\r\n                left: \"↦↦↦↦↦ [\",\r\n                right: \"] ↤↤↤↤↤\",\r\n            },\r\n            {\r\n                left: \"░▒▓█ [\",\r\n                right: \"] █▓▒░\",\r\n            },\r\n            {\r\n                left: \"➶➶➶➶➶ [\",\r\n                right: \"] ➷➷➷➷➷\",\r\n            },\r\n            {\r\n                left: \"★彡 [\",\r\n                right: \"] 彡★\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    handleChange(event, name) {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    copyToClipboard(text) {\r\n        var data = new DataTransfer();\r\n        data.items.add(\"text/plain\", text);\r\n        navigator.clipboard.writeText(text);\r\n        this.setState({\r\n            snackBarSuccess: true\r\n        });\r\n    }\r\n\r\n    renderDecorations() {\r\n        const { classes } = this.props;\r\n\r\n        return <div className={classes.decorationsWrapper}>\r\n            {\r\n                this.Decorations.map((item, index) => {\r\n                    var textToDisplay = `${item.left} ${this.state.text} ${item.right}`;\r\n                    return <Card className={classes.root} elevation={1} key={index}>\r\n                        <Typography component=\"p\" className={classes.text}>\r\n                            {\r\n                                textToDisplay\r\n                            }\r\n                        </Typography>\r\n                        <div className={classes.copyButton}>\r\n                            <Tooltip TransitionComponent={Zoom} title=\"Copy to clipboard\">\r\n                                <IconButton color=\"secondary\" aria-label=\"Copy\" onClick={() => {\r\n                                    this.copyToClipboard(textToDisplay)\r\n                                }}>\r\n                                    {\r\n                                        <i className=\"material-icons\">\r\n                                            send\r\n                                        </i>\r\n                                    }\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Card>\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n\r\n    handleSBClose() {\r\n        this.setState({\r\n            snackBarSuccess: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Card className={classes.root} elevation={10}>\r\n                    <Typography component=\"p\">\r\n                        You can use this to decorate your string with additional characters.\r\n                    </Typography>\r\n                    <TextField\r\n                        id=\"text\"\r\n                        label=\"Text\"\r\n                        className={classes.textField}\r\n                        value={this.state.text}\r\n                        onChange={(e) => this.handleChange(e, 'text')}\r\n                        margin=\"normal\"\r\n                        inputProps={{\r\n                            autoComplete: \"off\"\r\n                        }}\r\n                    />\r\n                </Card>\r\n                {this.renderDecorations()}\r\n                <Success\r\n                    open={this.state.snackBarSuccess}\r\n                    handleClose={this.handleSBClose}\r\n                    text=\"Copied to clipboard!\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Decorate);","import React, { Component } from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n/* myComponents */\r\nimport Convert from \"./Components/Convert\";\r\nimport Decorate from \"./Components/Decorate\";\r\n\r\nclass String extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            current: 0\r\n        }\r\n    }\r\n\r\n    handleChange(e, value) {\r\n        this.setState({\r\n            current: value\r\n        })\r\n    }\r\n\r\n    renderTabs() {\r\n        return (\r\n            <Paper square style={{ width: 500, marginLeft: \"auto\", marginRight: \"auto\", marginBottom:\"20px\" }}>\r\n                <Tabs\r\n                    value={this.state.current}\r\n                    onChange={this.handleChange}\r\n                    variant=\"fullWidth\"\r\n                    indicatorColor=\"secondary\"\r\n                    textColor=\"secondary\"\r\n                >\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">autorenew</i>\r\n                        }\r\n                        label=\"CONVERT\"\r\n                    />\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">text_format</i>\r\n                        }\r\n                        label=\"DECORATE\"\r\n                    />\r\n                    <Tab\r\n                        icon={\r\n                            <i className=\"material-icons\">text_fields</i>\r\n                        }\r\n                        label=\"STYLE\"\r\n                        disabled\r\n                    />\r\n                </Tabs>\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n    renderTabContent() {\r\n        switch(this.state.current) {\r\n            case 0: return <Convert/>;\r\n            case 1: return <Decorate/>;\r\n            default: return <Convert/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderTabs()}\r\n                {this.renderTabContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default String;","export function rnd_num(min, max) {\r\n    min = parseInt(min, 10);\r\n    max = parseInt(max, 10);\r\n    if (!(max > min)) return;\r\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n};\r\n\r\nexport function rnd_color() {\r\n    return \"rgb(\" + rnd_num(0, 255) + \", \" + rnd_num(0, 255) + \", \" + rnd_num(0, 255) + \")\";\r\n};\r\n\r\nexport default {\r\n    rnd_num,\r\n    rnd_color\r\n};","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showNumbers: {\r\n        width: \"auto\",\r\n        maxWidth: 700,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    textField1: {\r\n        width: \"145px\",\r\n        marginRight: \"10px\"\r\n    },\r\n    textField2: {\r\n        width: \"145px\",\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass RndNumber extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Number: {\r\n                NumberOfIntegers: 10,\r\n                Min: 1,\r\n                Max: 10,\r\n                NumberOfColumns: 3,\r\n                Highlight: 2,\r\n                NumbersToShow: [\r\n                    []\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateNumbers()\r\n    }\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    handleNumberChange(e, label) {\r\n        var value = e.target.value;\r\n        this.setState({\r\n            Number: {\r\n                ...this.state.Number,\r\n                [label]: value\r\n            }\r\n        }, () => {\r\n            if (label === \"Highlight\") return;\r\n            if (value === \"\") return;\r\n            this.generateNumbers()\r\n        });\r\n    }\r\n\r\n    showNumbers() {\r\n        const state = this.state.Number;\r\n\r\n        return state.NumbersToShow.map((arr, i) => {\r\n            return (\r\n                <Fragment key={i}>\r\n                    <p>\r\n                        {\r\n                            arr.map((num, index) => {\r\n                                return <span\r\n                                    key={index}\r\n                                    style={\r\n                                        num === parseInt(state.Highlight, 10)\r\n                                            ? { color: \"red\" }\r\n                                            : {}\r\n                                    }\r\n                                >\r\n                                    {\r\n                                        index === arr.length - 1\r\n                                            ? num\r\n                                            : num + \", \"\r\n                                    }\r\n                                </span>;\r\n                            })\r\n                        }\r\n                    </p>\r\n                    {\r\n                        i === state.NumbersToShow.length - 1\r\n                            ? null\r\n                            : <Divider />\r\n                    }\r\n                </Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n    generateNumbers() {\r\n        const state = this.state.Number;\r\n\r\n        if (!state.NumberOfColumns) return;\r\n\r\n        var rows = parseInt(state.NumberOfColumns, 10) >= parseInt(state.NumberOfIntegers, 10)\r\n            ? state.NumberOfIntegers\r\n            : state.NumberOfColumns\r\n\r\n        var mainArr = [];\r\n        for (let i = 0; i < rows; i++) {\r\n            mainArr.push([])\r\n        }\r\n\r\n        var current = 0;\r\n        for (let n = 0; n < state.NumberOfIntegers; n++) {\r\n            mainArr[current].push(rnd_num(this.state.Number.Min, this.state.Number.Max))\r\n            current++\r\n            if (current === mainArr.length) {\r\n                current = 0;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            Number: {\r\n                ...this.state.Number,\r\n                NumbersToShow: [...mainArr]\r\n            }\r\n        })\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"RANDOMISE\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.generateNumbers()\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                        autorenew\r\n                    </i>\r\n                    RANDOMISE\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Card elevation={5} className={classes.content}>\r\n                    <TextField\r\n                        id=\"NumberOfIntegers\"\r\n                        defaultValue={this.state.Number.NumberOfIntegers}\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        label=\"Number of integers to generate\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"NumberOfIntegers\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"min\"\r\n                        defaultValue={this.state.Number.Min}\r\n                        className={classes.textField1}\r\n                        helperText=\"Minimum\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Min\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"max\"\r\n                        defaultValue={this.state.Number.Max}\r\n                        className={classes.textField2}\r\n                        helperText=\"Maximum\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Max\") }}\r\n                    />\r\n                    <TextField\r\n                        id=\"min\"\r\n                        defaultValue={this.state.Number.Highlight}\r\n                        onChange={(e) => { this.handleNumberChange(e, \"Highlight\") }}\r\n                        className={classes.textField1}\r\n                        helperText=\"Highlight number\"\r\n                        margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                        id=\"max\"\r\n                        defaultValue={this.state.Number.NumberOfColumns}\r\n                        className={classes.textField2}\r\n                        helperText=\"Rows\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => { this.handleNumberChange(e, \"NumberOfColumns\") }}\r\n                    />\r\n                </Card>\r\n                {this.renderArrowDown()}\r\n                <Card elevation={2} className={classes.showNumbers}>\r\n                    {this.showNumbers()}\r\n                </Card>\r\n                {this.renderFabButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RndNumber);","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { rnd_color } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    propsDiv: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showColor: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        minHeight: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        transitionDuration: \"0.4s\",\r\n        cursor: \"pointer\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n});\r\n\r\nclass RndColor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.changeColor = this.changeColor.bind(this);\r\n\r\n        this.state = {\r\n            Color: rnd_color()\r\n        }\r\n    }\r\n\r\n    changeColor() {\r\n        this.setState({\r\n            Color: rnd_color()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    aria-label=\"flip\"\r\n                    className={classes.button}\r\n                    onClick={() => this.changeColor()}\r\n                    color=\"secondary\"\r\n                >\r\n                    <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                        flip_to_front\r\n                    </i>\r\n                    New color\r\n        \t    </Fab>\r\n                <Card elevation={15} className={classes.showColor}>\r\n                    <div\r\n                        className={classes.showColor}\r\n                        style={{ backgroundColor: this.state.Color }}\r\n                        onClick={this.changeColor}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RndColor);","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    showCoin: {\r\n        borderRadius: \"100%\",\r\n        width: 300,\r\n        height: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"center\",\r\n        lineHeight: \"258px\",\r\n        transitionDuration: \"0.4s\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    progress: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    },\r\n});\r\n\r\nclass Coin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            Coin: {\r\n                Title: \"\",\r\n                progress: 0\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleFlip();\r\n    }\r\n    \r\n    progress = () => {\r\n        const { progress } = this.state.Coin;\r\n        this.setState({\r\n            Coin: {\r\n                ...this.state.Coin,\r\n                progress: progress + 1,\r\n                Title: \"\",\r\n            }\r\n        }, () => {\r\n            if (progress >= 100) {\r\n                clearInterval(this.timer);\r\n                this.setState({\r\n                    Coin: {\r\n                        ...this.state.Coin,\r\n                        Title: rnd_num(0, 1) === 0 ? \"TAILS\" : \"HEADS\",\r\n                        progress: 0\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    handleFlip() {\r\n        if (this.state.Coin.progress === 0) {\r\n            this.timer = setInterval(this.progress, 10);\r\n        } else {\r\n            clearInterval(this.timer);\r\n            this.setState({\r\n                Coin: {\r\n                    ...this.state.Coin,\r\n                    progress: 0\r\n                }\r\n            });\r\n            this.timer = setInterval(this.progress, 10);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return <Fragment>\r\n            <Fab\r\n                variant=\"extended\"\r\n                aria-label=\"flip\"\r\n                className={classes.button}\r\n                onClick={() => this.handleFlip()}\r\n                color=\"secondary\"\r\n            >\r\n                <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                    autorenew\r\n                </i>\r\n                Flip\r\n        \t</Fab>\r\n            <Card\r\n                elevation={15}\r\n                className={classes.showCoin}\r\n                color=\"primary\"\r\n                style={\r\n                    this.state.Coin.Title === \"HEADS\"\r\n                        ? { backgroundColor: \"black\", color: \"white\" }\r\n                        : { backgroundColor: \"white\", color: \"black\" }\r\n                }\r\n            >\r\n                {\r\n                    this.state.Coin.progress > 0\r\n                        ? <CircularProgress\r\n                            className={classes.progress}\r\n                            color=\"secondary\"\r\n                            variant=\"determinate\"\r\n                            size={60}\r\n                            value={this.state.Coin.progress}\r\n\r\n                        />\r\n                        : <h1>{this.state.Coin.Title}</h1>\r\n                }\r\n            </Card>\r\n        </Fragment>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Coin);","import React, { Component, Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { rnd_num } from \"../../../lib/Common\";\r\nimport { Fab } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n\r\n    diceSpan: {\r\n        margin: theme.spacing(2),\r\n        fontSize: \"32px\",\r\n        backgroundColor: \"black\",\r\n        color: \"white\"\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n    showDices: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    }\r\n});\r\n\r\nclass Dice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Dice: {\r\n                NumberOfDices: 6,\r\n                Dices: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateDices()\r\n    }\r\n\r\n\r\n    renderArrowDown() {\r\n        const { classes } = this.props;\r\n\r\n        return <Card className={classes.arrowDiv} elevation={0}>\r\n            <i className=\"material-icons\">\r\n                keyboard_arrow_down\r\n            </i>\r\n        </Card>\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fab\r\n                variant=\"extended\"\r\n                color=\"primary\"\r\n                className={classes.fab}\r\n                onClick={() => {\r\n                    this.generateDices()\r\n                }}>\r\n                <i className=\"material-icons\" style={{ marginRight: \"10px\" }}>\r\n                    border_outer\r\n                </i>\r\n                Roll\r\n            </Fab>\r\n        )\r\n    }\r\n\r\n    diceInner(dice) {\r\n        switch (dice) {\r\n            case 6: return \"https://png.icons8.com/material/50/000000/6.png\";\r\n            case 1: return \"https://png.icons8.com/material/50/000000/1.png\";\r\n            case 2: return \"https://png.icons8.com/material/50/000000/2.png\";\r\n            case 3: return \"https://png.icons8.com/material/50/000000/3.png\";\r\n            case 4: return \"https://png.icons8.com/material/50/000000/4.png\";\r\n            case 5: return \"https://png.icons8.com/material/50/000000/5.png\";\r\n            default: return;\r\n        }\r\n    }\r\n\r\n    generateDices() {\r\n        var arr = [];\r\n        for (let i = 0; i < this.state.Dice.NumberOfDices; i++) {\r\n            arr.push(rnd_num(1, 6));\r\n        }\r\n\r\n        this.setState({\r\n            Dice: {\r\n                ...this.state.Dice,\r\n                Dices: [...arr]\r\n            }\r\n        })\r\n    }\r\n\r\n    showDices() {\r\n        return this.state.Dice.Dices.map((dice, index) => {\r\n            return <img\r\n                alt=\"dice\"\r\n                className=\"diceSpan\"\r\n                src={this.diceInner(dice)}\r\n                key={index}\r\n            />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Card elevation={5} className={classes.content}>\r\n                    <TextField\r\n                        id=\"NumberOfDices\"\r\n                        defaultValue={this.state.Dice.NumberOfDices}\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        label=\"Number of dices to roll\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                Dice: {\r\n                                    ...this.state.Dice,\r\n                                    NumberOfDices: e.target.value\r\n                                }\r\n                            }, () => { this.generateDices() })\r\n                        }}\r\n                    />\r\n                </Card>\r\n                {this.renderArrowDown()}\r\n                <Card elevation={2} className={classes.showDices}>\r\n                    {this.showDices()}\r\n                </Card>\r\n                {this.renderFabButton()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Dice);","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport RndNumber from \"./Components/Rnd_number\";\r\nimport RndColor from './Components/Rnd_color';\r\nimport Coin from './Components/Coin';\r\nimport Dice from './Components/Dice';\r\n\r\nconst styles = theme => ({\r\n    menuCard: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        width: 500,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\"\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    arrowDiv: {\r\n        backgroundColor: \"transparent\",\r\n        width: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: 'relative',\r\n        marginBottom: 30,\r\n        marginTop: 30,\r\n    },\r\n    showCoin: {\r\n        borderRadius: \"100%\",\r\n        width: 300,\r\n        height: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"center\",\r\n        lineHeight: \"258px\",\r\n        transitionDuration: \"0.4s\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    progress: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    },\r\n\r\n    diceSpan: {\r\n        margin: theme.spacing(2),\r\n        fontSize: \"32px\",\r\n        backgroundColor: \"black\",\r\n        color: \"white\"\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n    showDices: {\r\n        width: \"auto\",\r\n        maxWidth: 400,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    }\r\n});\r\n\r\nclass Randomiser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleMenuClick = this.handleMenuClick.bind(this);\r\n\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            current: 0,\r\n        }\r\n    }\r\n\r\n    handleMenuClick(ID) {\r\n        this.setState({\r\n            current: ID\r\n        });\r\n    }\r\n\r\n    renderContent() {\r\n        switch (this.state.current) {\r\n            case 0: return <RndNumber />;\r\n            case 1: return <RndColor />;\r\n            case 2: return <Coin />;\r\n            case 3: return <Dice />;\r\n            default: return <RndNumber />;\r\n        }\r\n    }\r\n\r\n    renderChips() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.menuCard}>\r\n                    <Chip\r\n                        avatar={<Avatar>NU</Avatar>}\r\n                        label=\"Numbers\"\r\n                        color=\"primary\"\r\n                        variant={this.state.current === 0 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(0)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>CO</Avatar>}\r\n                        label=\"Color\"\r\n                        color=\"secondary\"\r\n                        variant={this.state.current === 1 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(1)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>CF</Avatar>}\r\n                        label=\"Coin flipper\"\r\n                        variant={this.state.current === 2 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(2)}\r\n                        className={classes.chip}\r\n                    />\r\n                    <Chip\r\n                        avatar={<Avatar>DR</Avatar>}\r\n                        label=\"Dice roller\"\r\n                        variant={this.state.current === 3 ? \"default\" : \"outlined\"}\r\n                        onClick={() => this.handleMenuClick(3)}\r\n                        className={classes.chip}\r\n                    />\r\n                </div>\r\n                {this.renderContent()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderChips()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRandomiser.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Randomiser);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    display: 'flex',\r\n    width: '300px',\r\n    margin: '10px',\r\n  },\r\n  avatar: {\r\n    width: 25,\r\n    height: 25,\r\n    marginRight: 4,\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    lineHeight: '25px',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 48,\r\n    width: 48,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  editIcon: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  deleteIcon: {\r\n    color: '',\r\n  },\r\n});\r\n\r\nfunction MediaControlCard(props) {\r\n  const { classes, theme } = props;\r\n\r\n  return (\r\n    <Card className={classes.card} elevation={10}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            style={{ backgroundColor: props.quiz.Color }}\r\n          >\r\n            {\r\n              props.quiz.Name[0]\r\n            }\r\n          </Avatar>\r\n          <h5 style={{ display: 'inline-block' }}>\r\n            {props.quiz.Name.slice(1)}\r\n          </h5>\r\n          <p variant=\"subtitle1\" color=\"textSecondary\">\r\n            {props.quiz.ShortDescription}\r\n          </p>\r\n        </CardContent>\r\n        <div className={classes.controls}>\r\n          <IconButton aria-label=\"Play\" onClick={() => {props.onPlay(props.quiz.ID)}}>\r\n            <PlayArrowIcon className={classes.playIcon} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Edit\">\r\n            <EditIcon className={classes.editIcon} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Delete\" onClick={() => props.onDelete(props.quiz.ID)}>\r\n            <DeleteIcon className={classes.deleteIcon} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMediaControlCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MediaControlCard);","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nclass Error extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.props.open}\r\n                autoHideDuration={this.props.autoHideDuration ? this.props.autoHideDuration : 3000}\r\n                onClose={this.props.handleClose}\r\n            >\r\n                <SnackbarContent\r\n                    className={classNames(classes.error)}\r\n                    aria-describedby=\"client-snackbar\"\r\n                    message={\r\n                        <span id=\"client-snackbar\" className={classes.message}>\r\n                            <i className={classNames(classes.icon, classes.iconVariant, \"material-icons\")}>\r\n                            error_outline\r\n                            </i>\r\n                            {this.props.text.length ? this.props.text : \"Wrong\"}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.props.handleClose}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                close\r\n                            </i>\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Error);","import React, { Component, Fragment } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass Summary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.showSummary}\r\n                onClose={this.props.handleSummaryClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">{\"Summary of -\" + this.props.QuizName + \"-\"}</DialogTitle>\r\n                <Divider variant=\"middle\" />\r\n                {\r\n                    this.props.results.map((r, index) => {\r\n                        return (\r\n                            <Fragment key={index}>\r\n                                <div style={{ padding: 12 }}>\r\n                                    <p style={{ display: 'inline' }}>\r\n                                        <b>\r\n                                            {\r\n                                                `#${index + 1}: ${r.QuestionText}`\r\n                                            }\r\n                                        </b>\r\n                                    </p>\r\n                                    <i\r\n                                        className=\"material-icons\"\r\n                                        style={\r\n                                            { \r\n                                                display: 'inline',\r\n                                                color: r.isCorrect ? 'green' : 'red',\r\n                                                marginLeft: 3\r\n                                         }\r\n                                        }>\r\n                                        {r.isCorrect ? 'done_all' : 'close'}\r\n                                    </i>\r\n                                    <p>Your answer: {r.UserAnswer}</p>\r\n                                    {\r\n                                        !r.isCorrect\r\n                                            ? <p>Correct answer: {r.CorrectAnswer}</p>\r\n                                            : null\r\n                                    }\r\n                                </div>\r\n\r\n                                <Divider variant=\"middle\" />\r\n                            </Fragment>\r\n                        )\r\n                    })\r\n                }\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={this.props.handleSummaryClose}\r\n                >\r\n                    Back to menu\r\n                </Button>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(() => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Summary);","export function delete_quiz(data) {\r\n    return {\r\n        type: 'DELETE_QUIZ',\r\n        data\r\n    };\r\n};\r\n\r\nexport function new_quiz(data) {\r\n    return {\r\n        type: 'NEW_QUIZ',\r\n        data\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    content: {\r\n        width: 300,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px 10px\",\r\n    },\r\n    showNumbers: {\r\n        width: \"auto\",\r\n        maxWidth: 700,\r\n        textAlign: \"justify\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        padding: \"10px 20px\",\r\n    },\r\n    textField1: {\r\n        width: \"145px\",\r\n        marginRight: \"10px\"\r\n    },\r\n    textField2: {\r\n        width: \"145px\",\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass EditQuiz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Quiz: {\r\n                ID: 0,\r\n                Name: '',\r\n                ShortDescription: '',\r\n                Color: '#000',\r\n                Tags: [],\r\n                Questions: [\r\n                    {\r\n                        ID: 0,\r\n                        Text: '',\r\n                        Answers: [\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: true\r\n                            },\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            CurrentID: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const ID = _.uniqueId();\r\n\r\n        this.setState({\r\n            Quiz: {\r\n                ID: _.uniqueId(),\r\n                Name: '',\r\n                ShortDescription: '',\r\n                Color: '#000',\r\n                Tags: [],\r\n                Questions: [\r\n                    {\r\n                        ID,\r\n                        Text: '',\r\n                        Answers: [\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: false\r\n                            },\r\n                            {\r\n                                Text: '',\r\n                                Correct: true\r\n                            },\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            CurrentID: ID,\r\n        })\r\n    }\r\n    \r\n\r\n    handleQuestionChange({ target: { value } }, ID) {\r\n        this.setState({\r\n            Quiz: {\r\n                ...this.state.Quiz,\r\n                Questions: [\r\n                    ...this.state.Quiz.Questions.map((Q) => {\r\n                        if(Q.ID !== ID) return Q;\r\n                        return {\r\n                            ...Q,\r\n                            Text: value\r\n                        }\r\n                    })\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    handleAnswerChange({ target: { value } }, index) {\r\n        const ID = this.state.CurrentID;\r\n\r\n        this.setState({\r\n            Quiz: {\r\n                ...this.state.Quiz,\r\n                Questions: [\r\n                    ...this.state.Quiz.Questions.map((Q) => {\r\n                        if(Q.ID !== ID) return Q;\r\n                        return {\r\n                            ...Q,\r\n                            Answers: [\r\n                                ..._.find(this.state.Quiz.Questions, {ID}).Answers.map((A, i) => {\r\n                                    if(i !== index) return A;\r\n                                    return {\r\n                                        ...A,\r\n                                        Text: value\r\n                                    }\r\n                                })\r\n                            ]\r\n                        }\r\n                    })\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    renderFields() {\r\n        const { classes } = this.props;\r\n        const { Questions } = this.state.Quiz;\r\n        const { CurrentID } = this.state;\r\n        const CurrentQuestion = _.find(Questions, { ID: CurrentID });\r\n        const { Answers } = CurrentQuestion;\r\n\r\n\r\n        return (\r\n            <Card elevation={5} className={classes.content}>\r\n                <TextField\r\n                    defaultValue={CurrentQuestion.Text}\r\n                    className={classes.textField}\r\n                    fullWidth\r\n                    label=\"Question\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleQuestionChange(e, CurrentID) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[0].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"First answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 0) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[1].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Second answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 1) }}\r\n                />\r\n                <TextField\r\n                    defaultValue={Answers[2].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Third answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 2) }}\r\n                />\r\n                <TextField\r\n                    id=\"min\"\r\n                    defaultValue={Answers[3].Text}\r\n                    className={classes.textField1}\r\n                    helperText=\"Fourth answer\"\r\n                    margin=\"normal\"\r\n                    onChange={(e) => { this.handleAnswerChange(e, 3) }}\r\n                />\r\n\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderFields()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(EditQuiz);","import React, { Component, Fragment } from 'react'\r\nimport QuizTile from './QuizTile';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nimport Success from '../../Components/SnackBars/SnackSuccess';\r\nimport Error from '../../Components/SnackBars/SnackError';\r\nimport Summary from './Summary';\r\n\r\nimport compose from 'recompose/compose';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as QuizActions from \"../../Actions/QuizActions\";\r\n\r\nimport EditQuiz from './EditQuiz';\r\n\r\nconst MainActions = {\r\n    ...QuizActions\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        maxWidth: '50%',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        marginBottom: 50,\r\n    },\r\n    Answers: {\r\n        cursor: 'pointer',\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass Quizes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPage: \"start\", // Think about it\r\n            toEdit: {},\r\n            toPlay: {},\r\n            shuffledQuestions: [],\r\n            nextQuestion: 0,\r\n            isFinished: false,\r\n            answerResults: [],\r\n            showSnackbar: false,\r\n            showDeleteSnackbar: false,\r\n            snackMessage: '',\r\n            snackType: '',\r\n            showSummary: false,\r\n            lastDeletedQuiz: {}\r\n        }\r\n\r\n        const { delete_quiz, new_quiz } = this.props;\r\n        this.delete_quiz = delete_quiz;\r\n        this.new_quiz = new_quiz;\r\n\r\n        this.handlePlay = this.handlePlay.bind(this);\r\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\r\n        this.handleSummaryClose = this.handleSummaryClose.bind(this);\r\n        this.handleDeleteQuiz = this.handleDeleteQuiz.bind(this);\r\n        this.handleUndoDelete = this.handleUndoDelete.bind(this);\r\n        //this.handleAnswer = this.handleAnswer.bind(this);\r\n    }\r\n\r\n    handleSummaryClose() {\r\n        this.setState({\r\n            showSummary: false,\r\n            toPlay: {},\r\n            shuffledQuestions: [],\r\n            nextQuestion: 0,\r\n            isFinished: true,\r\n            answerResults: [],\r\n        })\r\n    }\r\n\r\n    handleSnackbarClose() {\r\n        this.setState({\r\n            showSnackbar: false,\r\n            showDeleteSnackbar: false\r\n        })\r\n    }\r\n\r\n    getNextQuestion() {\r\n        return this.state.shuffledQuestions[this.state.nextQuestion];\r\n    }\r\n\r\n    returnShuffledQuiz(QuestionsArray) {\r\n        return _.shuffle(QuestionsArray.map((Question) => {\r\n            return {\r\n                ...Question,\r\n                Answers: _.shuffle(Question.Answers)\r\n            }\r\n        }))\r\n    }\r\n\r\n    handleDeleteQuiz(ID) {\r\n        this.delete_quiz({ ID });\r\n\r\n        this.setState({\r\n            lastDeletedQuiz: _.find(this.props.Quizes, {ID}),\r\n            showDeleteSnackbar: true,\r\n        })\r\n    }\r\n\r\n    handleUndoDelete() {\r\n        this.new_quiz(this.state.lastDeletedQuiz);\r\n\r\n        this.setState({\r\n            showDeleteSnackbar: false,\r\n        })\r\n    }\r\n\r\n    handlePlay(ID) {\r\n        const obj = _.find(this.props.Quizes, { ID: ID })\r\n\r\n        this.setState({\r\n            currentPage: \"QuizPlay\", // Think about it\r\n            toPlay: obj,\r\n            shuffledQuestions: this.returnShuffledQuiz(obj.Questions), // We randomise order of questions and answers\r\n            nextQuestion: 0,\r\n            isFinished: false,\r\n            answerResults: [],\r\n        })\r\n    }\r\n\r\n    renderDefaultQuizes() {\r\n        if (!this.props.Quizes || !this.props.Quizes.length) return null;\r\n\r\n        return (\r\n            <Grid container justify=\"center\" spacing={10}>\r\n                {\r\n                    this.props.Quizes.map((item) => {\r\n                        return (\r\n                            <Grid key={item.ID} item>\r\n                                <QuizTile\r\n                                    quiz={{ ...item }}\r\n                                    onPlay={this.handlePlay}\r\n                                    onDelete={this.handleDeleteQuiz}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    handleAnswer(Ans) {\r\n        this.setState({\r\n            showSnackbar: true,\r\n            answerResults: [\r\n                ...this.state.answerResults,\r\n                {\r\n                    QuestionText: this.state.shuffledQuestions[this.state.nextQuestion].Text,\r\n                    UserAnswer: Ans.Text,\r\n                    CorrectAnswer: _.find(this.state.shuffledQuestions[this.state.nextQuestion].Answers, { Correct: true }).Text,\r\n                    isCorrect: Ans.Correct,\r\n                }\r\n            ],\r\n            snackMessage: Ans.Correct ? 'Correct!' : 'Not correct!',\r\n            snackType: Ans.Correct ? 'Success' : 'Error'\r\n        }, () => {\r\n            if (this.state.nextQuestion + 2 > this.state.shuffledQuestions.length) {\r\n                this.setState({\r\n                    isFinished: true,\r\n                    showSummary: true,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    nextQuestion: this.state.nextQuestion + 1,\r\n\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    renderPage() {\r\n        const { classes } = this.props;\r\n\r\n        if(this.state.newQuiz) return <EditQuiz />;\r\n\r\n        if (!this.state.toPlay.ID) {\r\n            return (\r\n                <div style={{ width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                    {this.renderDefaultQuizes()}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const Q = this.getNextQuestion();\r\n        return (\r\n            <Fragment>\r\n                <Paper className={classes.root} elevation={5}>\r\n                    <h2>{Q.Text}</h2>\r\n                </Paper>\r\n                <Grid container justify=\"center\" spacing={10}>\r\n                    {\r\n                        Q.Answers.map((Ans, index) => {\r\n                            return (\r\n                                <Grid key={index} item>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className={classes.Answers}\r\n                                        onClick={() => this.handleAnswer(Ans)}\r\n                                    >\r\n                                        {\r\n                                            Ans.Text\r\n                                        }\r\n                                    </Button>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n\r\n    }\r\n\r\n    renderSnackBar() {\r\n        //const { classes } = this.props;\r\n\r\n        return this.state.snackType === \"Success\"\r\n            ? <Success\r\n                open={this.state.showSnackbar}\r\n                handleClose={this.handleSnackbarClose}\r\n                text={this.state.snackMessage}\r\n                autoHideDuration={1500}\r\n            />\r\n            : <Error\r\n                open={this.state.showSnackbar}\r\n                handleClose={this.handleSnackbarClose}\r\n                text={this.state.snackMessage}\r\n                autoHideDuration={1500}\r\n            />\r\n    }\r\n\r\n    renderUndoDeleteSnackbar() {\r\n        const { classes } = this.props; \r\n\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={this.state.showDeleteSnackbar}\r\n                autoHideDuration={6000}\r\n                onClose={this.handleSnackbarClose}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">Quiz deleted</span>}\r\n                action={[\r\n                    <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleUndoDelete}>\r\n                        UNDO\r\n                    </Button>,\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={classes.close}\r\n                        onClick={this.handleSnackbarClose}\r\n                    >\r\n                        <i className=\"material-icons\">close</i>\r\n                    </IconButton>,\r\n                ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderSummary() {\r\n        if (!this.state.isFinished) return null;\r\n\r\n        return <Summary\r\n            showSummary={this.state.showSummary}\r\n            handleSummaryClose={this.handleSummaryClose}\r\n            QuizName={this.state.toPlay.Name}\r\n            results={this.state.answerResults}\r\n        />\r\n    }\r\n\r\n    renderFabButton() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Tooltip TransitionComponent={Zoom} title=\"Add new QUIZ\">\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    className={classes.fab}\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            newQuiz: true\r\n                        })\r\n                    }}>\r\n                    <i className=\"material-icons\" style={{marginRight: \"10px\"}}>add_circle</i>\r\n                    New Quiz\r\n                </Fab>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderPage()}\r\n                {this.renderSnackBar()}\r\n                {this.renderSummary()}\r\n                {this.renderUndoDeleteSnackbar()}\r\n                {this.renderFabButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(state => {\r\n        const { Quizes } = state;\r\n\r\n        return {\r\n            Quizes,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Quizes);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 275,\r\n        maxWidth: 400,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nconst Facts = (props) => {\r\n    const classes = useStyles();\r\n    const [fact, setFact] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch('http://numbersapi.com/random/year')\r\n            .then((response) => response.text())\r\n            .then(data => {\r\n                setFact(data)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    {fact}\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(state => {\r\n    return {};\r\n},\r\n    dispatch => {\r\n        return bindActionCreators({}, dispatch);\r\n    })(Facts);","import React, { Component } from 'react';\r\nimport WelcomePage from \"./HomePage/WelcomePage\";\r\nimport Calculator from \"./Calculator\";\r\n//import ToDo from \"./ToDo\";\r\nimport UserPage from \"./UserPage\";\r\nimport Time from \"./Time\";\r\nimport Arrays from \"./Arrays\";\r\nimport Uno from \"./Uno\";\r\nimport ToDo from './ToDo';\r\nimport Notes from './Notes';\r\nimport Counters from './Counters';\r\nimport String from './String';\r\nimport Randomiser from './Randomiser';\r\nimport Quizes from './Quizes';\r\nimport Facts from './Facts';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport * as GeneralActions from \".././Actions/GeneralActions\";\r\n\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n}\r\n\r\nclass RenderPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { page_change } = this.props\r\n        this.page_change = page_change\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.General.currentPage) {\r\n            case (\"WelcomePage\"):\r\n                return (<WelcomePage />);\r\n            case (\"UserPage\"):\r\n                return (<UserPage />);\r\n            case (\"Calculator\"):\r\n                return (<Calculator />);\r\n            case (\"ToDo\"):\r\n                return (<ToDo />);\r\n            case (\"Time\"):\r\n                return (<Time />);\r\n            case (\"Arrays\"):\r\n                return (<Arrays />);\r\n            case (\"Facts\"):\r\n                return (<Facts />);\r\n            case (\"Uno\"):\r\n                return (<Uno />);\r\n            case (\"Notes\"):\r\n                return (<Notes />);\r\n            case (\"Counters\"):\r\n                return (<Counters />);\r\n            case (\"String\"):\r\n                return (<String />);\r\n            case (\"Randomiser\"):\r\n                return (<Randomiser />);\r\n            case (\"Quizes\"):\r\n                return (<Quizes />);\r\n            default:\r\n                return (<WelcomePage />);\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(state => {\r\n    const { General } = state;\r\n\r\n    return {\r\n        General,\r\n    };\r\n},\r\n    dispatch => {\r\n        return bindActionCreators(MainActions, dispatch);\r\n    })(RenderPage);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Others\r\nimport ExtendedHeader from '.././Others/Header';\r\nimport Profilna from \"../Pictures/avatar.jpg\";\r\n// Pages\r\nimport RenderPage from \".././Content/index\";\r\n\r\nimport * as GeneralActions from \".././Actions/GeneralActions\";\r\n\r\nconst MainActions = {\r\n    ...GeneralActions\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        zIndex: 4,\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        display: 'flex',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        position: 'flex',\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        dislay: \"block\",\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        minHeight: \"100vh\",\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n    },\r\n    Title: {\r\n        cursor: 'pointer',\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        cursor: \"pointer\",\r\n    },\r\n    bigAvatar: {\r\n        width: 60,\r\n        height: 60,\r\n    },\r\n});\r\n\r\nclass Shell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { page_change, toggle_drawer, toggle_header } = this.props;\r\n        this.page_change = page_change;\r\n        this.toggle_drawer = toggle_drawer;\r\n        this.toggle_header = toggle_header;\r\n    }\r\n\r\n    renderIcon(theme) {\r\n        return (\r\n            <i className=\"material-icons\">\r\n                {theme.direction === 'rtl' ? \"keyboard_arrow_right\" : \"keyboard_arrow_left\"}\r\n            </i>\r\n        )\r\n    }\r\n\r\n    renderMenuItem(page_change, icon, text) {\r\n        return (\r\n            <ListItem\r\n                onClick={() => {\r\n                    this.page_change(page_change)\r\n                }}\r\n                button\r\n            >\r\n                <ListItemIcon>\r\n                    <i className=\"material-icons\">\r\n                        {icon}\r\n                    </i>\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n            </ListItem>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes, theme } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar\r\n                    position=\"absolute\"\r\n                    className={classNames(classes.appBar, this.props.General.isDrawerOpen && classes.appBarShift)}\r\n                >\r\n                    <Toolbar disableGutters={!this.props.General.isDrawerOpen}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"Open drawer\"\r\n                            onClick={() => this.toggle_drawer()}\r\n                            className={classNames(classes.menuButton, this.props.General.isDrawerOpen && classes.hide)}\r\n                        >\r\n                            <i className=\"material-icons\">\r\n                                menu\r\n                            </i>\r\n                        </IconButton>\r\n\r\n                        <Typography className={classNames(classes.Title, classes.grow)} onClick={() => this.toggle_header()} variant=\"h5\" color=\"inherit\" noWrap>\r\n                            Project // NEON /\r\n                        </Typography>\r\n                        <IconButton onClick={() => this.toggle_header()}>\r\n                            {\r\n                                <i className=\"material-icons\" style={{ color: \"rgb(255, 255, 255)\" }}>\r\n                                    {\r\n                                        this.props.General.isHeaderOpen\r\n                                            ? \"keyboard_arrow_up\"\r\n                                            : \"keyboard_arrow_down\"\r\n                                    }\r\n                                </i>\r\n                            }\r\n                        </IconButton>\r\n\r\n                        <Avatar\r\n                            className={classes.avatar}\r\n                            onClick={() => {\r\n                                window.open('https://mikacinc.github.io/Portfolio/', '_blank');\r\n                            }}\r\n                        >\r\n                            <img\r\n                                alt=\"Mihajlo Marjanović\"\r\n                                src={Profilna}\r\n                            />\r\n                        </Avatar>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classNames(classes.drawerPaper, !this.props.General.isDrawerOpen && classes.drawerPaperClose),\r\n                    }}\r\n                    open={this.props.General.isDrawerOpen}\r\n                >\r\n                    <div className={classes.toolbar}>\r\n                        <IconButton onClick={() => this.toggle_drawer()}>\r\n                            {this.renderIcon(theme)}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <MenuList>\r\n                        {\r\n                            this.renderMenuItem(\"WelcomePage\", \"home\", \"Home\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"UserPage\", \"settings\", \"Settings\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"ToDo\", \"done_all\", \"To-Do list\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Notes\", \"notes\", \"Notes\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Counters\", \"add_circle_outline\", \"Counters\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Time\", \"access_time\", \"Time\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Calculator\", \"dialpad\", \"Calculator\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"String\", \"message\", \"String\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Randomiser\", \"gesture\", \"Randomiser\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Arrays\", \"linear_scale\", \"Arrays\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Facts\", \"filter_none\", \"Fun Facts\")\r\n                        }\r\n                        {\r\n                            //this.renderMenuItem(\"Uno\", \"sim_card\", \"Uno\")\r\n                        }\r\n                        <Divider />\r\n                        {\r\n                            this.renderMenuItem(\"Games\", \"videogame_asset\", \"Games\")\r\n                        }\r\n                        {\r\n                            this.renderMenuItem(\"Quizes\", \"widgets\", \"Quizes\")\r\n                        }\r\n                    </MenuList>\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    {this.props.General.isHeaderOpen ? <ExtendedHeader /> : null}\r\n                    <br />\r\n                    <Zoom in={true} style={{ transitionDelay: 100 }}>\r\n                        <RenderPage />\r\n                    </Zoom>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nShell.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    connect(state => {\r\n        const { General } = state;\r\n\r\n        return {\r\n            General,\r\n        };\r\n    },\r\n        dispatch => {\r\n            return bindActionCreators(MainActions, dispatch);\r\n        })\r\n)(Shell);","import React, { Component } from 'react';\r\nimport './App.css';\r\n// Material UI\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\n//import RaisedButton from 'material-ui/RaisedButton';\r\n//import Avatar from 'material-ui/Avatar';\r\n// Dark theme\r\n/*\r\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\r\nimport darkBaseTheme from 'material-ui/styles/baseThemes/darkBaseTheme';\r\n*/\r\n// Shell\r\nimport Shell from './Shell/Shell'\r\n\r\nimport purple from '@material-ui/core/colors/purple';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass App extends Component {\r\n\r\n  getTheme() {\r\n    return createMuiTheme({...this.props.General.theme});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={this.getTheme()}>\r\n        <div className=\"App\">\r\n          <Shell />\r\n        </div>\r\n      </ThemeProvider >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  const { General } = state;\r\n\r\n  return {\r\n      General,\r\n  };\r\n},\r\n  dispatch => {\r\n      return bindActionCreators({}, dispatch);\r\n  })(App);","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","var General = {\r\n    currentPage: \"WelcomePage\",\r\n    isDrawerOpen: false,\r\n    isHeaderOpen: false,\r\n    // themeType: 'light',\r\n    theme: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#3f51b5'\r\n            },\r\n            secondary: {\r\n                main: '#ff3d00'\r\n            }\r\n        },\r\n        typography: {\r\n            useNextVariants: true,\r\n        },\r\n    }\r\n}\r\n\r\nexport default General;","import initialState from \"../.././Data/General\";\r\nimport _ from 'lodash';\r\n\r\nfunction General(state, action) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState\r\n  }\r\n  switch (action.type) {\r\n    case \"PAGE_CHANGE\":\r\n      return {\r\n        ...state,\r\n        currentPage: action.page\r\n      }\r\n    case \"TOGGLE_HEADER\":\r\n      return {\r\n        ...state,\r\n        isHeaderOpen: !state.isHeaderOpen\r\n      }\r\n    case \"TOGGLE_DRAWER\":\r\n      return {\r\n        ...state,\r\n        isDrawerOpen: !state.isDrawerOpen\r\n      }\r\n    // case \"TOGGLE_THEME\":\r\n    //   return {\r\n    //     ...state,\r\n    //     themeType: action.theme\r\n    //   }\r\n    case \"CHANGE_THEME_PROPERTY\":\r\n      return {\r\n        ...state,\r\n        theme: {\r\n          ...state.theme,\r\n          ..._.set(state, `theme.${action.prop}`, action.value)\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default General;","import initialState from \"../.././Data/User\";\r\n\r\nfunction User(state, action) {\r\n    if (typeof state === 'undefined') {\r\n        return initialState\r\n    }\r\n    switch (action.type) {\r\n        case \"NAME_CHANGE\":\r\n            return {\r\n                ...state,\r\n                name: action.name\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default User;","/*\r\nimport slika from \".././Pictures/Uno_cards/blue_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/blue_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/red_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/red_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/green_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/green_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/yellow_0.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_1.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_2.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_3.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_4.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_5.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_6.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_7.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_8.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_9.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_picker.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_reverse.png\";\r\nimport slika from \".././Pictures/Uno_cards/yellow_skip.png\";\r\n\r\nimport slika from \".././Pictures/Uno_cards/wild_color_changer.png\";\r\nimport slika from \".././Pictures/Uno_cards/wild_pick_four.png\";\r\n*/\r\n\r\n//import karte from \".././Pictures/Uno_cards\";\r\n\r\n//console.log(karte)\r\n\r\nvar Uno = [\r\n    {\r\n        ID: 1,\r\n        Src: \"\",\r\n        Color: \"blue\",\r\n        Number: 0,\r\n    },\r\n    {\r\n        ID: 2,\r\n        Src: \"\",\r\n        Color: \"green\",\r\n        Number: 1,\r\n    },\r\n    {\r\n        ID: 3,\r\n        Src: \"\",\r\n        Color: \"yellow\",\r\n        Number: 2,\r\n    },\r\n];\r\n\r\nexport default Uno;","import initialState from \"../.././Data/Uno\";\r\n\r\nfunction Uno(state, action) {\r\n    if (typeof state === 'undefined') {\r\n        return initialState;\r\n    }\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default Uno;","var ToDoLists = [\r\n    {\r\n        ID: 1,\r\n        ListName: \"Kupovina\",\r\n        Archived: false,\r\n        Todos: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Hleb\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 2\r\n            },\r\n            {\r\n                ID: 11,\r\n                Text: \"Mleko\",\r\n                Completed: true,\r\n                Notes: \"Kupio ili ne?\",\r\n                Importance: 3\r\n            },\r\n            {\r\n                ID: 12,\r\n                Text: \"Sir\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 1\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        ID: 2,\r\n        ListName: \"Muzika\",\r\n        Archived: false,\r\n        Todos: [\r\n            {\r\n                ID: 44,\r\n                Text: \"LSD-Genius\",\r\n                Completed: false,\r\n                Notes: \"\",\r\n                Importance: 1\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default ToDoLists;","import initialState from '../../Data/ToDo';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction ToDoReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n\r\n        case 'NEW_TASK': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty(\"ID\") && data.hasOwnProperty(\"Task\")) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            Todos: [\r\n                                ...item.Todos, {\r\n                                    ...data.Task\r\n                                }\r\n                            ]\r\n                        }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'NEW_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DELETE_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'EDIT_LIST': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {...item};\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case \"DELETE_TASK\": {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID') && data.hasOwnProperty('Task')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            Todos: item.Todos.filter((Todo) => {\r\n                                if (Todo.ID !== data.Task.ID) {\r\n                                    return true;\r\n                                }\r\n                                return false;\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case \"EDIT_TASK\": {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty(\"ID\") && data.hasOwnProperty(\"Task\")) {\r\n                return deepFreeze(state.map((list) => {\r\n                    if (list.ID === data.ID) {\r\n                        return {\r\n                            ...list,\r\n                            Todos: list.Todos.map((task) => {\r\n                                if (task.ID === data.Task.ID) {\r\n                                    return {\r\n                                        ...task,\r\n                                        ...data.Task\r\n                                    }\r\n                                } else {\r\n                                    return task\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return list\r\n                    }\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ToDoReducer;","var Counters = [\r\n    {\r\n        ID: 1,\r\n        Title: \"Ključevi\",\r\n        Value: 3,\r\n        Date: new Date(),\r\n        Color: \"#000000\",\r\n        Goal: 6\r\n    },\r\n    {\r\n        ID: 2,\r\n        Title: \"Izgovorenih reči\",\r\n        Value: 23,\r\n        Date: new Date(),\r\n        Color: \"#4a148c\",\r\n        Goal: 50\r\n    },\r\n    {\r\n        ID: 3,\r\n        Title: \"Krugova\",\r\n        Value: 8,\r\n        Date: new Date(),\r\n        Color: \"#ff3d00\",\r\n        Goal: 120\r\n    },\r\n];\r\n\r\nexport default Counters;","import initialState from '../../Data/Counters';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction CountersReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n        case 'NEW_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'EDIT_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {\r\n                        ...item\r\n                    };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DELETE_COUNTER': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'INCREASE': {\r\n            const { data } = action;\r\n\r\n            if (data === 0 || !isNaN(data)) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data) {\r\n                        return {\r\n                            ...item,\r\n                            Value: item.Value + 1\r\n                        };\r\n                    }\r\n                    return { ...item };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case 'DECREASE': {\r\n            const { data } = action;\r\n\r\n            if (data === 0 || !isNaN(data)) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data) {\r\n                        return {\r\n                            ...item,\r\n                            Value: item.Value - 1\r\n                        };\r\n                    }\r\n                    return { ...item };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default CountersReducer;","var Notes = [\r\n    {\r\n        ID: 1,\r\n        Title: \"Faza tranzicije\",\r\n        Content: \"Fazu tranzicije osim privatizacije odlikuje tendencija opšte revitalizacije\",\r\n        Color: \"#4e342e\",\r\n        Date: new Date(),\r\n    },\r\n    {\r\n        ID: 2,\r\n        Title: \"Kampovanje\",\r\n        Content: \"1\",\r\n        Color: \"#0d47a1\",\r\n        Date: new Date(),\r\n    },\r\n    {\r\n        ID: 3,\r\n        Title: \"Vrh planine\",\r\n        Content: \"3\",\r\n        Color: \"#4a148c\",\r\n        Date: new Date(),\r\n    },\r\n]\r\n\r\nexport default Notes;","import initialState from '../../Data/Notes';\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction CountersReducer(state = deepFreeze(initialState), action) {\r\n    switch (action.type) {\r\n        case 'INITIAL_STATE':\r\n            return state;\r\n\r\n        case 'NEW_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data) {\r\n                return [\r\n                    ...state,\r\n                    {\r\n                        ...data\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        case 'EDIT_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.map((item) => {\r\n                    if (item.ID === data.ID) {\r\n                        return {\r\n                            ...item,\r\n                            ...data\r\n                        };\r\n                    }\r\n                    return {\r\n                        ...item\r\n                    };\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        case 'DELETE_NOTE': {\r\n            const { data } = action;\r\n\r\n            if (data && data.hasOwnProperty('ID')) {\r\n                return deepFreeze(state.filter((item) => {\r\n                    if (item.ID !== data.ID) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n\r\n            return state;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default CountersReducer;","const DefaultQuizes = [\r\n    {\r\n        ID: 1,\r\n        Name: \"Glavni gradovi\",\r\n        ShortDescription: \"Da li znaš koji je glavni grad koje države?\",\r\n        Color: \"#000\",\r\n        Tags: [],\r\n        Questions: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Srbija\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Abu Dabi\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Sofija\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Beograd\",\r\n                        Correct: true\r\n                    },\r\n                    {\r\n                        Text: \"Berlin\",\r\n                        Correct: false\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                ID: 2,\r\n                Text: \"Mađarska\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Vašington\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Berlin\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Tirana\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Budimpešta\",\r\n                        Correct: true\r\n                    },\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        ID: 2,\r\n        Name: \"Građa ćelije\",\r\n        ShortDescription: \"Šta je ćelija i od čega se sastoji?\",\r\n        Color: \"#0f0\",\r\n        Tags: [],\r\n        Questions: [\r\n            {\r\n                ID: 1,\r\n                Text: \"Koju ulogu imaju mitohondrije u ćeliji?\",\r\n                Answers: [\r\n                    {\r\n                        Text: \"Prenos signala\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Deoba\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Komunikacija sa drugim ćelijama\",\r\n                        Correct: false\r\n                    },\r\n                    {\r\n                        Text: \"Ćelijsko disanje\",\r\n                        Correct: true\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n]\r\n\r\nexport default DefaultQuizes;","import initialState from \"../.././Data/Quizes\";\r\nimport deepFreeze from 'deep-freeze';\r\n\r\nfunction Quizes(state, action) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState\r\n  }\r\n  switch (action.type) {\r\n    case \"qqq\":\r\n      return {};\r\n    case 'DELETE_QUIZ': {\r\n      const { data } = action;\r\n\r\n      if (data && data.hasOwnProperty('ID')) {\r\n        return deepFreeze(state.filter((item) => {\r\n          if (item.ID !== data.ID) {\r\n            return true;\r\n          }\r\n          return false;\r\n        }));\r\n      }\r\n\r\n      return state;\r\n    }\r\n    case 'NEW_QUIZ': {\r\n      const { data } = action;\r\n\r\n      if (data) {\r\n          return [\r\n              ...state,\r\n              {\r\n                  ...data\r\n              }\r\n          ];\r\n      }\r\n\r\n      return state;\r\n  }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default Quizes;","import {combineReducers} from \"redux\";\r\nimport General from \"./GeneralReducer\";\r\nimport User from \"./UserReducer\";\r\nimport Uno from \"./UnoReducer\";\r\nimport Todo from \"./ToDoReducer\";\r\nimport Counters from \"./CountersReducer\";\r\nimport Notes from \"./NotesReducer\";\r\nimport Quizes from \"./QuizesReducer\";\r\n\r\nexport default combineReducers({\r\n    General,\r\n    User,\r\n    Uno,\r\n    Todo,\r\n    Counters,\r\n    Notes,\r\n    Quizes,\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n// Reducer\r\nimport reducer from \"./Reducers/index\";\r\n// redux\r\nimport { createStore } from 'redux'\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(reducer)\r\n\r\n//console.log(store.getState())\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}